/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports =  true && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else {}\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash/lodash.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _lodash = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _verso = __webpack_require__(/*! ./verso */ \"./src/verso.js\");\n\nvar _recto = __webpack_require__(/*! ./recto */ \"./src/recto.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sortedRecto = _lodash2.default.orderBy(_recto.recto, function (o) {\n    return o.manuscript;\n});\n//console.log(verso.length, recto.length)\n\nconsole.log(getVersoMatch(\"1914-09-02\"));\n\nsortedRecto.forEach(function (item, index) {\n    var template = '\\n    <li>\\n        <div class=\"entry left ' + _lodash2.default.toLower(getDateStyle(item.date)) + '\">\\n            <h4>' + item.manuscript + '</h4>\\n        </div>\\n        <div class=\"point\"></div>\\n        <div class=\"entry right ' + _lodash2.default.toLower(getDateStyle(item.date)) + '\">\\n            <h4>' + getVersoMatch(item.date) + '</h4>\\n        </div>\\n    </li>\\n    ';\n    $('#list').append(template);\n});\n\nfunction getDateStyle(date) {\n    var dateObj = new Date(date);\n    var month = dateObj.toLocaleString('en-us', { month: 'short' });\n    return month;\n}\n\nfunction getVersoMatch(dater) {\n    var match = void 0;\n    _verso.verso.forEach(function (item) {\n        if (item.date === dater) {\n            match = item.manuscript;\n        }\n    });\n    return match;\n}\n\n/*\n<li>\n    <div class=\"entry left sep\">\n        <h4>1914-09-02 <br /> Ms-101,20r[2]</h4>\n    </div>\n    <div class=\"point\"></div>\n    <div class=\"entry right\">\n        <h4>Ms-101,20r[2]</h4>\n    </div>\n</li>\n<li>\n    <div class=\"entry left\">\n        <h4>Ms-101,20r[2]</h4>\n    </div>\n    <div class=\"point\"></div>\n    <div class=\"entry right\">\n        <h4>Ms-101,20r[2]</h4>\n    </div>\n</li>\n*/\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/recto.js":
/*!**********************!*\
  !*** ./src/recto.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar recto = exports.recto = [{\n    \"manuscript\": \"Ms-101,12r[2] et 13r[1] (1914--0902) (NB)\",\n    \"pt-number\": \"5\\u20223063\",\n    \"pt-page\": \"52[5]\",\n    \"tlp-number\": \"5\\u2022473 (2-3)**\",\n    \"cross-reference\": \"\\t22.8.14 (2)*  2.9.14 (1)**\\n\",\n    \"date\": \"1914-09-02\",\n    \"eng\": \"It must, in a certain sense be impossible for us to go wrong in logic. This is already partly expressed by saying: Logic must take care for itself. This is an extremely profound & important insight. [<i>Cf. 5.473 (2-3).]\\n\\n\\t\\t \\n\",\n    \"ger\": \"Wir m\\xFCssen in einem gewissen Sinne uns nicht in der Logik irren k\\xF6nnen. Dies ist schon teilweise / darin ausgedr\\xFCckt: Die Logik mu\\xDF f\\xFCr sich selbst sorgen. Dies ist eine ungemein tiefe & wichtige Erkenntnis.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,13r[3] et 14r[1] (1914--0903) (NB)\",\n    \"pt-number\": \"4\\u202210227254\",\n    \"pt-page\": \"35[6]\",\n    \"tlp-number\": \"4\\u20221274 (2)**\",\n    \"cross-reference\": \"\\t3.9.14 (1)+\\n\",\n    \"date\": \"1914-09-03\",\n    \"eng\": \"How can the task of philosophy be reconciled with logic\\u2019s having to look after itself? For example, if we ask: Is such and such a fact of the subject-predicate form? / then we must know what we mean by the \\\"subject-predicate form\\\". We must know <u>whether there is such a form at all. How can we know this? \\\"From the signs!\\\" But how? For we haven\\u2019t got any <u>signs of this form. To be sure, we can say: We have signs that behave like those of the subject-predicate form, but does that prove that there really must be facts of this form? Namely: if those signs are completely analyzed. And here the question is again: Is there such a complete analysis? <u>And <u>if <u>not: what is the task of philosophy then?!!? [<i>Cf. 4.1274 (2)] (~NB)\\n\\n\\t\\t \\n\",\n    \"ger\": \"     Wie ist es mit der Aufgabe der Philosophie vereinbar da\\xDF die Logik f\\xFCr sich selbst sorgen soll? Wenn wir z.B. fragen: ist die & die Tatsache von der Subjekt-Pr\\xE4dikat Form / dann m\\xFCssen wir doch wissen was wir unter der \\u201ESubjekt-Pr\\xE4dikat Form\\u201D verstehen. Wir m\\xFCssen wissen <u>ob es so eine Form \\xFCberhaupt gibt. Wie k\\xF6nnen wir dies wissen? \\u201EAus den Zeichen!\\u201D Aber wie? Wir haben ja gar keine <u>Zeichen von dieser Form. Wir k\\xF6nnen zwar sagen: Wir haben Zeichen die sich so benehmen wie solche von der Subjekt-Pr\\xE4dikat Form, aber beweist das da\\xDF es wirklich Tatsachen dieser Form geben mu\\xDF? N\\xE4mlich: wenn diese vollst\\xE4ndig analysiert sind. Und hier fr\\xE4gt es sich wieder: gibt es so eine vollst\\xE4ndige Analyse? <u>Und <u>wenn <u>nicht: Was ist denn dann die Aufgabe der Philosophie?!!?\\n\"\n}, {\n    \"manuscript\": \"Ms-101,17r[2] (1914--0904) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-09-04\",\n    \"eng\": \"If the existence of the subject-predicate <u>sentence does not show everything necessary, then it could surely only be shown by the existence of some specific fact of that form. And knowing such a fact cannot be essential for logic.\\n\\n \\t\\t \\n\",\n    \"ger\": \"Wenn nicht die Existenz des Subjekt-Pr\\xE4dikat <u>Satzes alles N\\xF6tige zeigt dann k\\xF6nnte es doch nur die Existenz irgend einer besonderen Tatsache jener Form zeigen. Und die Kenntnis einer solchen kann nicht f\\xFCr die Logik wesentlich sein.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,18r[5] (1914--0905) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-05\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-101,20r[2] (1914--0907) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-09-07\",\n    \"eng\": \"Remember that even an unanalyzed subject-predicate sentence is a clear statement of something <u>completely <u>definite.\\n\\n \\t\\t \\n\",\n    \"ger\": \"Bedenke da\\xDF auch ein unanalysierter Subjekt-Pr\\xE4dikat Satz etwas <u>ganz <u>Bestimmtes klar aussagt.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,21r[2] (1914--0908) (NB)\",\n    \"pt-number\": \"5\\u202230631\",\n    \"pt-page\": \"53[1]\",\n    \"tlp-number\": \"5\\u20224731*\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-09-08\",\n    \"eng\": \"There is only one way in which \\u201Cself-evidence\\u201D, which Russell mentioned so often, can become dispensable in logic: language itself is to forestall every logical mistake. And it is clear that that \\u201Cself-evidence\\u201D is and always was completely deceptive. [<i>Cf. 5.4731]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Das \\u201EEinleuchten\\u201D von dem Russell so viel sprach kann nur dadurch in der Logik entbehrlich werden da\\xDF die Sprache selbst jeden logischen Fehler verhindert. Und es ist klar da\\xDF jenes \\u201EEinleuchten\\u201D immer g\\xE4nzlich tr\\xFCgerisch ist & war.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,21r[3] (1914--0919) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-19\",\n    \"eng\": \"A proposition like \\\"this chair is brown\\\" seems to say something enormously complicated, for if we wanted to make this proposition explicit in a way that nobody could object to it because of its ambiguity, it would have to be infinitely long.\\n\\n\\n\",\n    \"ger\": \"Ein Satz wie \\u201Edieser Sessel ist braun\\u201D scheint etwas enorm Kompliziertes zu sagen, denn wollten wir diesen Satz so aussprechen da\\xDF uns niemand gegen ihn Einwendungen die aus seiner Vieldeutigkeit entspringen machen k\\xF6nnte so w\\xFCrde er endlos lang werden m\\xFCssen.\\n\\t\\t \"\n}, {\n    \"manuscript\": \"Ms-101,22r[1] (1914--0920) (NB)\",\n    \"pt-number\": \"4\\u202201\",\n    \"pt-page\": \"8[2]\",\n    \"tlp-number\": \"4\\u202201 (1)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-20\",\n    \"eng\": \"That a sentence is a logical depiction of its meaning is obvious to the unbiased eye.\\n \\t\\t \\n\",\n    \"ger\": \"<i>Da\\xDF <i>der Satz ein logisches Abbild seiner Bedeutung ist leuchtet dem unbefangenen Auge ein.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,25r[2] (1914--0921) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-21\",\n    \"eng\": \"Now it suddenly seems to me in some sense clear that a property of a state of things must always be internal.\\n\\n\\t\\t \\n\",\n    \"ger\": \"Es scheint mir jetzt pl\\xF6tzlich in irgend einem Sinne klar da\\xDF eine Eigenschaft eines Sachverhalts immer intern sein mu\\xDF.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,26r[2] (1914--0924) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-24\",\n    \"eng\": \" The question how a correlation of relations is possible is identical to the problem of truth.\\n\\n\\t\\t \\n\",\n    \"ger\": \"Die Frage, wie ist eine Zuordnung von Relationen m\\xF6glich, ist identisch mit dem Wahrheits-Problem.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,26r[3] (1914--0925) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-25\",\n    \"eng\": \"For that is identical with the question how the correlation of states of things is possible (one that signifies and one that is signified).\\n\\t\\t \\n\",\n    \"ger\": \"Denn dies ist identisch mit der Frage wie ist die Zuordnung von Sachverhalten m\\xF6glich (einem bezeichnenden & einem bezeichneten).\\n\"\n}, {\n    \"manuscript\": \"Ms-101,27r[1] (1914--0926) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-09-26\",\n    \"eng\": \"What is the basis for our - certainly well-founded - confidence that we will be able to express any sense we like in our two-dimensional writing?\\n\\n\\t \\n\",\n    \"ger\": \"Worauf gr\\xFCndet sich unsere \\u2013 sicher wohl begr\\xFCndete \\u2013 Zuversicht da\\xDF wir jeden beliebigen Sinn in unserer zweidimensionalen Schrift werden ausdr\\xFCcken k\\xF6nnen?!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,27r[2] (1914--0927) (NB)\",\n    \"pt-number\": \"4\\u2022071\",\n    \"pt-page\": \"48[3]\",\n    \"tlp-number\": \"4\\u202203 (4)\",\n    \"cross-reference\": \"\\t27.9.14 (1)**  3.10.14 (3)\\n\",\n    \"date\": \"14-09-27\",\n    \"eng\": \"A proposition can express its sense <u>only by being its logical depiction.\\n\\n \\t\\t \\n\",\n    \"ger\": \"Ein Satz kann seinen Sinn ja nur dadurch ausdr\\xFCcken da\\xDF er dessen logisches Abbild ist!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,27r[4] (1914--0929) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-09-29\",\n    \"eng\": \"The general concept of the proposition also carries with it an entirely general concept of the correlation of proposition and state of things: The answer to all my questions must be <u>extremely simple!\\n\\t \\n\",\n    \"ger\": \"<i>Der <i>allgemeine Begriff des Satzes f\\xFChrt auch einen ganz allgemeinen Begriff der Zuordnung von Satz und Sachverhalt mit sich: Die L\\xF6sung aller meiner Fragen mu\\xDF <u>h\\xF6chst einfach sein!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,29r[4] et 30r[1] (1914--0930) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-09-30\",\n    \"eng\": \" One could say that in our picture the right hand figure represents something and also the left hand one, <u>but even if this were not the case, their relative position could represent something. (Namely a relationship.)\\t\\t \\n\\n\\n\",\n    \"ger\": \"Man kann sagen in unserem Bilde stellt der Rechte etwas dar und auch der Linke, <u>aber selbst wenn dies nicht der Fall w\\xE4re so k\\xF6nnte / ihre gegenseitige Stellung etwas darstellen. (N\\xE4mlich eine Beziehung)\\n\"\n}, {\n    \"manuscript\": \"Ms-101,30r[4] (1914--1002) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-02\",\n    \"eng\": \"What connects a and c in \\\"aRb \\u2219 bSc\\\" is not the \\\" \\u2219 \\\" sign but <u>the <u>occurrence <u>of <u>the <u>same <u>letter \\\"b\\\" in the two simple sentences.\\n\\n\\n\",\n    \"ger\": \"Was in \\u201EaRb \\u2219 bSc\\u201D a & c verbindet ist nicht das \\u201E \\u2219 \\u201D Zeichen sondern <u>das <u>Vorkommen <u>desselben <u>Buchstaben \\u201Eb\\u201D in den beiden einfachen S\\xE4tzen.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,31r[3] (1914--1003) (NB)\",\n    \"pt-number\": \"4\\u2022072\",\n    \"pt-page\": \"48[5]\",\n    \"tlp-number\": \"4\\u2022032 (1)\",\n    \"cross-reference\": \"\\t3.10.14 (1)\\n\",\n    \"date\": \"1914-10-03\",\n    \"eng\": \"A proposition is a picture of a state of things only in <u>so <u>far as it is logically articulated. (A simple \\u2013 non-articulated \\u2013 sign can be neither true nor false). [<i>See 4.032 (1).]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Nur in <u>soweit ist der Satz ein Bild eines Sachverhalts als er logisch gegliedert ist! (Ein einfaches \\u2013 ungegliedertes \\u2013 Zeichen kann weder wahr noch falsch sein.)\\n\"\n}, {\n    \"manuscript\": \"Ms-101,32r[2] (1914--1004) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-10-04\",\n    \"eng\": \"It is clear that \\\"xRy\\\" can contain an element signifying a relation even if \\\"x\\\" & \\\"y\\\" do not signify anything. And then the relation is the only thing that is signified in that sign.\\n\\n\\t\\t \\n\",\n    \"ger\": \"Es ist klar da\\xDF in \\u201ExRy\\u201D das bezeichnende Element einer Relation enthalten sein kann auch wenn \\u201Ex\\u201D & \\u201Ey\\u201D nichts bezeichnen. Und dann ist die Relation das einzige was in jenem Zeichen bezeichnet wird.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,33r[1] (1914--1005) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-05\",\n    \"eng\": \"At any rate surely a simple sign can be correlated with the sense of a sentence. \\u2013\\u2013\\n\\n \\t\\t \\n\",\n    \"ger\": \"Jedenfalls kann man doch ein einfaches Zeichen dem Sinne eines Satzes zuordnen. \\u2013\\u2013\\n\"\n}, {\n    \"manuscript\": \"Ms-101,33r[5] et 34r[1] (1914--1006) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"14-10-06\",\n    \"eng\": \"The general concept of two complexes, one of which is the logical image of the other, and so \\nin one sense <u>is so.\\n \\t\\t \\n\\n\",\n    \"ger\": \"Der allgemeine Begriff zweier Komplexe von denen der eine das logische Bild des / \\nandern sein kann, also in <u>einem Sinne <u>ist.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,34r[4] (1914--1007) (NB)\",\n    \"pt-number\": \"5\\u2022234\",\n    \"pt-page\": \"36[1]\",\n    \"tlp-number\": \"5\\u2022442**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-07\",\n    \"eng\": \"If a proposition \\u03C6a is given, then <u>at <u>the <u>same <u>time all its logical functions (~\\u03C6a, etc.) are given. [<i>Cf. 5.442.]\\n \\t\\t \\n\",\n    \"ger\": \"Wenn ein Satz \\u03C6a gegeben ist so sind mit ihm auch <u>schon alle seine logischen Funktionen (~\\u03C6a etc.) mitgegeben!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,34r[5] (1914--1008) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-08\",\n    \"eng\": \"Complete and incomplete depiction of a state of things.\\n\\n\\t \\n\",\n    \"ger\": \"Vollst\\xE4ndige und unvollst\\xE4ndige Abbildung eines Sachverhaltes.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,35r[5] et 36r[1] (1914--1009) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-09\",\n    \"eng\": \"If there were such a thing as an immediate correlation of relations, the question would be: how are things that stand in these relations correlated with one another? Is there such a thing as a direct correlation of relations without considering their <u>sense?\\n\\n\\t\\t \\n\",\n    \"ger\": \"Wenn es eine unmittelbare Zuordnung von Relationen g\\xE4be so w\\xE4re die Frage: wie sind dann die Dinge zu einander zugeordnet die in diesen Relationen stehen? Gibt es / eine direkte Zuordnung von Relationen ohne R\\xFCcksicht auf ihren <u>Sinn?\\n\"\n}, {\n    \"manuscript\": \"Ms-101,36r[6] (1914--1010) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-10\",\n    \"eng\": \"Often one makes a remark and only later sees <u>how true it is.\\n\\t \\n\",\n    \"ger\": \"Oft macht man eine Bemerkung und sieht erst sp\\xE4ter <u>wie wahr sie ist.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,37r[1] (1914--1011) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-11\",\n    \"eng\": \"Our difficulty now lies in the fact that to all appearances analyzability, or its opposite, is not reflected in language. That is to say: we can <u>not, as it seems, gather from language alone whether there are, for example, real subject-predicate facts or not. But how could we <u>express this fact or its opposite? <u>This <u>must be <u>shown!\\n\\n \\t\\t \\n\",\n    \"ger\": \"Unsere Schwierigkeit liegt jetzt darin da\\xDF in der Sprache allem Anscheine nach die Analysierbarkeit oder das Gegenteil nicht wiedergespiegelt wird. Das hei\\xDFt: wir k\\xF6nnen, wie es scheint aus der Sprache allein <u>nicht entnehmen ob es z.B. wirkliche Subjekt-Pr\\xE4dikat Tatsachen gibt oder nicht. Wie aber k\\xF6nnten wir diese Tatsache oder ihr Gegenteil <u>ausdr\\xFCcken? <u>Dies <u>mu\\xDF <u>gezeigt werden!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,39r[4] (1914--1013) (NB)\",\n    \"pt-number\": \"5\\u20223062\",\n    \"pt-page\": \"52[4]\",\n    \"tlp-number\": \"5\\u2022473 (1)\",\n    \"cross-reference\": \"\\t22.8.14 (1)  13.10.14 (1)\\n\",\n    \"date\": \"1914-10-13\",\n    \"eng\": \"Logic takes care of itself; all we have to do is to look and see how it does it. [<i>Cf. 5 .473.]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Die Logik sorgt f\\xFCr sich selbst; wir m\\xFCssen ihr nur zusehen wie sie es macht.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,41r[4] et 42r[1] (1914--1014) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-14\",\n    \"eng\": \"Is there then such a thing as a science of completely generalized propositions? This sounds highly improbable.   \\n\\n<u>This <u>is <u>clear: If there are completely generalized <u>propositions, then their sense does not depend on any arbitrary assignment of signs! In that case, such a connection of signs can represent the world only by means of its own logical properties i.e. it cannot be false, and not be true. So there are no completely generalized propositions. But now the application!\\n\\n\\t\\t \\n\",\n    \"ger\": \"Gibt es denn eine Wissenschaft der vollst\\xE4ndig verallgemeinerten S\\xE4tze? Dies klingt h\\xF6chst unwahrscheinlich. / <u>Das <u>ist <u>klar: Wenn es v\\xF6llig verallgemeinerte <u>S\\xE4tze gibt, dann h\\xE4ngt ihr Sinn von keiner willk\\xFCrlichen Zeichengebung mehr ab! Dann aber kann eine solche Zeichenverbindung die Welt nur durch ihre eigenen logischen Eigenschaften darstellen d.h. sie kann nicht falsch, & nicht wahr sein. Also gibt es keine vollst\\xE4ndig verallgemeinerten S\\xE4tze. Aber jetzt die Anwendung!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,43r[4] et 44r[1] (1914--1015) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-15\",\n    \"eng\": \"Yet it does <u>not look as if the mere existence of the forms contained in \\\"(\\u2203x,\\u03C6).\\u03C6x\\\" could <u>by <u>itself determine the truth or falsity of this proposition! So it does not appear <u>unthinkable that, e.g., the negation of no elementary proposition should be true. But wouldn\\u2019t this statement already concern the sense <u>of <u>negation?\\n\\n \\t\\t \\n\",\n    \"ger\": \"Es scheint doch als k\\xF6nnte die blo\\xDFe Existenz der in \\u201E(\\u2203x,\\u03C6).\\u03C6x\\u201D enthaltenen / Formen die Wahr- oder Falschheit dieses Satzes <u>allein <u>nicht bestimmen! Es scheint also nicht <u>undenkbar da\\xDF, z.B., die Verneinung keines Elementarsatzes wahr sei. Aber w\\xFCrde diese Aussage nicht schon den Sinn <u>der <u>Verneinung betreffen?\\n\"\n}, {\n    \"manuscript\": \"Ms-101,46r[3] et 47r[1] (1914--1016) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-16\",\n    \"eng\": \"Now, however, it looks as if exactly the same reasons I used to show that \\\"(\\u2203x,\\u03C6) . \\u03C6(x)\\\" <u>could not be false, are also reasons that can be used to show that \\\"~ (\\u2203x,\\u03C6) . \\u03C6(x)\\\" could not be false; and here a fundamental mistake becomes apparent. For it is quite impossible to see why just the first proposition and not the second is supposed to be a tautology. But don\\u2019t forget that also the contradiction \\\"p \\u2219 ~p\\\" etc. etc. can't be true and is nevertheless itself a logical formation.\\n\\n \\t\\t \\n\",\n    \"ger\": \"Nun scheint es aber als spr\\xE4chen genau dieselben Gr\\xFCnde die ich anf\\xFChrte um zu zeigen da\\xDF \\u201E(\\u2203x,\\u03C6) . \\u03C6(x)\\u201D nicht falsch sein <u>k\\xF6nne, als spr\\xE4chen diese Gr\\xFCnde auch daf\\xFCr da\\xDF \\u201E~ (\\u2203x,\\u03C6) . \\u03C6(x)\\u201D nicht / falsch sein k\\xF6nne; und hier zeigt sich ein grundlegender Fehler. Denn es ist gar nicht einzusehen warum gerade der erste Satz & nicht der zweite eine Tautologie sein soll. Vergi\\xDF doch nicht da\\xDF auch die Kontradiktion \\u201Ep \\u2219 ~p\\u201D etc. etc. nicht wahr sein kann & doch selbst ein logisches Gebilde ist.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,47r[4] et 48r[1] (1914--1017) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-17\",\n    \"eng\": \"If there are entirely general propositions then it looks as if such propositions were trial arrangements of \\\"logical constants\\\". (!)\\n \\t\\t \\n\\n\",\n    \"ger\": \"Wenn es ganz allgemeine S\\xE4tze gibt so / scheint es also als w\\xE4ren solche S\\xE4tze probeweise Zusammenstellungen \\u201Elogischer Konstanten\\u201D. (!)\\n\"\n}, {\n    \"manuscript\": \"Ms-101,50r[3] (1914--1018) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-18\",\n    \"eng\": \"My mistake obviously lies in a false conception of logical depiction by a proposition.\\n \\t\\t \\n\",\n    \"ger\": \"Mein Fehler liegt offenbar in einer falschen Auffassung der logischen Abbildung durch den Satz.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,51r[2] (1914--1019) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-19\",\n    \"eng\": \"The description of the world by means of propositions is only possible because what is signified is not its own sign! Application -.\\n\\n \\t\\t \\n\",\n    \"ger\": \"Die Beschreibung der Welt durch S\\xE4tze ist nur dadurch m\\xF6glich da\\xDF das Bezeichnete nicht sein eigenes Zeichen ist! Anwendung \\u2013.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,55r[2] (1914--1021) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-21\",\n    \"eng\": \"Isn't the Russellian definition of zero nonsensical? Can one speak of a class x\\u0302 (x \\u2260 x) at all? \\u2013 Can one speak of a class x\\u0302 (x = x)? Is then x \\u2260 x or x = x a function of x?? - Must not 0 be defined by means of the <u>hypothesis (\\u2203\\u03C6):(x)~\\u03C6x? And something analogous would hold of all other numbers. Now this throws light on the whole question about the existence of numbers of things.\\n \\t\\t \\n\\n\",\n    \"ger\": \"Ist die Russellsche Definition der Null nicht unsinnig? Kann man von einer Klasse x\\u0302 (x \\u2260 x) \\xFCberhaupt reden? \\u2013 Kann man denn von einer Klasse x\\u0302 (x = x) reden? Ist denn x \\u2260 x oder x = x eine Funktion von x?? \\u2013 Mu\\xDF nicht die Null definiert werden durch die <u>Hypothese (\\u2203\\u03C6):(x)~\\u03C6x? Und Analoges w\\xFCrde von allen anderen Zahlen gelten. Dies nun wirft ein Licht auf die ganze Frage nach der Existenz von Anzahlen von Dingen.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,56r[4] et 57r[1] et 58r[1] (1914--1022) (NB)\",\n    \"pt-number\": \"3\\u202223\",\n    \"pt-page\": \"24[10]\",\n    \"tlp-number\": \"3\\u202234 (2)*\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-22\",\n    \"eng\": \"In a proposition something must be identical with its meaning, but a proposition cannot be identical with its meaning, and so something in it must <u>not be identical with its meaning. (A proposition is a formation with the logical features of what it represents and with other features as well, which will be arbitrary and different in different sign-languages). So there must be different formations with the same logical features; what is represented will be one of them, and the representation will need to distinguish it from other formations with the same logical features. (Since otherwise the representation would be ambiguous). Now this part of the representation (the naming) must happen by means of arbitrary assignations. Thus, every proposition must contain features with arbitrarily assigned meanings. [<i>Cf. 3.34 (2).]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Im Satz mu\\xDF etwas mit seiner / Bedeutung identisch sein, der Satz darf aber nicht mit seiner Bedeutung identisch sein, also mu\\xDF etwas in ihm mit seiner Bedeutung <u>nicht identisch sein. (Der Satz ist ein Gebilde mit den logischen Z\\xFCgen des Dargestellten und mit noch anderen Z\\xFCgen, diese nun werden willk\\xFCrlich sein und in verschiedenen Zeichensprachen verschieden.) Es mu\\xDF also verschiedene Gebilde mit denselben logischen Z\\xFCgen geben; das Dargestellte wird eines von diesen sein und es wird sich bei der Darstellung darum handeln dieses von anderen Gebilden mit denselben logischen Z\\xFCgen zu unterscheiden (da ja sonst die Darstellung nicht eindeutig w\\xE4re). Dieser Teil der Darstellung (die Namengebung) mu\\xDF nun durch willk\\xFCrliche Bestimmungen geschehen. Es mu\\xDF darnach also jeder Satz Z\\xFCge mit willk\\xFCrlich bestimmten / Bedeutungen enthalten.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,58r[4] (1914--1023) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-23\",\n    \"eng\": \"On the one hand my theory of logical depiction seems to be the only possible one, on the other hand there seems to be an insoluble contradiction in it!\\n\\n \\t\\t \\n\",\n    \"ger\": \"Einerseits scheint meine Theorie der logischen Abbildung die einzig m\\xF6gliche andererseits scheint in ihr ein unl\\xF6slicher Widerspruch zu sein!\\n\"\n}, {\n    \"manuscript\": \"Ms-101,60r[2] (1914--1024) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-24\",\n    \"eng\": \"In order to be able to frame a statement at all, we must - in some sense \\u2013 know how things stand if the statement is true (and that is just what we depict).  [<i>Cf. 4.024.]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Um \\xFCberhaupt eine Aussage machen zu k\\xF6nnen m\\xFCssen wir \\u2013 in einem Sinne \\u2013 wissen wie es sich verh\\xE4lt wenn die Aussage wahr ist (und dies bilden wir eben ab).\\n\"\n}, {\n    \"manuscript\": \"Ms-101,61r[3] (1914--1025) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-25\",\n    \"eng\": \"But why do you never investigate an individual particular sign to find out how it is a logical depiction?\\n\\n \\t\\t \\n\",\n    \"ger\": \"Warum aber untersuchst Du nie ein einzelnes spezielles Zeichen auf die Art & Weise hin wie es logisch abbildet?\\n\"\n}, {\n    \"manuscript\": \"Ms-101,63r[2] (1914--1026) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-26\",\n    \"eng\": \"So it looks as if the logical <u>identity of sign and what it signifies were not necessary but only <u>an internal, <u>logical, relation between the two. (The holding of such a relation incorporates in a certain sense the holding of a kind of fundamental - internal - identity).\\n\\n \\t\\t \\n\",\n    \"ger\": \"Es scheint also als w\\xE4re nicht die logische <u>Identit\\xE4t von Zeichen & Bezeichnetem n\\xF6tig sondern nur <u>eine interne, <u>logische, Relation zwischen beiden. (Das Bestehen einer solchen schlie\\xDFt in gewissem Sinne das Bestehen einer Art grundlegender \\u2013 interner \\u2013 Identit\\xE4t mit ein.)\\n\"\n}, {\n    \"manuscript\": \"Ms-101,64r[3] (1914--1027) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-27\",\n    \"eng\": \"\",\n    \"ger\": \"\\u201Ex = y\\u201D ist <u>keine Satzform. (Folgen)\\n\\n\\\"x = y\\\" is <u>not a propositional form. (Consequences.)\\n\\n \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-101,65r[6] et 66r[1] (1914--1028) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-28\",\n    \"eng\": \"What the pseudo-proposition \\\"there are n things\\\" tries to express is shown in language by the presence of n proper names with different meanings. (Etc.)\\n\\n \\t\\t \\n\",\n    \"ger\": \"Was der Scheinsatz \\u201Ees gibt n Dinge\\u201D ausdr\\xFCcken will zeigt sich in der Sprache durch das Vorhandensein / von n Eigennamen mit verschiedener Bedeutung. (etc.)\\n\"\n}, {\n    \"manuscript\": \"Ms-101,66r[3] et 67r[1] (1914--1029) (NB)\",\n    \"pt-number\": \"5\\u2022326\",\n    \"pt-page\": \"63[4]\",\n    \"tlp-number\": \"5\\u20225262**\",\n    \"cross-reference\": \"\\t28.10.14 (2,3)* 29.10.14 (1)\\n\",\n    \"date\": \"1914-10-29\",\n    \"eng\": \"For, if an elementary proposition is true, then, at any rate, <i>yet <i>another elementary proposition is true, and conversely. [<i>See 5.5262.]\\n\\n \\t\\t \\n\",\n    \"ger\": \"Denn, wenn ein Elementarsatz wahr ist so ist doch jedenfalls / ein Elementarsatz <u>mehr, wahr, u. u.\\n\"\n}, {\n    \"manuscript\": \"Ms-101,69r[4] (1914--1030) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-10-30\",\n    \"eng\": \"Could we say: In \\\"~\\u03C6(x)\\\" \\\"\\u03C6.(x)\\\" betokens how things are <u>not?\\n\\n \\t\\t \\n\",\n    \"ger\": \"K\\xF6nnte man sagen: \\u201Ein \\u201E~\\u03C6(x)\\u201D stellt \\u201E\\u03C6.(x)\\u201D vor wie es sich <u>nicht verh\\xE4lt\\u201D?\\n\"\n}, {\n    \"manuscript\": \"Ms-101,8r[4] (1914--0822) (NB)\",\n    \"pt-number\": \"5\\u20223062\",\n    \"pt-page\": \"52[4]\",\n    \"tlp-number\": \"5\\u2022473 (1)\",\n    \"cross-reference\": \"\\t22.8.14 (1)  13.10.14 (1)\\n\",\n    \"date\": \"1914-08-22\",\n    \"eng\": \"Logic must take care of itself. [5.473 (1)]\\n\\n\\n\",\n    \"ger\": \"Die Logik mu\\xDF f\\xFCr sich selber sorgen.\\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,100r[3] (1915--0520) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-20\",\n    \"eng\": \"A complex just is a thing!\\n\\n21.5.15.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ein Komplex ist eben ein Ding! \\n\"\n}, \"date\", \"1915-05-20\"), {\n    \"manuscript\": \"Ms-102,101r[4] (1915--0523) (NB)\",\n    \"pt-number\": \"5\\u2022335\",\n    \"pt-page\": \"59[6]\",\n    \"tlp-number\": \"5\\u20226\",\n    \"cross-reference\": \"\\t23.5.15 (1)\\n\",\n    \"date\": \"1915-05-23\",\n    \"eng\": \"<u>The <u>limits <u>of <u>my <u>language mean the limits of my world. [5.6]\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"<u>Die <u>Grenzen <u>meiner <u>Sprache bedeuten die Grenzen meiner Welt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,105r[3] et 106r[1] (1915--0524) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-24\",\n    \"eng\": \"Even though we have no acquaintance with simple objects we <u>do <u>know complex objects by acquaintance, we know by acquaintance that they are complex. \\u2014And that in the end they must consist of simple things?\\n     For example, we single out a part of our field of vision, we see that it is still complex, that a part of it is still complex but already simpler, and so on....\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wenn wir auch die einfachen Gegenst\\xE4nde nicht aus der Anschauung kennen; die komplexen Gegenst\\xE4nde <u>kennen wir aus der Anschauung, wir wissen aus  / der Anschauung da\\xDF sie komplex sind. \\u2013 Und da\\xDF sie zuletzt aus einfachen Dingen bestehen m\\xFCssen? \\n     Wir nehmen zum Beispiel aus unserem Gesichtsfeld einen Teil heraus, wir sehen da\\xDF er noch immer komplex ist, da\\xDF ein Teil von ihm noch immer komplex aber schon einfacher ist, u.s.w.\\u2013 \\n\"\n}, {\n    \"manuscript\": \"Ms-102,107r[2] (1915--0525) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-25\",\n    \"eng\": \"Does the visual image of a <i>minimum <i>visibile really strike us as indivisible? What has extension is divisible. Are there parts of our visual field that have <u>no extension? For instance, images of the fixed stars?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Erscheint uns das Gesichtsbild eines minimum visibile wirklich als unteilbar? Was Ausdehnung hat ist teilbar. Gibt es Teile in unserem Gesichtsbild die <u>keine Ausdehnung haben? Etwa die der Fixsterne? \\u2013 \\n\"\n}, {\n    \"manuscript\": \"Ms-102,109r[2] (1915--0526) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-26\",\n    \"eng\": \"But how am I to explain the general nature of the proposition now? We can surely say: everything that is (or is not) the case can be pictured by means of a proposition. But here we have the expression \\\"<u>to <u>be <u>the <u>case\\\"! It is just as problematic.\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wie aber soll ich jetzt das allgemeine Wesen des <u>Satzes erkl\\xE4ren? Wir k\\xF6nnen wohl sagen: alles, was der Fall ist (oder nicht ist) kann durch einen Satz abgebildet werden. Aber hier haben wir den Ausdruck \\u201E<u>der <u>Fall <u>sein\\u201D! Er ist ebenso problematisch. \\n\\n\"\n}, {\n    \"manuscript\": \"Ms-102,111r[3] (1915--0528) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-28\",\n    \"eng\": \"\\\"Composite sign\\\" and \\\"sentence\\\" have the <u>same <u>meaning.\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"\\u201EZusammengesetztes Zeichen\\u201D und \\u201ESatz\\u201D sind <u>gleichbedeutend. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,111r[5] et 112r[1] (1915--0529) (NB)\",\n    \"pt-number\": \"5\\u20223353\",\n    \"pt-page\": \"60[2]\",\n    \"tlp-number\": \"5\\u202262 (3)*\",\n    \"cross-reference\": \"\\t29.5.15 (1, 5)+\\n\",\n    \"date\": \"1915-05-29\",\n    \"eng\": \"But is <u>language the <u>only language? \\n     Why shouldn\\u2019t there be a form of expression in which I can speak <u>about language in such a way that it can appear to me in coordination with something else?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Aber ist die <u>Sprache, die <u>einzige  / Sprache? \\n     Warum soll es nicht eine Ausdrucksweise geben mit der ich <u>\\xFCber die Sprache reden kann, so da\\xDF diese mir in Koordination mit etwas Anderem erscheinen kann? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,112r[5] et 113r[1] (1915--0530) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-30\",\n    \"eng\": \"Words are like the surface of deep water. \\nIt is clear that it comes to the same thing to ask what a proposition is as to ask what a fact is - or a complex.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Worte sind wie die Haut  / auf einem tiefen Wasser. \\nEs ist klar da\\xDF es auf dasselbe hinauskommt zu fragen, was ist ein Satz, wie zu fragen was ist eine Tatsache \\u2013 oder ein Komplex.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,116r[3] (1915--0531) (NB)\",\n    \"pt-number\": \"5\\u2022323\",\n    \"pt-page\": \"62[4]\",\n    \"tlp-number\": \"5\\u2022526 (1)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-31\",\n    \"eng\": \"Using names in a description of the world one cannot achieve more than one can with a general world description!!!\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Mit der Weltbeschreibung durch Namen kann man nicht mehr leisten als mit der allgemeinen Weltbeschreibung!!! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,117r[2] (1915--0601) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-01\",\n    \"eng\": \"The great problem around which everything I write turns is: Is there an order in the world <i>a <i>priori, and if so, what does it consist in?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das gro\\xDFe Problem um welches sich alles dreht, was ich schreibe, ist: Ist, a priori, eine Ordnung in der Welt, und wenn, ja, worin besteht sie? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,118r[2] (1915--0602) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-02\",\n    \"eng\": \"I said: \\\"A tautology is affirmed by <u>every proposition\\\"; but that doesn\\u2019t yet say enough to tell us why it isn\\u2019t a <u>proposition. For does that already tell us <u>why a proposition can\\u2019t be affirmed by p <u>and ~p?!\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ich sagte: \\u201EEine Tautologie wird von <u>jedem Satze bejaht\\u201D; damit ist aber noch nicht gesagt, warum sie kein <u>Satz ist. Ist denn damit schon gesagt <u>warum ein Satz nicht von p <u>und von ~p bejaht werden kann?! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,119r[4] (1915--0603) (NB)\",\n    \"pt-number\": \"5\\u202206\",\n    \"pt-page\": \"12[8]\",\n    \"tlp-number\": \"5\\u202214\",\n    \"cross-reference\": \"\\t3.6.15 (1)+  11.6.15 (4,5)+\\n\",\n    \"date\": \"1915-06-03\",\n    \"eng\": \"One could surely say: <u>That proposition from which the most follows says the most. [<i>Cf. 5.14.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Man k\\xF6nnte wohl sagen: <u>Der Satz sagt am meisten, aus welchem am meisten folgt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,11r[2] (1914--1103) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-03\",\n    \"eng\": \"For for there to be a negative state of things, there must be a picture of the positive state of things. [Cf. 5.5151.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Damit es den negativen Sachverhalt geben kann mu\\xDF es das Bild des positiven geben. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,123r[5] et 124r[1] (1915--0604) (NB)\",\n    \"pt-number\": \"5\\u2022315\",\n    \"pt-page\": \"62[3]\",\n    \"tlp-number\": \"5\\u2022515**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-04\",\n    \"eng\": \"\\\"p.q\\\" only makes sense if \\\"p \\u2335 q\\\" makes sense.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,131r[3] et 132r[1] (1915--0608) (NB)\",\n    \"pt-number\": \"6\\u20221214\",\n    \"pt-page\": \"66[3]\",\n    \"tlp-number\": \"6\\u20221264 (2)*                 8.6.15 (1)**\\n \\n8.6.15.\\nJeder \\u201Emathematische Satz\\u201D ist ein in Zeichen dargestellter  / Modus ponens. (Und es ist klar, da\\xDF man den Modus ponens nicht in einem Satz ausdr\\xFCcken kann.) \\n\\nEvery \\\"mathematical proposition\\\" is a <i>modus <i>ponens set out in signs. (And clearly <i>modus <i>ponens cannot be expressed in a proposition). [<i>Cf. 6.1264 (2).]\\n\\n  \",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-08\",\n    \"eng\": \"Every \\\"mathematical proposition\\\" is a <i>modus <i>ponens set out in signs. (And clearly <i>modus <i>ponens cannot be expressed in a proposition). [<i>Cf. 6.1264 (2).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Jeder \\u201Emathematische Satz\\u201D ist ein in Zeichen dargestellter  / Modus ponens. (Und es ist klar, da\\xDF man den Modus ponens nicht in einem Satz ausdr\\xFCcken kann.) \\n\"\n}, {\n    \"manuscript\": \"Ms-102,132r[3] (1915--0609) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-09\",\n    \"eng\": \"Of course, one could simply say: the negation of p is the proposition which has no proposition in common with p.\\n\\n\\t \\n\",\n    \"ger\": \"Man k\\xF6nnte nat\\xFCrlich einfach so sagen: Die Verneinung von p ist der Satz welcher keinen Satz mit p gemeinsam hat. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,134r[2] (1915--0610) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-10\",\n    \"eng\": \"\",\n    \"ger\": \"\\u201C<u>p \\u2219 <u>q \\u2335 ~<u>q\\u201D <u>ist <u>von \\u201E<u>q\\u201D nicht <u>abh\\xE4ngig!! \\n\\n\\\"<u>p \\u2219 <u>q \\u2335 ~<u>q\\\" <u>is not <u>dependent <u>on \\\"<u>q\\\"!!\\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-102,138r[2] (1915--0612) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-12\",\n    \"eng\": \"Considering any proposition, one could by rights ask: What does it come to if it is true? What does it come to if it is false?\\n     Now the \\\"assumption\\\" in p.~p is never anything but false, and so doesn\\u2019t come to anything; and as for what it would come to if it were true, of course, one cannot ask at all.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Man k\\xF6nnte eigentlich bei jedem Satz fragen: Was hat es zu bedeuten, wenn er wahr ist, was hat es zu bedeuten wenn er falsch ist. \\n     Nun ist p.~p seiner Annahme nach immer nur falsch, und hat also nichts zu bedeuten; und wieviel es bedeutet wenn er wahr ist kann man ja gar nicht fragen. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,138r[3] et 139r[1] (1915--0613) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-13\",\n    \"eng\": \"If \\\"p.~p\\\" could be true, it would indeed say a <u>very great deal. But the <u>assumption that it is true does not come in question in connection with it, as the \\\"assumption\\\" in it is always false.\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wenn \\u201Ep.~p\\u201D wahr sein k\\xF6nnte, so w\\xFCrde es allerdings <u>sehr  / viel besagen. Aber <u>die <u>Annahme da\\xDF es wahr ist kommt eben bei ihm nicht in Betracht da es seiner Annahme nach immer falsch ist. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,141r[2] (1915--0614) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-14\",\n    \"eng\": \"We have thus become clear that names may and do stand for the greatest variety of forms, and that it is only the syntactic application that characterizes the form to be represented. \\n     Now what is the syntactic application of names of simple objects?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wir sind uns also dar\\xFCber klar geworden da\\xDF Namen f\\xFCr die verschiedensten Formen stehen, und stehen d\\xFCrfen, und da\\xDF nun erst die syntaktische Anwendung die darzustellende Form charakterisiert. \\n     Was ist nun die syntaktische Anwendung von Namen einfacher Gegenst\\xE4nde? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,146r[2] (1915--0616) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-16\",\n    \"eng\": \"Now let's see whether this watch actually meets all the conditions for being a \\\"simple object.\\\".\\u2014\\u2014\\n  \\t\\t \\n\",\n    \"ger\": \"Wir wollen jetzt einmal sehen, ob diese Uhr tats\\xE4chlich allen Bedingungen entspricht um ein \\u201Eeinfacher Gegenstand\\u201D zu sein. \\u2013 \\n\"\n}, {\n    \"manuscript\": \"Ms-102,152r[2] (1915--0617) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-17\",\n    \"eng\": \"Let us assume that every spatial object consists of an infinite number of points, then it is clear that I cannot mention them all by name when I speak of that object. So here would be a case where I <u>cannot get to the complete analysis in the old sense at all; and perhaps just this is the usual case.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Nehmen wir an jeder r\\xE4umliche Gegenstand bestehe aus unendlich vielen Punkten, dann ist es klar da\\xDF ich diese nicht alle namentlich anf\\xFChren kann wenn ich von jenem Gegenstand spreche. Hier w\\xE4re also ein Fall wo ich zur vollst\\xE4ndigen Analyse im alten Sinne gar nicht kommen <u>kann; und vielleicht ist gerade dieser der gew\\xF6hnliche Fall. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,160r[2] (1915--0618) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-18\",\n    \"eng\": \"If the complexity of an object is definitive of the sense of a proposition, then it must be depicted in a proposition to the extent that it does decide its sense. And to the extent that its composition is <u>not definitive of <u>this sense, to this extent the objects of this proposition are <u>simple. They <u>cannot be further decomposed. \\u2014\\u2014\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ist die Zusammengesetztheit eines Gegenstandes f\\xFCr den Sinn eines Satzes bestimmend, dann mu\\xDF sie soweit im Satze abgebildet sein als sie seinen Sinn bestimmt. Und soweit die Zusammensetzung f\\xFCr <u>diesen Sinn <u>nicht bestimmend ist, soweit sind die Gegenst\\xE4nde dieses Satzes <u>einfach. Sie <u>k\\xF6nnen nicht weiter zerlegt werden. \\u2013 \\n\"\n}, {\n    \"manuscript\": \"Ms-102,168r[3] (1915--0619) (NB)\",\n    \"pt-number\": \"6\\u2022005\",\n    \"pt-page\": \"93[7]\",\n    \"tlp-number\": \"5\\u20225423 (1) \",\n    \"cross-reference\": \"\\t19.6.15 (1)+\\n\",\n    \"date\": \"1915-06-19\",\n    \"eng\": \"When we see that our visual field is complex, we also see that it consists of <u>simpler parts.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wenn wir sehen da\\xDF unser Gesichtsbild komplex ist so sehen wir aber auch da\\xDF es aus <u>einfacheren Teilen besteht. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,173r[2] (1915--0620) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-20\",\n    \"eng\": \"Yes, this is the question: Can we legitimately apply logic as written down, say in <i>Principia <i>Mathematica, to <u>ordinary <u>propositions without further ado?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"      Ja, darum handelt es sich: K\\xF6nnen wir mit Recht die Logik wie sie etwa in den \\u201EPrincipia Mathematica\\u201D steht ohne weiteres auf die <u>gebr\\xE4uchlichen <u>S\\xE4tze anwenden?\\n\"\n}, {\n    \"manuscript\": \"Ms-102,17r[4] (1914--1104) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-04\",\n    \"eng\": \"How does a proposition trace out a logical locus?\\n\\n\\t\\t \\n\",\n    \"ger\": \"Wie bestimmt der Satz den logischen Ort? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,183r[2] (1915--0621) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-21\",\n    \"eng\": \"Our difficulty was that we were always speaking of simple objects and didn\\u2019t know of a single instance.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Unsere Schwierigkeit war doch die da\\xDF wir immer von einfachen Gegenst\\xE4nden sprachen und nicht einen einzigen anzuf\\xFChren wu\\xDFten. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,187r[2] (1915--0622) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-06-22\",\n    \"eng\": \"Then it is also clear to <u>the unprejudiced <u>mind that the sense of the proposition \\\"The watch is lying on the table\\\" is more complicated than the proposition itself.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Es ist also auch <u>dem unbefangenen <u>Geist klar da\\xDF der Sinn des Satzes \\u201Edie Uhr liegt auf dem Tisch\\u201D komplizierter ist als der Satz selbst. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,19r[2] (1914--1105) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-05\",\n    \"eng\": \"In this way, a proposition represents a state of things on its own terms, as it were.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"So stellt der Satz den Sachverhalt gleichsam auf eigene Faust dar. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,1r[4] et 2r[1] (1914--1031) (NB)\",\n    \"pt-number\": \"5\\u2022325\",\n    \"pt-page\": \"63[2]\",\n    \"tlp-number\": \"5\\u20225261 (1)*\",\n    \"cross-reference\": \"\\t31.10.14 (1)*\\n\",\n    \"date\": \"14-10-31\",\n    \"eng\": \"A proposition like \\\"(\\u2203x,\\u03C6).\\u03C6x\\\" is just as composite as an elementary one. This shows itself in our needing to mention \\\"\\u03C6\\\" & \\\"x\\\" <u>explicitly in the brackets. Both symbols independently stand in signifying relations to the world, just as in the case of an elementary proposition \\\"\\u03C8(a)\\\". [<i>Cf 5.5261.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ein Satz wie \\u201E(\\u2203x,\\u03C6).\\u03C6x\\u201D ist gerade so gut zusammengesetzt wie ein elementarer; / dies zeigt sich darin da\\xDF wir in der Klammer \\u201E\\u03C6\\u201D & \\u201Ex\\u201D <u>extra erw\\xE4hnen m\\xFCssen. Beide stehen \\u2013 unabh\\xE4ngig \\u2013 in bezeichnenden Beziehungen zur Welt, gerade wie im Falle eines Elementarsatzes \\u201E\\u03C8(a)\\u201D.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,22r[4] (1914--1107) (NB)\",\n    \"pt-number\": \"3\\u20222103\",\n    \"pt-page\": \"43[5]\",\n    \"tlp-number\": \"3\\u2022411\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-07\",\n    \"eng\": \"A spatial and a logical locus agree to this extent: that each is the source of something\\u2019s existence. [3.411.]\\n\\n\\t \\n\",\n    \"ger\": \"Der r\\xE4umliche & der logische Ort stimmen darin \\xFCberein da\\xDF beide die M\\xF6glichkeit einer Existenz sind. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,23r[1] (1914--1108) (NB)\",\n    \"pt-number\": \"5\\u20220934\",\n    \"pt-page\": \"78[8]\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\\t8.11.14 (1)**\\n\",\n    \"date\": \"1914-11-08\",\n    \"eng\": \"What can be confirmed by experiment, in propositions about probability, cannot possibly be mathematics. [<i>Cf. 5.154 (1-2).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Was sich in den S\\xE4tzen \\xFCber Wahrscheinlichkeit durch das Experiment best\\xE4tigen l\\xE4\\xDFt kann unm\\xF6glich Mathematik sein! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,24r[2] (1914--1109) (NB)\",\n    \"pt-number\": \"5\\u20220931\",\n    \"pt-page\": \"78[5]\",\n    \"tlp-number\": \"5\\u2022156 (3)* \",\n    \"cross-reference\": \"\\t9.11.14 (1)+\\n\",\n    \"date\": \"1914-11-09\",\n    \"eng\": \"Now what I know now in probability statements are certain general properties of ungeneralized scientific propositions such as, for example, their symmetry in certain respects, their asymmetry in others, etc. [<i>Cf. 5.156 (3).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Was ich nun in den Wahrscheinlichkeitss\\xE4tzen kenne, sind gewisse allgemeine Eigenschaften der unverallgemeinerten naturwissenschaftlichen S\\xE4tze wie z.B. ihre Symmetrie in gewissen Beziehungen ihre Asymmetrie in anderen etc. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,26r[1] (1914--1110) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-10\",\n    \"eng\": \"If I say \\\"p is possible\\\", does that mean that \\\" 'p' makes sense\\\"? Is the former proposition talking about language in such a way that the existence of a propositional sign (\\\"p\\\") is essential for its sense? (Then it would be quite unimportant.) But doesn't it rather try to say what \\\"p \\u2335 ~p\\\" shows?\\n  \\t\\t \\n\",\n    \"ger\": \"Wenn ich sage \\u201Ep ist m\\xF6glich\\u201D hei\\xDFt das \\u201A\\u201Ep\\u201D hat einen Sinn\\u2019? redet jener Satz von der Sprache so da\\xDF also f\\xFCr seinen Sinn die Existenz eines Satzzeichens (\\u201Ep\\u201D) wesentlich ist? (Dann w\\xE4re er ganz unwichtig.) Aber will er nicht vielmehr das sagen was \\u201Ep \\u2335 ~p\\u201D zeigt? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,31r[3] (1914--1113) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-13\",\n    \"eng\": \"In this work, more than any other it is worthwhile to keep on looking at questions one considers answered from other perspectives, as though they were unanswered.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Bei dieser Arbeit lohnt es sich mehr als bei jeder anderen Fragen die man f\\xFCr gel\\xF6st h\\xE4lt immer wieder von neuen Seiten als ungel\\xF6st zu betrachten. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,31r[4] et 32r[1] (1914--1113) (NB)\",\n    \"pt-number\": \"4\\u20224322\",\n    \"pt-page\": \"41[4]\",\n    \"tlp-number\": \"4\\u2022463 (2)*\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-14\",\n    \"eng\": \"Think of the representation of <u>negative facts by means of models. For example: Two railway trains must not stand on the tracks in such and such a way. A proposition, a picture, or a model is, in the negative sense, like a solid body restricting the freedom of movement of another; in the positive sense, like a space bounded by solid substance in which there is room for a body. [<i>Cf. 4.463  (2).]\\n \\t\\t\\nThis idea is <u>very clear and should lead to the solution. \\n\\n  \\t\\t \\n\",\n    \"ger\": \"/\\tDenke an die Darstellung <u>negativer Tatsachen durch Modelle. Etwa: So & so d\\xFCrfen  / zwei Eisenbahnz\\xFCge nicht auf den Gleisen stehen. Der Satz, das Bild, das Modell sind \\u2013 im negativen Sinn \\u2013 wie ein fester K\\xF6rper der die Bewegungsfreiheit der anderen beschr\\xE4nkt, im positiven Sinne wie der von fester Substanz begrenzte Raum worin ein K\\xF6rper Platz hat. \\n\\t\\n\\n \\nDiese Vorstellung ist <u>sehr deutlich und m\\xFC\\xDFte zur L\\xF6sung f\\xFChren. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,32r[2] (1914--1115) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-15\",\n    \"eng\": \"Projection of picture onto reality\\n\\t\\t\\nReality\\n\\nModel (Picture)\\n\\n(Maxwell's method of mechanical models.)\\n\\n\\n\",\n    \"ger\": \"Projektion des Bildes auf die Wirklichkeit \\nWirklichkeit\\n \\nModell (Bild)\\n\\t\\n(Maxwells Methode der mechanischen Modelle) \\n\"\n}, {\n    \"manuscript\": \"Ms-102,34r[2] (1914--1116) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-16\",\n    \"eng\": \"The introduction of the sign \\\"0\\\" as making decimal notation possible: The logical meaning of this procedure.\\n  \\t\\n\\t \\n\",\n    \"ger\": \"Einf\\xFChrung des Zeichens \\u201E0\\u201D um die Dezimalnotation m\\xF6glich zu machen: Die logische Bedeutung dieses Vorgehens. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,34r[3] (1914--1117) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-17\",\n    \"eng\": \"Suppose \\\"\\u03C6(a)\\\" is true: what does it mean to say ~\\u03C6a is possible? \\n(\\u03C6a itself means the same as ~(~\\u03C6a).)\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Angenommen \\u201E\\u03C6(a)\\u201D ist wahr: Was hei\\xDFt es zu sagen ~\\u03C6a ist m\\xF6glich? \\n(\\u03C6a ist selber gleichbedeutend mit ~(~\\u03C6a).) \\n\"\n}, {\n    \"manuscript\": \"Ms-102,34r[4] (1914--1118) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-18\",\n    \"eng\": \"It is all simply a matter of the existence of the logical location. \\nBut what\\u2014 hang it all \\u2014 is this \\\"logical location\\\"!?\\n// But what the hell is this \\\"logical location\\\"!?//\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Es handelt sich da immer nur um die Existenz des logischen Orts. \\nWas \\u2013 zum Teufel \\u2013 ist aber dieser \\u201Elogische Ort\\u201D!? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,34r[5] et 35r[1] (1914--1119) (NB)\",\n    \"pt-number\": \"3\\u20222102\",\n    \"pt-page\": \"43[4]\",\n    \"tlp-number\": \"3\\u202241\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-19\",\n    \"eng\": \"A proposition with its logical coordinates: this gives us a logical location. [<i>Cf. 3.41.]\\n//A sentence plus its logical coordinates: this gives us a logical location. [<i>Cf. 3.41.]//\\n\\n  \\t\\t \\n\",\n    \"ger\": \"/ Der Satz & die logischen Koordinaten: das ist der logische Ort. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,35r[4] et 36r[1] (1914--1121) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-21\",\n    \"eng\": \"What do I really know if I understand the sense of \\\"\\u03C6a\\\" but don\\u2019t know whether it is true or false? In that case, I surely know no more than \\u03C6a \\u2335 ~\\u03C6a; and that means I <u>know nothing.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"/ Was wei\\xDF ich eigentlich wenn ich den Sinn von \\u201E\\u03C6a\\u201D verstehe aber nicht wei\\xDF ob es wahr oder falsch ist? Dann wei\\xDF ich doch nicht mehr als \\u03C6a \\u2335 ~\\u03C6a; und das hei\\xDFt ich <u>wei\\xDF nichts. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,36r[3] (1914--1122) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-22\",\n    \"eng\": \"At this point I am again trying to express something that cannot be expressed.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"An dieser Stelle versuche ich wieder etwas auszudr\\xFCcken was sich nicht ausdr\\xFCcken l\\xE4\\xDFt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,36r[4] et 37r[1] (1914--1123) (NB)\",\n    \"pt-number\": \"3\\u20222104\",\n    \"pt-page\": \"43[6]\",\n    \"tlp-number\": \"3\\u202242 (1-2)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-23\",\n    \"eng\": \"Although a proposition may specify only one location in logical space, still the entire logical space must <u>already be given by it. - Otherwise negation, disjunction etc. would introduce more and more <u>new elements - and in coordination \\u2013 which, of course, must not happen. [<i>Cf. 3.42.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Obwohl der Satz nur auf einen Ort des logischen Raumes deuten darf  / so mu\\xDF doch durch ihn <u>schon der ganze logische Raum gegeben sein. \\u2013 Sonst w\\xFCrden durch Verneinung, Disjunktion etc. immer <u>neue Elemente \\u2013 und zwar in Koordination \\u2013 eingef\\xFChrt was nat\\xFCrlich nicht geschehen darf. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,37r[2] (1914--1124) (NB)\",\n    \"pt-number\": \"2\\u20221513\",\n    \"pt-page\": \"14[3]\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\\t24.11.14 (1,4)+\\n\",\n    \"date\": \"1914-11-24\",\n    \"eng\": \"Proposition and state of things are related to one another like a yardstick and a length to be measured. [<i>Cf. 2.1512.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Satz und Sachverhalt verhalten sich zu einander wie der Meterstab zu der zu messenden L\\xE4nge. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,39r[4] (1914--1125) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-25\",\n    \"eng\": \"That negative matter of fact that functions as a sign can, of course, perfectly well obtain without a proposition that in turn expresses it.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Jener negative Tatbestand der als Zeichen dient kann doch wohl bestehen ohne einen Satz der ihn wiederum ausdr\\xFCckt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,3r[4] (1914--1101) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-01\",\n    \"eng\": \"It is very easy to confuse the representational relation which the proposition has to its meaning, and the truth relation. The former is different for different propositions, the latter is one and the same for all propositions.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Sehr nahe liegt die Verwechslung zwischen der darstellenden Beziehung des Satzes zu seiner Bedeutung und der Wahrheitsbeziehung. Jene ist f\\xFCr verschiedene S\\xE4tze verschieden, diese ist eine und f\\xFCr alle S\\xE4tze die gleiche.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,42r[3] (1914--1126) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-26\",\n    \"eng\": \"If all the positive statements about a thing are made, aren\\u2019t all the negative ones already made too? And that is the whole point.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wenn von einem Dinge alle positiven Aussagen gemacht sind, sind doch nicht schon alle negativen auch gemacht! Und darauf kommt alles an! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,45r[2] et 46r[1] (1914--1127) (NB)\",\n    \"pt-number\": \"5\\u2022312\",\n    \"pt-page\": \"61[6]\",\n    \"tlp-number\": \"5\\u2022512**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-27\",\n    \"eng\": \"\\\"~p\\\" is true if p is false. Therefore, part of the proposition \\\"~p\\\", when true, is false. How then can the hook \\\"~\\\" make it agree with reality? Of course, we have already said that it is not the hook \\\"~\\\" alone but what all the different negation signs have in common. And what is common to all of them must obviously follow from the meaning of negation itself. And so the negation sign must surely mirror its own meaning. [<i>Cf 5.512.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"\\u201E~p\\u201D ist wahr wenn p falsch ist. Also, in dem wahren Satz \\u201E~p\\u201D ist der Teil ein falscher Satz. Wie kann ihn nun der Haken \\u201E~\\u201D mit der Wirklichkeit zum Stimmen bringen? Wir haben freilich schon gesagt da\\xDF es nicht der Haken \\u201E~\\u201D allein ist sondern alles was den verschiedenen Verneinungszeichen gemeinsam ist. Und was diesen allen gemeinsam ist mu\\xDF offenbar aus der Bedeutung der Verneinung selbst hervorgehen. Und so mu\\xDF sich also in dem Negationszeichen  / doch seine eigene Bedeutung spiegeln. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,46r[2] (1914--1128) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-28\",\n    \"eng\": \"Negation unites with the ab-functions of the elementary proposition. And the logical functions of the elementary proposition must reflect their meaning just as much as all the others.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Negation vereinigt sich mit den ab-Funktionen des elementaren Satzes. Und die logischen Funktionen des Elementarsatzes m\\xFCssen ebenso wie alle anderen ihre Bedeutung wiederspiegeln. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,46r[3] (1914--1129) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-29\",\n    \"eng\": \"The ab-function does not stop short of the elementary proposition but penetrates it.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die ab-Funktion bleibt nicht <u>vor dem Elementarsatz stehen sondern sie durchdringt ihn. \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,47r[3] et 48r[1] (1914--1130) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-30\",\n    \"eng\": \"The proposition says as it were: This picture cannot (or can) represent a state of things in this way. \\n\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Satz sagt gleichsam: Dieses Bild kann auf diese Weise keinen (oder kann einen) Sachverhalt  / darstellen. \\n\"\n}, \"date\", \"1914-11-30\"), {\n    \"manuscript\": \"Ms-102,48r[2] (1914--1201) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-02\",\n    \"eng\": \"The issue here is just what distinguishes a proposition from a mere picture.\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Es kommt eben darauf an das festzusetzen was den Satz vom blo\\xDFen Bild unterscheidet. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,48r[3] (1914--1204) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-04\",\n    \"eng\": \"For example, let's look at the identity ~ ~p = p: this, together with others, determines the sign for p since it says that there is something that \\\"p\\\" and \\\"~~p\\\" have in common. As a result, that sign acquires properties which reflect the fact that double negation is an affirmation.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Sehen wir uns z.B. die Gleichung ~ ~p = p an: diese bestimmt mit anderen das Zeichen f\\xFCr p da sie besagt da\\xDF es etwas sei was \\u201Ep\\u201D & \\u201E~~p\\u201D gemein haben. Dadurch erh\\xE4lt jenes Zeichen Eigenschaften die wiederspiegeln da\\xDF die doppelte Verneinung eine Bejahung ist. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,48r[4] (1914--1205) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-05\",\n    \"eng\": \"How does \\\"p\\u2335~p\\\" say nothing?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,48r[5] et 49r[1] et 50r[1] et 51r[1] et 52r[1] et 53r[1] (1914--1206) (NB)\",\n    \"pt-number1\": \"6\\u2022331\",\n    \"pt-number2\": \"6\\u202234\",\n    \"pt-number3\": \"6\\u2022341\",\n    \"pt-page1\": \"72[1]\",\n    \"pt-page2\": \"73[1]\",\n    \"pt-page3\": \"73[2]\",\n    \"tlp-number1\": \"6\\u2022341*\",\n    \"tlp-number2\": \"6\\u2022342*\",\n    \"tlp-number3\": \"6\\u2022343\",\n    \"cross-reference1\": \"\\t6.12.14 (1,2)\\n\",\n    \"cross-reference2\": \"\\t6.12.14 (3,4,5)*\\n\",\n    \"cross-reference3\": \"\\t6.12.14 (6)*\\n\",\n    \"date\": \"1914-12-06\",\n    \"eng\": \"Newtonian mechanics introduces uniformity into world description. \\nImagine a white surface with irregular black spots. We then say: whatever kind of picture develops from these, I could always get as near as I like to its description, by covering the surface with a sufficiently fine square mesh and going on to say of every square that it is white or black. In this way I will have managed to introduce uniformity into my description of the surface. The form is arbitrary, because I could have just as well applied a triangular or hexagonal net. It may be that the description using a triangular net would have been simpler, that is, we might be able to describe the surface more accurately with a coarser triangular mesh than with a finer square mesh or vice versa, etc. Different systems of describing the world correspond to different nets. \\nMechanics specifies a form of world description by saying: all propositions used in a description of the world must be obtainable in a given way from a number of given propositions - the mechanical axioms. In this way it supplies the building blocks for constructing the edifice of science, and says: Whatever building you want to erect, it must somehow be assembled from these, and only these, building blocks.\\nJust as I must be able to write down any arbitrary number by means of the number system, so I must be able to write down any arbitrary proposition of physics by means of the system of mechanics. [<i>See. 6.341.]\\nAnd now we can see the position in which logic and mechanics stand to each other.\\n(One might also arrange for the net to consist of different kinds of mesh.) \\nThat a picture of the above-mentioned kind can be described by a net of a given form tells us nothing about the picture (for this holds of every such picture.) But what does characterize a picture is that it can be described by a specific net of a <u>specific fineness. Likewise, that the world can be described by Newtonian mechanics tells us nothing about the world; but what does tell us something about it is that the world can be described in precisely this way. (I have felt this for a <u>long time.) \\u2013 We are also told something about the world by the fact that it can be described more simply by means of one system of mechanics than by means of another. [<i>Cf. 6.342.]\\nMechanics is <u>one attempt to construct according to a <u>single plan all propositions we need for a description of the world.  Hertz\\u2019s invisible masses.) [<i>Cf. 6.343.]\\nHertz\\u2019s invisible masses are admittedly pseudo-objects.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Newtonsche Mechanik bringt die Weltbeschreibung / auf eine einheitliche Form. \\nDenken wir uns eine wei\\xDFe Fl\\xE4che auf der unregelm\\xE4\\xDFige schwarze Flecken w\\xE4ren. Wir sagen nun: Was immer f\\xFCr ein Bild hierdurch entsteht immer werde ich seiner Beschreibung beliebig nahe kommen k\\xF6nnen indem ich die Fl\\xE4che mit einem entsprechend feinen quadratischen Netzwerk bedecke und nun von jedem Quadrat sage da\\xDF es wei\\xDF oder schwarz ist. Ich werde auf diese Weise die Beschreibung dieser Fl\\xE4che auf eine einheitliche Form gebracht haben. Diese Form ist beliebig denn ich h\\xE4tte mit dem  / gleichen Erfolge ein dreieckiges oder sechseckiges Netz verwenden k\\xF6nnen. Es kann sein da\\xDF die Beschreibung mit Hilfe eines dreieckigen Netzes einfacher geworden w\\xE4re d.h. da\\xDF wir die Fl\\xE4che mit einem gr\\xF6beren Dreiecksnetz genauer beschreiben k\\xF6nnten als mit einem feineren quadratischen (oder umgekehrt) etc. Den verschiedenen Netzen entsprechen verschiedene Systeme der Weltbeschreibung. \\nDie Mechanik bestimmt die Form der Weltbeschreibung indem sie sagt: Alle S\\xE4tze der Weltbeschreibung  / m\\xFCssen aus einer Anzahl gegebener S\\xE4tze \\u2013 den mechanischen Axiomen \\u2013 auf eine gegebene Art & Weise erhalten werden k\\xF6nnen. Hierdurch liefert sie die Bausteine zum Bau des wissenschaftlichen Geb\\xE4udes und sagt: Welches Geb\\xE4ude Du immer auff\\xFChren willst jedes mu\\xDFt Du irgendwie mit diesen & nur diesen Bausteinen zusammenbringen. \\n     Wie man mit dem Zahlensystem jede beliebige Anzahl mu\\xDF hinschreiben k\\xF6nnen so mu\\xDF man mit dem System der Mechanik jeden beliebigen Satz der Physik / hinschreiben k\\xF6nnen. \\nUnd hier sehen wir nun die gegenseitige Stellung von Logik & Mechanik. \\n(Man k\\xF6nnte das Netz auch aus verschiedenartigen Figuren bestehen lassen.) \\nDa\\xDF sich ein Bild wie das vorhin erw\\xE4hnte durch ein Netz von gegebener Form beschreiben l\\xE4\\xDFt, sagt \\xFCber das Bild nichts aus (denn dies gilt f\\xFCr jedes solche Bild). Das aber charakterisiert das Bild da\\xDF es sich durch ein bestimmtes Netz, von <u>bestimmter Feinheit, beschreiben l\\xE4\\xDFt. So auch sagt es nichts \\xFCber die Welt aus da\\xDF sie sich durch die Newtonsche Mechanik  / beschreiben l\\xE4\\xDFt; aber wohl da\\xDF sie sich so durch jene beschreiben l\\xE4\\xDFt wie dies eben der Fall ist. (Dies habe ich schon seit <u>langer Zeit gef\\xFChlt.) \\u2013 Auch das sagt etwas von der Welt da\\xDF sie sich durch die eine Mechanik einfacher beschreiben l\\xE4\\xDFt als durch die andere. \\nDie Mechanik ist <u>ein Versuch alle S\\xE4tze welche wir zur Weltbeschreibung ben\\xF6tigen nach <u>einem Plan zu konstruieren. (Die unsichtbaren Massen Hertz's.) \\nDie unsichtbaren Massen Hertz's sind <u>eingestandenerma\\xDFen Scheingegenst\\xE4nde.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,53r[2] et 54r[1] (1914--1207) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-07\",\n    \"eng\": \"A proposition\\u2019s logical constants are its truth conditions.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die logischen Konstanten des Satzes sind die Bedingungen seiner  / Wahrheit. \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,54r[2] (1914--1208) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-08-14\",\n    \"eng\": \"Behind our thoughts, true and false, there is always a dark background, which we can only later bring into the light and express as a thought.\\n12.12.14.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Hinter unseren Gedanken, wahren & falschen, liegt immer wieder ein dunkler Grund, den wir erst sp\\xE4ter in's Licht ziehen, & als einen Gedanken aussprechen k\\xF6nnen. \\n\"\n}, \"date\", \"1914-12-08\"), {\n    \"manuscript\": \"Ms-102,54r[4] (1914--1213) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-13\",\n    \"eng\": \"Does it exhaust the essence of negation that it is an operation that cancels itself? Then \\u03C7 would have to mean negation if \\u03C7\\u03C7p = p, assuming that \\u03C7p \\u2260 p.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ersch\\xF6pft es das Wesen der Negation da\\xDF sie eine Operation ist die sich selbst aufhebt? Dann m\\xFC\\xDFte \\u03C7 die Negation bedeuten wenn \\u03C7\\u03C7p = p vorausgesetzt da\\xDF \\u03C7p \\u2260 p. \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,55r[2] (1914--1214? --1215?) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-14\",\n    \"eng\": \"It\\u2019s obvious that we can introduce whatever we like as characters for the ab-functions, and that the real sign will provide itself automatically. And what properties will evolve on their own while doing so?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Es ist offenbar: wir k\\xF6nnen als Schriftzeichen der ab-Funktionen einf\\xFChren welche wir wollen das eigentliche Zeichen wird sich automatisch bilden. Und welche Eigenschaften werden sich hierbei von selbst herausbilden? \\n\"\n}, \"date\", \"1914-12-14\"), {\n    \"manuscript\": \"Ms-102,55r[4] (1914--1216) (NB)\",\n    \"pt-number\": \"3\\u20222142\",\n    \"pt-page\": \"43[8]\",\n    \"tlp-number\": \"3\\u202242 (3b)*\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-16\",\n    \"eng\": \"Propositions must probe the whole of logical space. [<i>Cf. 3.42.]\\n\\n\\t\\t \\n\",\n    \"ger\": \"Der Satz mu\\xDF den ganzen logischen Raum durchgreifen. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,56r[1] (1914--1217) (NB)\",\n    \"pt-number\": \"5\\u202223\",\n    \"pt-page\": \"38[6]\",\n    \"tlp-number\": \"5\\u202244 (1)*\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-17\",\n    \"eng\": \"The ab-function signs are not material, otherwise they could not disappear. [<i>Cf. 5.44 and 5.441.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die ab-Funktionszeichen sind nicht materiell sonst k\\xF6nnten sie nicht verschwinden. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,56r[2] (1914--1218) (NB)\",\n    \"pt-number\": \"4\\u2022073\",\n    \"pt-page\": \"48[6]\",\n    \"tlp-number\": \"4\\u202204 (1)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-18\",\n    \"eng\": \"In a proper propositional sign there must be exactly as many distinguishable features as can be distinguished in the state of things. That is what their identity consists in.    [<i>Cf. 4.04.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Am eigentlichen Satzzeichen mu\\xDF geradesoviel zu unterscheiden sein, als am Sachverhalt zu unterscheiden ist. Darin besteht ihre Identit\\xE4t.         \\n\"\n}, {\n    \"manuscript\": \"Ms-102,56r[3] (1914--1220) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-20\",\n    \"eng\": \"In \\\"p\\\" neither more nor less can be recognised than in \\\"~p\\\".\\n\\n  \\t\\t \\n\",\n    \"ger\": \"In \\u201Ep\\u201D ist nicht mehr & nicht weniger zu erkennen als in \\u201E~p\\u201D. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,57r[2] (1914--1223) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-23\",\n    \"eng\": \"Characteristic example of my theory of the significance of description in physics: The two theories of heat; heat conceived of as a substance at one time, at another time as a movement.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Charakteristisches Beispiel zu meiner Theorie der Bedeutung der physikalischen Naturbeschreibung: die beiden W\\xE4rmetheorien; einmal die W\\xE4rme als ein Stoff ein andermal als eine Bewegung aufgefa\\xDFt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,57r[3] et 58r[1] (1914--1225) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-25\",\n    \"eng\": \"The proposition says something, is identical with: It has a specific relation to reality, <u>whatever <u>this <u>may <u>be. And, if this reality is given and so is that relation, then the sense of the proposition is known. \\\"p \\u2335 q\\\" has a different relation to reality than \\\"p.q\\\", etc.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Satz sagt etwas, ist identisch mit: Er hat ein bestimmtes Verh\\xE4ltnis zur Wirklichkeit, was <u>immer <u>diese <u>sein <u>mag. Und, wenn <u>sie gegeben ist und jenes Verh\\xE4ltnis so ist der Sinn des Satzes bekannt. \\u201Ep \\u2335 q\\u201D hat  / ein anderes Verh\\xE4ltnis zur Wirklichkeit als \\u201Ep.q\\u201D, etc. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,58r[5] et 59r[1] (1914--1229) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-12-29\",\n    \"eng\": \"In a proposition, a name functions as a representative for an object. [<i>See 3.22.]\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Im Satze vertritt den Gegenstand  / der Name. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,59r[2] (1915--0111) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-11\",\n    \"eng\": \"A yardstick does not say that an object being measured is one yard long. \\nNot even if we know that it is supposed to serve for measuring this <u>particular object.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ein Meterstab sagt nicht da\\xDF ein zu messendes Objekt einen Meter lang sei. \\nAuch dann nicht wenn wir wissen da\\xDF er zum Messen <u>eines || dieses <u>bestimmten Objektes dienen soll. \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,59r[5] et 60r[1] (1915\\u20140114? --0115?) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-14\",\n    \"eng\": \"The propositional sign \\\"p \\u2335 q\\\" is right if p is the case, if q is the case, and if both are the case, otherwise it is wrong. This seems to be immensely simple; and the solution will be <u>as simple as this.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das Satzzeichen \\u201Ep \\u2335 q\\u201D stimmt  / wenn p der Fall ist, wenn q der Fall ist und wenn beide der Fall sind anderenfalls stimmt es nicht: dies scheint unendlich einfach zu sein; und <u>so einfach wird die L\\xF6sung sein. \\n\"\n}, \"date\", \"1915-01-14\"), {\n    \"manuscript\": \"Ms-102,60r[2] (1915--0116) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-16\",\n    \"eng\": \"A proposition is correlated with a hypothetical state of things.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Satz ist einem hypothetischen Sachverhalt zugeordnet. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,61r[3] (1915--0117) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-17\",\n    \"eng\": \"The state of things p.q <u>comes <u>within the domain of the proposition \\\"p \\u2335 q\\\".\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Sachverhalt p.q <u>f\\xE4llt <u>unter den Satz \\u201Ep \\u2335 q\\u201D. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,62r[2] (1915--0118) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-18\",\n    \"eng\": \"The comparison between proposition and description is purely logical and for that reason <u>must be pursued.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Vergleich zwischen Satz & Beschreibung ist rein logisch und <u>mu\\xDF daher weiter gef\\xFChrt werden.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,62r[3] (1915--0120) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-20\",\n    \"eng\": \"How is it that <u>all is a logical concept?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wieso ist <u>Alle ein logischer Begriff? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,63r[4] (1915--0121) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-21\",\n    \"eng\": \"Moving on from general consideration of propositional form: immensely difficult, fabulous.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der \\xDCbergang von der allgemeinen Betrachtung der Satzform: <u>Unendlich <u>schwierig, <u>fabelhaft. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,63r[5] et 64r[1] (1915--0122) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-22\",\n    \"eng\": \"My <u>whole task consists in explaining the nature of the proposition. That is to say, in giving the nature of all facts, whose picture the proposition <u>is.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Meine <u>ganze Aufgabe besteht darin, das Wesen des Satzes zu erkl\\xE4ren. / Das hei\\xDFt, das Wesen aller Tatsachen anzugeben, deren Bild der Satz <u>ist. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,64r[4] (1915--0123) (NB)\",\n    \"pt-number\": \"5\\u20220012\",\n    \"pt-page\": \"63[6]\",\n    \"tlp-number\": \"5\\u20222341 (2)**\",\n    \"cross-reference\": \"\\t23.1.15 (1)\\n\",\n    \"date\": \"1915-01-23\",\n    \"eng\": \"Negation is an operation. [<i>Cf. 5.2341 (2).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Verneinung ist eine Operation. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,64r[7] et 65r[1] (1915--0123) (NB)\",\n    \"pt-number\": \"5\\u20220021\",\n    \"pt-page\": \"64[1]\",\n    \"tlp-number\": \"5\\u202225 (2)** \",\n    \"cross-reference\": \"\\t23.1.15 (4)\\n\",\n    \"date\": \"1915-01-24\",\n    \"eng\": \"Indeed, an operation says nothing, only its result does; and this depends on its object. [<i>Cf. 5.25 (2).]\\n\\n24.1.15.\\nDie logischen Scheinfunktionen <u>sind Operationen. \\n\\nLogical pseudo-functions <u>are operations.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Eine Operation sagt nat\\xFCrlich nichts aus, nur ihr Resultat, und dies h\\xE4ngt von ihrem  / Gegenstand ab. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,65r[5] (1915--0125) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-01-25\",\n    \"eng\": \"One can also say: if p is true, ~p is false.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Man kann auch sagen; ~p ist falsch, wenn p wahr ist. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,65r[6] et 66r[1] (1915--0129) (NB)\",\n    \"pt-number\": \"3\\u20221603\",\n    \"pt-page\": \"38[5]\",\n    \"tlp-number\": \"3\\u2022141 (2)\",\n    \"cross-reference\": \"\",\n    \"date\": \"15-01-29\",\n    \"eng\": \"\",\n    \"ger\": \"/ Die Sprache ist artikuliert. \\n\\nLanguage is articulate. [<i>Cf. 3.141 (2).]\\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-102,66r[2] (1915--0207) (NB)\",\n    \"pt-number\": \"3\\u20221602\",\n    \"pt-page\": \"38[4]\",\n    \"tlp-number\": \"3\\u2022141 (1)**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-02-07\",\n    \"eng\": \"Musical themes are in a certain sense propositions. So knowledge of the nature of logic will lead to knowledge of the nature of music. [<i>Cf. 3.141 (1).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die musikalischen Themen sind in gewissem Sinne S\\xE4tze. Die Kenntnis des Wesens der Logik wird deshalb zur Kenntnis des Wesens der Musik f\\xFChren. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,66r[3] (1915--0214) (NB)\",\n    \"pt-number\": \"4\\u20220231\",\n    \"pt-page\": \"47[5]\",\n    \"tlp-number\": \"4\\u2022023 (1-2)*\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-02-14\",\n    \"eng\": \"If there were mathematical objects \\u2013 logical constants \\u2013 the proposition \\\"I am eating five plums\\\" would be a proposition of mathematics. And it is not even a proposition of applied mathematics.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"G\\xE4be es mathematische Gegenst\\xE4nde \\u2013 logische Konstante \\u2013 so w\\xE4re der Satz \\u201Eich esse 5 Pflaumen\\u201D ein Satz der Mathematik. Und er ist auch kein Satz der angewandten Mathematik. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,67r[3] (1915--0305) (NB)\",\n    \"pt-number\": \"5\\u202230225\",\n    \"pt-page\": \"76[3]\",\n    \"tlp-number\": \"5\\u20224541 (2-3)* \",\n    \"cross-reference\": \"\\t5.3.15 (1)  19.9.16 (1)+\\n\",\n    \"date\": \"1915-03-05\",\n    \"eng\": \"People have always had an inkling that there must be a realm in which the answers to questions combine symmetrically - <i>a <i>priori - into a self-contained regular formation. [<i>See 5.4541 (2-3).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Menschheit hat immer geahnt, da\\xDF es ein Gebiet von Fragen geben mu\\xDF worin die Antworten \\u2013 a priori \\u2013 symmetrisch, und zu einem abgeschlossenen regelm\\xE4\\xDFigen Gebilde vereint \\u2013 liegen. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,67r[5] et 68r[1] (1915--0306) (NB)\",\n    \"pt-number\": \"5\\u2022311\",\n    \"pt-page\": \"61[5]\",\n    \"tlp-number\": \"5\\u2022511\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-03-06\",\n    \"eng\": \"The problems of negation, of disjunction, of true and false, are only reflections of the one great problem in the variously placed great and small mirrors of philosophy. [<i>Cf. 5.511.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Probleme der Verneinung, der Disjunktion, von Wahr & Falsch \\u2013 sind nur Spiegelbilder des einen, gro\\xDFen Problems, in  / den verschieden gestellten gro\\xDFen und kleinen Spiegeln der Philosophie. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,68r[2] (1915--0307) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-03-07\",\n    \"eng\": \"Just as ~\\u03BE, ~\\u03BE . \\u2335 . ~\\u03BE etc. are the same function, so too are ~\\u03B7 \\u2335 \\u03B7, \\u03B7\\u2283\\u03B7, etc. the same \\u2013 that is, the tautological \\u2013 function. Like the others, it can be investigated \\u2013 and perhaps advantageously.\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wie ~\\u03BE, ~\\u03BE . \\u2335 . ~\\u03BE etc. dieselbe Funktion ist so ist auch ~\\u03B7 \\u2335 \\u03B7, \\u03B7\\u2283\\u03B7 etc. dieselbe \\u2013 n\\xE4mlich die tautologische \\u2013 Funktion. Wie die anderen so kann auch sie \\u2013 und vielleicht mit Vorteil \\u2013 untersucht werden. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,68r[4] (1915--0318) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-03-18\",\n    \"eng\": \"lt is clear that the closest examination of the propositional sign cannot yield what it asserts \\u2013 but what it can yield is what it is <u>capable of asserting.\\n\\n\\t \\n\",\n    \"ger\": \"Es ist klar da\\xDF die genaueste Untersuchung des Satzzeichens nicht ergeben kann was es aussagt \\u2013 wohl aber was es aussagen <u>kann. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,69r[2] (1915--0329) (NB)\",\n    \"pt-number\": \"6\\u20223\",\n    \"pt-page\": \"71[5]\",\n    \"tlp-number\": \"6\\u202232\",\n    \"cross-reference\": \"\\t29.3.15 (1)\\n\",\n    \"date\": \"1915-03-29\",\n    \"eng\": \"The law of causality is not a law but the form of <u>a law. [<i>See 6.32.]\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das Kausalit\\xE4tsgesetz ist kein Gesetz sondern die Form <u>eines Gesetzes. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,70r[2] (1915--0403) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-03\",\n    \"eng\": \"The proposition is a measure of the world.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Satz ist ein Ma\\xDF der Welt. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,71r[2] (1915--0405) (NB)\",\n    \"pt-number\": \"3\\u20221602\",\n    \"pt-page\": \"38[4]\",\n    \"tlp-number\": \"3\\u2022141 (1)**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-05\",\n    \"eng\": \"A sentence is not a mixture of words. [<i>See 3.141.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der Satz ist kein W\\xF6rtergemisch. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,71r[3] (1915--0410) (NB)\",\n    \"pt-number\": \"3\\u20221602\",\n    \"pt-page\": \"38[4]\",\n    \"tlp-number\": \"3\\u2022141 (1)**\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-11\",\n    \"eng\": \"Nor is a tune a mixture of notes, as all unmusical people think. [<i>Cf. 3.141.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Auch die Melodie ist kein Tongemisch, wie alle Unmusikalischen glauben. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,71r[4] (1915--0412) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-12\",\n    \"eng\": \"I <u>cannot get from the nature of the proposition to the individual logical operations!!!\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ich <u>kann von dem Wesen des Satzes <u>nicht auf die einzelnen logischen Operationen kommen!!! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,71r[5] et 72r[1] (1915--0415) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-15\",\n    \"eng\": \"I just can't bring out how a proposition is a <u>picture of a state of things! \\n      I am almost willing to give up all my efforts. \\u2012 \\u2012\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ich kann eben nicht herausbringen inwiefern der Satz das <u>Bild des Sachverhaltes ist! \\n      Beinahe bin ich bereit  / alle Bem\\xFChungen aufzugeben. \\u2012 \\u2012 \\n\"\n}, {\n    \"manuscript\": \"Ms-102,72r[2] (1915--0416) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-16\",\n    \"eng\": \"A description is also, as it were, an operation that takes its means of description as its basis and its described object as its result. \\n  \\t\\t \\n\",\n    \"ger\": \"Die Beschreibung ist auch sozusagen eine Operation deren Basis ihre Hilfsmittel und deren Resultat der beschriebene Gegenstand ist. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,72r[4] (1915--0417) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-17\",\n    \"eng\": \"Das subjektive Universum. \\n\\nThe subjective universe.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,73r[2] (1915--0418) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-18\",\n    \"eng\": \"The transition from p to ~p is <u>not what is characteristic of the operation of negation. (The <u>best <u>proof of this: negation also leads from ~p to p.) -----------------\\n\\n  \\t\\t \\n\",\n    \"ger\": \"F\\xFCr die Operation der Verneinung ist der \\xDCbergang von p auf ~p <u>nicht charakteristisch. (Der <u>beste <u>Beweis: sie f\\xFChrt auch von ~p zu p.) -----------------\\n\"\n}, {\n    \"manuscript\": \"Ms-102,73r[3] (1915--0419) (NB)\",\n    \"pt-number\": \"4\\u20221021\",\n    \"pt-page\": \"17[8]\",\n    \"tlp-number\": \"4\\u2022121 (2)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-19\",\n    \"eng\": \"Whatever is mirrored in language I cannot use language to express. [<i>Cf. 4.121 (2).]\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Was sich in der Sprache spiegelt, kann ich nicht mit ihr ausdr\\xFCcken. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,73r[4] et 74r[1] (1915--0423) (NB)\",\n    \"pt-number\": \"6\\u202232\",\n    \"pt-page\": \"71[8]\",\n    \"tlp-number\": \"6\\u202233*\",\n    \"cross-reference\": \"\\t23.4.15 (1)\\n\",\n    \"date\": \"1915-04-23\",\n    \"eng\": \"We do not believe <i>a <i>priori in a law of conservation, rather we <u>know <i>a <i>priori the possibility of its logical form. [<i>See 6.33.]\\n\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wir glauben nicht a priori an ein Erhaltungsgesetz  / sondern wir <u>wissen a priori die M\\xF6glichkeit seiner logischen Form. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,75r[3] (1915--0424) (NB)\",\n    \"pt-number\": \"6\\u202211343\",\n    \"pt-page\": \"70[5]\",\n    \"tlp-number\": \"6\\u20221261                   \",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-24\",\n    \"eng\": \"In logic (mathematics) process and result are equivalent. (Hence, no surprises.) [<i>See 6.1261.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"In der Logik (Mathematik) sind Proze\\xDF & Resultat gleichwertig. (Darum keine \\xDCberraschungen.) \\n\"\n}, {\n    \"manuscript\": \"Ms-102,77r[3] (1915--0426) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-26\",\n    \"eng\": \"Ordinary propositions must get their imprint of simplicity by means of generality.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Durch die Allgemeinheit m\\xFCssen die gebr\\xE4uchlichen S\\xE4tze ihr einfaches Gepr\\xE4ge kriegen. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,78r[2] (1915--0427) (NB)\",\n    \"pt-number\": \"5\\u20220444\",\n    \"pt-page\": \"41[8]\",\n    \"tlp-number\": \"5\\u20221362 (1)\",\n    \"cross-reference\": \"\\t27.4.15 (1)\\n\",\n    \"date\": \"1915-04-27\",\n    \"eng\": \"Freedom of the will consists in the <u>impossibility of our knowing future events now. We could know them only if causality were an inner necessity like, say, that of logical inference. - The connection between knowing and the known is that of logical necessity.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Willensfreiheit besteht darin da\\xDF zuk\\xFCnftige Ereignisse jetzt nicht gewu\\xDFt werden <u>k\\xF6nnen. Nur dann k\\xF6nnten wir sie wissen, wenn die Kausalit\\xE4t eine innere Notwendigkeit w\\xE4re \\u2013 wie etwa die des logischen Schlusses. \\u2013 Der Zusammenhang von Wissen & Gewu\\xDFtem ist <u>der der logischen Notwendigkeit. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,78r[4] et 79r[1] (1915--0427? --0428?) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-28\",\n    \"eng\": \"Non-truth is like non-identity.\\n\\n\\n28.4.15.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das Nicht-Stimmen ist \\xE4hnlich wie die Nicht-Identit\\xE4t. /\\n\"\n}, {\n    \"manuscript\": \"Ms-102,80r[3] (1915--0429) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-29\",\n    \"eng\": \"That is to say: all signs that depend on p and that neither affirm p nor are affirmed by p.  \\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das hei\\xDFt: alle Zeichen die von p abh\\xE4ngig sind & die weder p bejahen noch von p bejaht werden.\\n\"\n}, {\n    \"manuscript\": \"Ms-102,80r[4] et 81r[1] (1915--0430) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-04-30\",\n    \"eng\": \"The occurrence of an <u>operation cannot, of course, have any significance in isolation.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Das Vorkommen einer <u>Operation kann <u>nat\\xFCrlich allein  / nichts besagen! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,81r[3] (1915--0501) (NB)\",\n    \"pt-number\": \"6\\u20221201\",\n    \"pt-page\": \"116[7]\",\n    \"tlp-number\": \"6\\u20221201 \",\n    \"cross-reference\": \"\\t1.5.15 (1)**\\n\",\n    \"date\": \"1915-05-01\",\n    \"eng\": \"That p.~p is a contradiction shows that ~p contradicts p. [<i>Cf. 6.1201.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Da\\xDF p.~p eine Kontradiktion ist zeigt da\\xDF ~p p widerspricht. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,83r[2] (1915--0502) (NB)\",\n    \"pt-number\": \"5\\u20223131\",\n    \"pt-page\": \"61[9]\",\n    \"tlp-number\": \"5\\u2022513 (1)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-02\",\n    \"eng\": \"The class of all signs that affirm both p and q is the class of signs for p.q. The class of all signs that affirm either p or q is the proposition \\\"p \\u2335 q\\\". [<i>Cf 5.513 (1).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Klasse aller Zeichen die sowohl p als auch q bejahen ist das Zeichen f\\xFCr p.q. Die Klasse aller Zeichen die entweder p oder q bejahen ist der Satz \\u201Ep \\u2335 q\\u201D. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,83r[3] (1915--0503) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-03\",\n    \"eng\": \"One cannot say that both tautology and contradiction say <u>nothing in the sense that they are both, say, zero points on a scale of propositions. For at least they are <u>opposite poles.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Man kann nicht sagen da\\xDF sowohl Tautologien als Kontradiktionen <u>nichts sagen in dem Sinne da\\xDF sie etwa beide Nullpunkte in der Skala der S\\xE4tze w\\xE4ren. Denn zum Mindesten sind sie <u>entgegengesetzte Pole. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,84r[3] (1915--0504) (NB)\",\n    \"pt-number\": \"6\\u202212112\",\n    \"pt-page\": \"71[4]\",\n    \"tlp-number\": \"6\\u202231\",\n    \"cross-reference\": \"\\t4.5.15 (1)\\n\",\n    \"date\": \"1915-05-04\",\n    \"eng\": \"At any rate, what has been styled the law of induction cannot be a law of logic, for it is obviously a proposition. [<i>See 6.31.]\\n  \\t\\t \\n\",\n    \"ger\": \"Das sogenannte Gesetz der Induktion kann jedenfalls kein logisches Gesetz sein, denn es ist offenbar ein Satz. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,85r[2] (1915--0505) (NB)\",\n    \"pt-number\": \"5\\u2022305\",\n    \"pt-page\": \"47[1]\",\n    \"tlp-number\": \"5\\u202247 (5)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-05\",\n    \"eng\": \"Does the general propositional form exist? \\nYes, if by that is understood the sole \\\"logical constant\\\".  [<i>Cf. 5.47 (4-5).]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Gibt es die allgemeine Satzform? \\nJa, wenn darunter die eine \\u201Elogische Konstante\\u201D verstanden ist! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,85r[4] (1915--0506) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-06\",\n    \"eng\": \"One would try in vain to express the pseudo-proposition \\\"Are there simple things?\\\" in conceptual notation.\\n\\n\\n\",\n    \"ger\": \"Man w\\xFCrde sich vergeblich bem\\xFChen den Scheinsatz \\u201Egibt es einfache Dinge?\\u201D in Zeichen der Begriffsschrift auszudr\\xFCcken. [<i>Cf. 5.534]\\n\"\n}, {\n    \"manuscript\": \"Ms-102,86r[3] (1915--0507) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-07\",\n    \"eng\": \"Is spatial complexity also logical complexity? It surely seems to be.\\n\\n\\n\\t\\t \\n\",\n    \"ger\": \"Ist r\\xE4umliche Zusammengesetztheit auch logische Zusammengesetztheit? Es scheint doch, ja! \\n\"\n}, {\n    \"manuscript\": \"Ms-102,87r[3] et 88r[1] (1915--0508) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-08\",\n    \"eng\": \"The fact that there is no sign for a particular prototype does not show that this prototype does not exist. Depiction by means of sign language does not happen in such a way that a <u>sign of a prototype represents an <u>object of that prototype. The sign and the internal relation to what it signifies prescribe the prototype of the latter; as basic co-ordinates together with the axes prescribe the points of a graph.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Da\\xDF es keine Zeichen eines bestimmten Urbilds gibt zeigt nicht da\\xDF jenes Urbild nicht vorhanden ist. Die zeichensprachliche Abbildung geschieht  / nicht so da\\xDF ein <u>Zeichen eines Urbilds einen <u>Gegenstand desselben Urbilds vertritt. Das Zeichen und die interne Relation zum Bezeichneten bestimmen das Urbild dieses; wie Grundkoordinaten und Ordinaten die Punkte einer Figur bestimmen. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,88r[2] (1915--0509) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-09\",\n    \"eng\": \"A question: can we get by without simple objects in logic?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Eine Frage: K\\xF6nnen wir ohne einfache Gegenst\\xE4nde in der Logik auskommen? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,91r[3] et 92r[1] (1915--0509) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-10\",\n    \"eng\": \"<u>But doesn\\u2019t this already presuppose that the class of all propositions is given to us? And how do we arrive at <u>it?\\n\\n\\n10.5.15.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"<u>Aber, setzt das nicht schon voraus da\\xDF uns die Klasse aller S\\xE4tze gegeben ist? Und wie kommen wir zu <u>ihr? /  \\n\"\n}, {\n    \"manuscript\": \"Ms-102,92r[2] (1915--0511) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-11\",\n    \"eng\": \"Is the logical sum of two tautologies a tautology in the first sense? Is there really such a thing as the duality: tautology - contradiction?\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Ist die logische Summe zweier Tautologien eine Tautologie im ersten Sinne? Gibt es wirklich die Dualit\\xE4t: Tautologie \\u2013 Kontradiktion? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,93r[1] (1915--0512) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-12\",\n    \"eng\": \"The general concept of depiction, and of co-ordinates.\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Der allgemeine Begriff der Abbildung und <u>der der Koordinaten. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,93r[3] (1915--0513) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-13\",\n    \"eng\": \"\",\n    \"ger\": \"Eine eigent\\xFCmliche logische Manipulation, die <u>Personifizierung der <u>Zeit! \\n\\nAn odd logical manipulation, <u>time <u>personified!\\n\\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-102,95r[4] (1915--0514) (NB)\",\n    \"pt-number\": \"4\\u20220012\",\n    \"pt-page\": \"36[7]\",\n    \"tlp-number\": \"4\\u2022002 (2)\",\n    \"cross-reference\": \"\\t14.5.15 (1)\\n\",\n    \"date\": \"1915-05-14\",\n    \"eng\": \"Language is a part of our organism and no less complicated than it. [<i>Cf. 4.002.]\\n\\n\\t\\t \\n\",\n    \"ger\": \"Die Sprache ist ein Teil unseres Organismus, und nicht weniger kompliziert als dieser. \\n\"\n}, {\n    \"manuscript\": \"Ms-102,96r[3] et 97r[1] (1915--0515) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-15\",\n    \"eng\": \"A theory of the complex is expressed in such propositions as: \\\"If a proposition is true then something exists\\\". There seems to be a difference between the fact expressed by the proposition: a stands in relation R to b, and the complex: <u>a <u>in <u>relation <u>R <u>to <u>b, which is that very something that \\\"exists\\\" if that proposition is true. It seems as if we could <u>refer to this something, and what's more with an actual \\\"composite sign\\\".\\u2014The feelings expressed in these sentences are entirely natural and genuine, so there must be some truth underlying them. But which one?\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die Komplex-Theorie dr\\xFCckt sich in S\\xE4tzen aus wie dieser: \\u201EWenn ein Satz wahr ist dann existiert etwas\\u201D; es scheint ein Unterschied zu sein zwischen der Tatsache welche der Satz ausdr\\xFCckt: a steht in der Relation R zu b, und dem Komplex: <u>a <u>in <u>der <u>Relation <u>R <u>zu <u>b welche eben dasjenige ist welches \\u201Eexistiert\\u201D wenn jener Satz wahr ist. Es scheint als k\\xF6nnten wir dieses Etwas <u>bezeichnen, und zwar mit einem eigentlichen \\u201Ezusammengesetzten Zeichen\\u201D. \\u2013 Die Gef\\xFChle die sich in diesen S\\xE4tzen ausdr\\xFCcken  / sind ganz nat\\xFCrlich und ungek\\xFCnstelt; es mu\\xDF ihnen also eine Wahrheit zu Grunde liegen. Aber welche? \\n\"\n}, {\n    \"manuscript\": \"Ms-102,97r[5] et 98r[1] (1915--0516) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-16\",\n    \"eng\": \"\",\n    \"ger\": \"Wenn ich den Raum sehe, sehe  / ich alle seine Punkte? \\n\\nWhen I see space do I see all its points?\\n\\n  \\t\\t \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-102,99r[2] (1915--0517? --0518?) (NB)\",\n    \"pt-number\": \"4\\u20220101\",\n    \"pt-page\": \"42[5]\",\n    \"tlp-number\": \"4\\u2022015\",\n    \"cross-reference\": \"\\t18.5.15 (1)\\n\",\n    \"date\": \"1915-05-17\",\n    \"eng\": \"The possibility of all similes, of all the pictoriality of our language, reposes in the logic of depiction. [4.015.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Die M\\xF6glichkeit aller Gleichnisse, der ganzen Bildhaftigkeit unserer Ausdrucksweise, ruht in der Logik der Abbildung. \\n\"\n}, \"date\", \"1915-05-17\"), {\n    \"manuscript\": \"Ms-102,99r[3] et 100r[1] (1915--0519) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1915-05-19\",\n    \"eng\": \"We can even conceive a body apprehended as in movement, and indeed together with its movement, as a thing. Thus the moon, rotating around the earth, moves around the sun. Now here it seems clear that this reification is nothing but a logical manipulation\\u2014though the possibility of this may be extremely significant.\\n\\nOr let us consider reifications like: a tune, a spoken sentence.\\u2014\\n\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Wir k\\xF6nnen sogar einen in Bewegung begriffenen K\\xF6rper, <u>und <u>zwar <u>mit <u>seiner <u>Bewegung <u>zusammen als Ding auffassen. So bewegt sich, der um die Erde sich drehende Mond, um die Sonne. Hier scheint es nun klar da\\xDF in dieser Verdinglichung nichts als eine logische Manipulation  / vorliegt \\u2013 deren M\\xF6glichkeit \\xFCbrigens h\\xF6chst bedeutungsvoll sein mag. \\nOder betrachten wir Verdinglichungen wie: eine Melodie, ein gesprochener Satz. \\u2013 \\n\\n\"\n}, {\n    \"manuscript\": \"Ms-102,9r[2] (1914--1102) (NB)\",\n    \"pt-number\": \"4\\u20224483\",\n    \"pt-page\": \"44[7]\",\n    \"tlp-number\": \"4\\u2022462 (2)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1914-11-02\",\n    \"eng\": \"In a tautology, the conditions of agreement with the world (the truth conditions) - the representing relations - cancel one another out, so that it does not stand in any representing relation to reality (says nothing). [<i>Cf. 4.462.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"In der Tautologie heben die Bedingungen der \\xDCbereinstimmung mit der Welt (die Wahrheitsbedingungen) \\u2013 die darstellenden Beziehungen \\u2013 einander auf so da\\xDF sie in keiner darstellenden Beziehung zur Wirklichkeit steht (nichts sagt).\\n\"\n}, {\n    \"manuscript\": \"Ms-103,13r[1] (1916--0706) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-06\",\n    \"eng\": \"\",\n    \"ger\": \"Und insofern hat wohl auch Dostojewski recht wenn er sagt da\\xDF der welcher gl\\xFCcklich ist den Zweck des Daseins erf\\xFCllt.\\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,14r[5] et 15r[1] (1916--0708) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-08\",\n    \"eng\": \"\",\n    \"ger\": \"An einen Gott glauben hei\\xDFt die Frage nach  / dem Sinne des Lebens verstehen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,1r[1] (1916--040? --0415?) (NB)\",\n    \"pt-number\": \"5\\u2022412\",\n    \"pt-page\": \"81[4]\",\n    \"tlp-number\": \"5\\u2022556 b 1\",\n    \"cross-reference\": \"\\t15.4.16 (1)\\n\",\n    \"date\": \"1916-04-15\",\n    \"eng\": \"We can anticipate only what we ourselves construct. [<i>See 5.556.]\\n\\n  \\t\\t \\n\",\n    \"ger\": \"Nur was wir selbst konstruieren, k\\xF6nnen wir voraussehen! \\n\"\n}, {\n    \"manuscript\": \"Ms-103,21r[1] (1916--0709) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-09\",\n    \"eng\": \"\",\n    \"ger\": \"Wenn man nicht die allgemeinste Satzform angeben k\\xF6nnte, dann m\\xFC\\xDFte ein Moment kommen, wo wir pl\\xF6tzlich eine neue Erfahrung machen, sozusagen eine logische. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,22r[2] (1916--0711) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-11\",\n    \"eng\": \"\",\n    \"ger\": \"Der bestimmte Gegenstand ist eine sehr merkw\\xFCrdige Erscheinung. \\n\\n  \\t\\t \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-103,23r[3] (1916--0712? --0713?) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-12\",\n    \"eng\": \"\",\n    \"ger\": \"Immer wieder f\\xFChlt man da\\xDF auch im Elementarsatz von allen Gegenst\\xE4nden die Rede ist. \\n     (\\u2203x) . \\u03C6x . x = a \\n\\n  \\t\\t \\n\"\n}, \"date\", \"1916-07-12\"), {\n    \"manuscript\": \"Ms-103,24r[3] (1916--0714) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-14\",\n    \"eng\": \"\",\n    \"ger\": \"Und dieser Ausdruck mu\\xDF auch schon in der allgemeinen Form des Operationszeichens gegeben sein. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,27r[5] et 28r[1] (1916--0721) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-07-21\",\n    \"eng\": \"\",\n    \"ger\": \"Was f\\xFCr eine Bewandtnis hat es eigentlich mit dem menschlichen  / Willen? Ich will \\u201EWillen\\u201D vor allem den Tr\\xE4ger von Gut und B\\xF6se nennen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,37r[6] (1916--0802) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-08-02\",\n    \"eng\": \"\",\n    \"ger\": \"Und dieses Bewu\\xDFtsein ist das Leben selber. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,3r[2] (1916--0417) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-04-17\",\n    \"eng\": \"\",\n    \"ger\": \"Die obige Definition kann in ihrer Allgemeinheit nur eine Schriftzeichenregel sein die mit dem Sinne der Zeichen nichts zu tun hat. \\n     Aber kann es eine solche Regel geben? \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,41r[4] (1916--0805) (NB)\",\n    \"pt-number\": \"5\\u20223354\",\n    \"pt-page\": \"60[3]\",\n    \"tlp-number\": \"5\\u2022631 (1)\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-08-05\",\n    \"eng\": \"\",\n    \"ger\": \"Das vorstellende Subjekt ist wohl leerer Wahn. Das wollende Subjekt aber gibt es. \\n\\n\\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,42r[4] (1916--0807) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-08-07\",\n    \"eng\": \"\",\n    \"ger\": \"Das Ich ist kein Gegenstand. \\n\\n  \\t\\t \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-103,42r[5] (1916--0808? --0811?) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-08-08\",\n    \"eng\": \"\",\n    \"ger\": \"Jedem Gegenstand stehe ich objektiv gegen\\xFCber. Dem Ich nicht. \\n\\n\\t\\t \\n\"\n}, \"date\", \"1916-08-08\"), {\n    \"manuscript\": \"Ms-103,44r[3] (1916--0813) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-08-13\",\n    \"eng\": \"\",\n    \"ger\": \"Angenommen der Mensch k\\xF6nnte seinen Willen nicht bet\\xE4tigen m\\xFC\\xDFte aber alle Not dieser Welt leiden, was k\\xF6nnte ihn dann gl\\xFCcklich machen? \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,47r[4] et 48r[1] (1916--0819? --0829?) (NB)\",\n    \"pt-number\": \"5\\u20223071\",\n    \"pt-page\": \"80[4]\",\n    \"tlp-number\": \"5\\u2022474 \",\n    \"cross-reference\": \"\\t29.8.16 (1)+\\n\",\n    \"date\": \"1916-08-19\",\n    \"eng\": \"\",\n    \"ger\": \"Die Frage ist, ob die gew\\xF6hnliche kleine Anzahl von Grundoperationen gen\\xFCgt um alle m\\xF6glichen Operationen herzustellen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,4r[1] (1916--0423) (NB)\",\n    \"pt-number\": \"5\\u202200161\",\n    \"pt-page\": \"102[5]\",\n    \"tlp-number\": \"5\\u2022251* \",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-04-23\",\n    \"eng\": \"\",\n    \"ger\": \"Die obige Definition handelt aber gar nicht von allen S\\xE4tzen denn sie enth\\xE4lt wesentlich wirkliche Variable. Sie ist ganz analog einer Operation als deren Basis auch ihr eigenes Resultat genommen werden kann. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,51r[3] (1916--0911) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-09-11\",\n    \"eng\": \"\",\n    \"ger\": \"Die6 Art und Weise wie die Sprache bezeichnet spiegelt sich in ihrem Gebrauche wieder. \\n\\n\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,54r[4] (1916--1007) (NB)\",\n    \"pt-number\": \"6\\u2022431\",\n    \"pt-page\": \"85[6]\",\n    \"tlp-number\": \"6\\u202245 (1)*\",\n    \"cross-reference\": \"\\t7.10.16 (2,3)+\\n\",\n    \"date\": \"1916-10-07\",\n    \"eng\": \"\",\n    \"ger\": \"Das Kunstwerk ist der Gegenstand sub specie aeternitatis gesehen; und das gute Leben ist die Welt sub specie aeternitatis gesehen. Dies ist der Zusammenhang zwischen Kunst und Ethik.\\n\\n\\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,57r[2] (1916--1009) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-09\",\n    \"eng\": \"\",\n    \"ger\": \"Nun ist aber endlich der Zusammenhang der Ethik mit der Welt klar zu machen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,57r[3] (1916--1012) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-12\",\n    \"eng\": \"\",\n    \"ger\": \"Ein Stein, der K\\xF6rper eines Tiers, der K\\xF6rper eines Menschen, mein K\\xF6rper, stehen alle auf gleicher Stufe. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,59r[3] (1916--1015) (NB)\",\n    \"pt-number\": \"5\\u202240421\",\n    \"pt-page\": \"90[3]\",\n    \"tlp-number\": \"5\\u202261 (4)\",\n    \"cross-reference\": \"\\t15.10.16 (1)+\\n\",\n    \"date\": \"1916-10-15\",\n    \"eng\": \"\",\n    \"ger\": \"     Was man sich nicht denken kann, dar\\xFCber kann man auch nicht reden. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,5r[4] et 6r[1] (1916--0427) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-04-27\",\n    \"eng\": \"\",\n    \"ger\": \"Sagen wir ich wollte eine Funktion von 3 unter einander unauswechselbaren Argumenten  / darstellen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,64r[3] et 65r[1] (1916--1017) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-17\",\n    \"eng\": \"\",\n    \"ger\": \"Und in diesem Sinne kann ich auch  / von einem der ganzen Welt gemeinsamen Willen sprechen. \\n     Aber dieser Wille ist in einem h\\xF6heren Sinne <u>mein Wille. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,65r[3] (1916--1020) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-20\",\n    \"eng\": \"\",\n    \"ger\": \"Es ist klar da\\xDF mein Gesichtsraum der L\\xE4nge nach anders beschaffen ist als der Breite nach. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,68r[3] (1916--1021) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-21\",\n    \"eng\": \"\",\n    \"ger\": \"Denn etwas ist wohl an der Auffassung als sei das Sch\\xF6ne der Zweck der Kunst. Und das Sch\\xF6ne ist eben das was gl\\xFCcklich macht. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,68r[4] et 69r[1] (1916--1029) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-10-29\",\n    \"eng\": \"\",\n    \"ger\": \"     K\\xF6nnte man nicht sagen die Allgemeinheit ist der Zusammensetzung ebensowenig koordiniert wie Tatsache dem Ding? / Beide Arten von Operationszeichen m\\xFCssen oder k\\xF6nnen im Satz nebeneinander vorkommen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,69r[2] (1916--1104) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-04\",\n    \"eng\": \"\",\n    \"ger\": \"Ist der Wille eine Stellungnahme zur Welt. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,78r[5] et 79r[1] (1916--1108) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-08\",\n    \"eng\": \"\",\n    \"ger\": \"Ist der Glaube eine Erfahrung? \\nIst der Gedanke eine  / Erfahrung? \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,79r[4] (1916--1119) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-19\",\n    \"eng\": \"\",\n    \"ger\": \"Was f\\xFCr ein Grund ist da, zur Annahme eines wollenden Subjekts? \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,79r[6] et 80r[1] (1916--1121) (NB)\",\n    \"pt-number1\": \"4\\u20224303\",\n    \"pt-number2\": \"4\\u202243012\",\n    \"pt-page1\": \"46[6]\",\n    \"pt-page2\": \"78[11]\",\n    \"tlp-number1\": \"4\\u20225 (3)b**\",\n    \"tlp-number2\": \"4\\u20225 (3a) \",\n    \"cross-reference1\": \"\\t16.4.16 (1)+  21.11.16 (1)+\\n\",\n    \"cross-reference2\": \"\\t16.4.16 (1)+   21.11.16 (1)+\\n\",\n    \"date\": \"1916-11-21\",\n    \"eng\": \"\",\n    \"ger\": \"Da\\xDF es m\\xF6glich ist die allgemeine Satzform aufzustellen sagt nichts anderes als: Jede m\\xF6gliche Satzform  / mu\\xDF sich <u>voraussehen lassen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,7r[4] et 8r[1] (1916--0511) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-05-11\",\n    \"eng\": \"\",\n    \"ger\": \"Es gibt eben auch Operationen  / mit zwei Basen. Und die \\u2018 \\u2223 \\u2019-Operation ist von dieser Art. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,84r[2] (1916--1122) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-22\",\n    \"eng\": \"\",\n    \"ger\": \"Der Begriff der Operation ist ganz allgemein derjenige, nach welchem nach einer Regel Zeichen gebildet werden k\\xF6nnen. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,84r[3] (1916--1123) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-23\",\n    \"eng\": \"\",\n    \"ger\": \"Worauf st\\xFCtzt sich die M\\xF6glichkeit der Operation. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,86r[2] (1916--1124) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-24\",\n    \"eng\": \"\",\n    \"ger\": \"Wenn das allgemeine Kennzeichen der Operation bekannt sein wird dann wird auch klar sein aus welchen Elementarbestandteilen eine <u>Operation immer besteht. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,87r[1] (1916--1126) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-26\",\n    \"eng\": \"\",\n    \"ger\": \"Alle Operationen sind aus den Grundoperationen zusammengesetzt. \\n\\n  \\t\\t \\n\"\n}, _defineProperty({\n    \"manuscript\": \"Ms-103,87r[2] (1916--1127? --1128?) (NB)\",\n    \"pt-number\": \"1\\u202221\",\n    \"pt-page\": \"78[10]\",\n    \"tlp-number\": \"1\\u202221\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-11-27\",\n    \"eng\": \"\",\n    \"ger\": \"Entweder eine Tatsache ist in einer anderen enthalten, oder sie ist unabh\\xE4ngig von ihr. \\n\\n  \\t\\t \\n\"\n}, \"date\", \"1916-11-27\"), {\n    \"manuscript\": \"Ms-103,87r[3] (1916--1202) (NB)\",\n    \"pt-number\": \"5\\u2022322\",\n    \"pt-page\": \"63[5]\",\n    \"tlp-number\": \"5\\u2022523\",\n    \"cross-reference\": \"\",\n    \"date\": \"1916-12-02\",\n    \"eng\": \"\",\n    \"ger\": \"Die \\xC4hnlichkeit der Allgemeinheitsbezeichnung mit dem Argument zeigt sich wenn wir statt \\u03C6a schreiben (ax).\\u03C6x. \\n\\n  \\t\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,8r[7] et 9r[1] et 10r[1] (1916--0525? --0611?) (NB)\",\n    \"pt-number1\": \"6\\u202241\",\n    \"pt-number2\": \"5\\u202233531\",\n    \"pt-number3\": \"6\\u20225211\",\n    \"pt-page1\": \"75[4]\",\n    \"pt-page2\": \"83[8]\",\n    \"pt-page3\": \"83[3]\",\n    \"tlp-number1\": \"6\\u202241*\",\n    \"tlp-number2\": \"5\\u2022621 \",\n    \"tlp-number3\": \"6\\u2022521 (2)* \",\n    \"cross-reference1\": \"\\t11.6.16 (5)**\\n\",\n    \"cross-reference2\": \"\\t11.6.16 (6)+   24.7.16 (1)\\n\",\n    \"date\": \"1916-06-11\",\n    \"eng\": \"That this sense does not reside in it but outside it. [<i>Cf. 6.41.]\\n5\\u202233531\\t83[8]\\t5\\u2022621 \\t\\t11.6.16 (6)+   24.7.16 (1)\\n\\n     Da\\xDF das Leben die Welt ist. \\n\\nThat life is the world. [<i>Cf. 5.621.]\\n\\n     Da\\xDF mein Wille die Welt durchdringt. \\n     Da\\xDF mein Wille gut oder b\\xF6se ist. \\n     Da\\xDF also Gut und B\\xF6se mit dem Sinn der Welt  / irgendwie zusammenh\\xE4ngt. \\n6\\u20225211\\t83[3]\\t6\\u2022521 (2)* \\t(11.6.16 (10)+)   7.7.16 (1)  ???\\n\\n     Den Sinn des Lebens, d.i. den Sinn der Welt, k\\xF6nnen wir Gott nennen. \\n     Und das Gleichnis von Gott als einem Vater daran kn\\xFCpfen. \\nDas Gebet ist der Gedanke an den Sinn des Lebens. \\nIch kann die Geschehnisse der Welt nicht nach meinem Willen lenken sondern bin vollkommen machtlos. \\nNur so kann ich mich unabh\\xE4ngig von der Welt machen \\u2013 und sie also doch in gewissem Sinne beherrschen \\u2013 indem ich auf einen Einflu\\xDF auf die Geschehnisse verzichte. \\n\\n\\t\\t \\n\",\n    \"ger\": \"Was wei\\xDF ich \\xFCber Gott und  / den Zweck des Lebens? \\n     Ich wei\\xDF da\\xDF diese Welt ist. \\n     Da\\xDF ich in ihr stehe wie mein Auge in seinem Gesichtsfeld. \\n     Da\\xDF etwas an ihr problematisch ist was wir ihren Sinn nennen. \\n6\\u202241\\t75[4]\\t6\\u202241*\\t\\t11.6.16 (5)**\\n\\n     Da\\xDF dieser Sinn nicht in ihr liegt sondern au\\xDFer ihr. \\n\"\n}, {\n    \"manuscript\": \"Ms-103,90r[3] (1917--0108) (NB)\",\n    \"pt-number\": \"6\\u20223752\",\n    \"pt-page\": \"94[6]\",\n    \"tlp-number\": \"6\\u20223751 (3)** \",\n    \"cross-reference\": \"\\t8.1.17 (1,2)**\\n\",\n    \"date\": \"1917-01-08\",\n    \"eng\": \"\",\n    \"ger\": \"Es ist klar da\\xDF das logische Produkt zweier Elementars\\xE4tze nie eine Tautologie sein kann. \\n\\n\\t \\n\"\n}, {\n    \"manuscript\": \"Ms-103,91r[2] (1917--0110) (NB)\",\n    \"pt-number\": \"\",\n    \"pt-page\": \"\",\n    \"tlp-number\": \"\",\n    \"cross-reference\": \"\",\n    \"date\": \"1917-01-10\",\n    \"eng\": \"\",\n    \"ger\": \"Wenn der Selbstmord erlaubt ist dann ist alles erlaubt. \\n\\n  \\t\\t \\n\"\n}];\n\n//# sourceURL=webpack:///./src/recto.js?");

/***/ }),

/***/ "./src/verso.js":
/*!**********************!*\
  !*** ./src/verso.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar verso = exports.verso = [{\n    \"manuscript\": \"Ms-101,11r[2]\",\n    \"date\": \"1914-08-26\",\n    \"eng\": \"Yesterday, I resolved to not put up any resistance. To make my exterior very light, so to speak, to leave my interior undisturbed.\",\n    \"ger\": \"Habe mir gestern vorgenommen keinen Widerstand zu leisten. Mein \\xC4u\\xDFeres sozusagen ganz leicht zu machen um mein Inneres ungest\\xF6rt zu lassen.\"\n}, {\n    \"manuscript\": \"Ms-101,11r[3]\",\n    \"date\": \"1914-08-29\",\n    \"eng\": \"Every night I stand on the command bridge until about 3:30 a.m. I have not yet fully carried out my plan of complete passivity. My comrades\\u2019 malice is still terrible to me. But just stay true to yourself! Get a little work done every day, yet still without any real success. Although some things are beginning to dawn.\",\n    \"ger\": \"Jede Nacht stehe ich auf der Kommandobr\\xFCcke bis etwa 3\\xBD a.m. Mein Vorhaben der vollkommenen Passivit\\xE4t habe ich noch nicht recht ausgef\\xFChrt. Die Niedertracht der Kameraden ist mir noch immer schrecklich. Aber nur bei sich bleiben! Arbeite t\\xE4glich etwas aber noch ohne rechten Erfolg. Obwohl schon manches aufd\\xE4mmert.\"\n}, {\n    \"manuscript\": \"Ms-101,11r[4] et 12r[1]\",\n    \"date\": \"1914-09-02\",\n    \"eng\": \"Every night, except yesterday, on the searchlight. I sleep during the day.\\nThis duty is pleasant to me insofar as it takes me further away from the malice of my comrades. Yesterday we heard about an enormous battle that has already been going on for 5 days. If only it were decisive! Masturbated yesterday for the first time in 3 weeks. I'm almost completely unsensual. While I used to imagine conversations with a friend, this almost never happens now. Work a little bit every day but am too tired and distracted. Yesterday I started reading Tolstoy's exposition of the Gospels. A magnificent work. But it does not yet offer me what I expected from it.\",\n    \"ger\": \"Jede Nacht mit Ausnahme von gestern beim Scheinwerfer. Am Tag schlafe ich.\\n/ Dieser Dienst ist mir insofern angenehm als ich dadurch der Bosheit der Kameraden mehr entzogen bin Gestern h\\xF6rten wir hier von einer enormen Schlacht die schon 5 Tage im Gang sei. W\\xE4re es nur schon die Entscheidung! Gestern zum ersten Mal seit 3 Wochen onaniert. Bin fast ganz unsinnlich. W\\xE4hrend ich mir fr\\xFCher immer Gespr\\xE4che mit einem Freund vorstellte geschieht dies jetzt fast nie. Arbeite t\\xE4glich ein ganz klein wenig bin aber zu m\\xFCde und abgelenkt. Gestern fing ich an in Tolstois Erl\\xE4uterungen zu den Evangelien zu lesen. Ein herrliches Werk. Es ist mir aber noch nicht das was ich davon erwartete.\"\n}, {\n    \"manuscript\": \"Ms-101,13r[3] \",\n    \"date\": \"1914-09-03\",\n    \"eng\": \"Worked yesterday, not completely unsuccessfully. Read Tolstoy with great profit.\",\n    \"ger\": \"Gestern nicht ganz erfolglos gearbeitet. In Tolstoi gelesen mit gro\\xDFem Gewinn.\"\n}, {\n    \"manuscript\": \"Ms-101,16v[2]\",\n    \"date\": \"1914-09-04\",\n    \"eng\": \"Things are moving! \\u2013 Pluck up courage! - Work hard.\",\n    \"ger\": \"Es geht! \\u2014 Nur Mut! \\u2014 Arbeite viel.\"\n}, {\n    \"manuscript\": \"Ms-101,17v[2]\",\n    \"date\": \"1914-09-05\",\n    \"eng\": \"I am on my way to a great discovery. But will I get there?! Am more sensual than before. Masturbated again today. It's icy and stormy outside. Am lying on the straw on the ground, writing and reading on a small wooden case (price 2.50 crowns).\",\n    \"ger\": \"Ich bin auf dem Wege zu einer gro\\xDFen Entdeckung. Aber ob ich dahingelangen werde?! Bin sinnlicher / als fr\\xFCher. Heute wieder onaniert. Drau\\xDFen ist es eisig & st\\xFCrmisch. Ich liege auf dem Stroh am Boden & schreibe & lese auf einem kleinen Holzkoffer (Preis 2\\u02D950 Kronen).\"\n}, {\n    \"manuscript\": \"Ms-101,18v[2]\",\n    \"date\": \"1914-09-06\",\n    \"eng\": \"Still being tormented by most of the comrades, as before. I still haven't found any response to it that would be satisfactory. I have not yet opted for outright passivity. And that's probably foolish, because I'm powerless against all these men. I wear myself out uselessly if I defend myself.\",\n    \"ger\": \"Werde von den meisten Kameraden nach wie vor gequ\\xE4lt. Ich habe noch immer kein Verhalten dagegen gefunden das zufriedenstellend w\\xE4re. Zur vollkommenen Passivit\\xE4t habe ich mich noch nicht entschlossen. Und wahrscheinlich ist das eine Torheit; denn ich bin ja gegen alle diese Menschen ohnm\\xE4chtig. Ich reibe mich nutzlos auf wenn ich mich wehre.\"\n}, {\n    \"manuscript\": \"Ms-101,1r[1]\",\n    \"date\": \"1914-08-09\",\n    \"eng\": \"The day before yesterday was accepted after the medical examination for military service and assigned to the 2nd Fortress Artillery Regiment in Krak\\xF3w. Left Vienna yesterday morning. Arriving in Krak\\xF3w this morning. Good mood. Gave my large notebook to Trenkler for safekeeping. Will I be able to get work done now??? Very curious about my future life! The military authorities in Vienna were incredibly friendly. People who were asked thousands of questions every day gave friendly and exhaustive answers. Such things are tremendously encouraging. It reminded me of the English way of doing things.\",\n    \"ger\": \"Vorgestern bei der Assentierung genommen worden & dem 2ten Festungsartillerie-Regiment in Krakau zugeteilt. Gestern vormittag von Wien ab. Komme heute vormittag in Krakau an. Guter Stimmung. Gab mein gro\\xDFes Schreibebuch Trenkler zur Aufbewahrung. Werde ich jetzt arbeiten k\\xF6nnen??? Sehr gespannt auf mein kommendes Leben! Die Milit\\xE4rbeh\\xF6rden in Wien waren von einer unglaublichen Freundlichkeit. Leute die von Tausenden t\\xE4glich um Rat gefragt werden gaben freundliche & ausf\\xFChrliche Antworten. So etwas ermutigt ungeheuer. Es erinnerte mich an englische Verh\\xE4ltnisse. \"\n}, {\n    \"manuscript\": \"Ms-101,1r[2] et 2r[1]\",\n    \"date\": \"1914-08-10\",\n    \"eng\": \"Have been kitted out as a recruit. Little hope of being able to make use of my technical knowledge. Need a great deal of good humor and philosophy to find my way about here. When I woke up today it was as if I was in one of those dreams where you suddenly and absurdly find yourself back at school. Of course, my position has its amusing side too and I carry out the basest duties with an almost ironic smile. Got no work done. This is a trial by fire of character precisely because so much strength is needed in order not to lose one\\u2019s good mood and energy.\",\n    \"ger\": \"Als Rekrut eingekleidet worden. Wenig Hoffnung meine technischen Kenntnisse verwenden zu k\\xF6nnen. Brauch sehr viel gute Laune & Philosophie um mich hier zurecht zu finden. Als ich heute aufwachte / war es mir wie in einem jener Tr\\xE4ume worin man pl\\xF6tzlich ganz unsinniger Weise wieder in der Schule sitzt. In meiner Stellung ist freilich auch viel Humor & ich verrichte die niedrigsten Dienste mit fast ironischem L\\xE4cheln. Nicht gearbeitet. Dies ist eine Feuerprobe des Charakters eben darum weil so viel Kraft dazu geh\\xF6rt die gute Stimmung & die Energie nicht zu verlieren.\"\n}, {\n    \"manuscript\": \"Ms-101,20v[2]\",\n    \"date\": \"1914-09-08\",\n    \"eng\": \"Learned this morning that Lemberg was occupied by the Russians. Now I know we are doomed! In the last 4 days haven\\u2019t had night duty because the nights were very bright. Worked a lot every day and read a lot in Tolstoy's exposition of the Gospels.\",\n    \"ger\": \"Erfuhr heute fr\\xFCh da\\xDF Lemberg von den Russen besetzt sei. Jetzt wei\\xDF ich da\\xDF wir hin sind! In den letzten 4 Tagen nicht Nachtdienst gehabt weil sehr helle N\\xE4chte waren. Jeden Tag viel gearbeitet und viel in Tolstois Erl\\xE4uterung zu den Evangelien gelesen.\"\n}, {\n    \"manuscript\": \"Ms-101,20v[3]\",\n    \"date\": \"1914-09-10\",\n    \"eng\": \"A lot to do. In spite of that, worked pretty well. Without definite success but not in a completely hopeless mood.\",\n    \"ger\": \"Viel zu tun. Trotzdem ziemlich gearbeitet. Ohne bestimmten Erfolg aber nicht in der gewissen hoffnungslosen Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-101,20v[4] et 21v[1]\",\n    \"date\": \"1914-09-12\",\n    \"eng\": \"The news just keeps getting worse.  Tonight we\\u2019ll be placed on full alert. Every day, I work fairly confidently, sometimes getting more and sometimes getting less done. Again and again I think of Tolstoy\\u2019s maxim: \\u201CMan is powerless in the flesh but free through the spirit.\\\" May the spirit be with me! In the afternoon the lieutenant heard shots nearby. I became very agitated. Probably we will be put on alert. How will I conduct myself when it comes to  shooting? I am afraid, not of being shot, but of not doing my duty properly. God give me strength! Amen. Amen. Amen.\",\n    \"ger\": \"Die Nachrichten werden immer schlechter. Heute nacht wird strenge Bereitschaft sein. Ich arbeite t\\xE4glich mehr oder weniger und recht zuversichtlich. / Immer wieder sage ich mir im Geiste die Worte Tolstois vor: \\u201EDer Mensch ist ohnm\\xE4chtig im Fleische aber frei durch den Geist.\\u201C M\\xF6ge der Geist in mir sein! Nachmittag h\\xF6rte der Leutnant Sch\\xFCsse in der N\\xE4he. Ich wurde sehr aufgeregt. Wahrscheinlich werden wir alarmiert werden. Wie werde ich mich benehmen wenn es zum Schie\\xDFen kommt? Ich f\\xFCrchte mich nicht davor erschossen zu werden aber davor meine Pflicht nicht ordentlich zu erf\\xFCllen. Gott gebe mir Kraft! Amen. Amen. Amen.\"\n}, {\n    \"manuscript\": \"Ms-101,21v[2] et 22v[1]\",\n    \"date\": \"1914-09-13\",\n    \"eng\": \"Very early this morning we abandoned the ship with everything on it. The Russians are at our heels. Have witnessed terrible scenes. No sleep for 30 hours; feel very weak and see no hope out there. If it is all over for me now, may I die a good death, mindful of myself. May I never lose myself.\",\n    \"ger\": \"Heute in aller Fr\\xFCh verlie\\xDFen wir das Schiff mit allem was darauf war. Die Russen sind uns auf den Fersen. Habe furchtbare Szenen miterlebt. Seit 30 Stunden nicht geschlafen; f\\xFChle mich sehr schwach und sehe keine / \\xE4u\\xDFere Hoffnung. Wenn es mit mir jetzt zu Ende geht so m\\xF6ge ich einen guten Tod sterben, eingedenk meiner selbst. M\\xF6ge ich mich nie selbst verlieren.\"\n}, {\n    \"manuscript\": \"Ms-101,22v[2]\",\n    \"date\": \"1914-09-15\",\n    \"eng\": \"Terrible scenes the night before last: nearly everyone was drunk. Back to the Goplana yesterday, which was steered into the Dunajec. Didn\\u2019t get any work done yesterday or the day before. Tried in vain, it was all alien to my mind. The Russians are at our heels. We are very close to the enemy. Am in a good mood, have got work done again. Now I can work best when I am peeling potatoes. Always volunteer for that. It\\u2019s the same to me as lens grinding was to Spinoza.\\nThe lieutenant is much more chilly with me than earlier on. But be brave!\\n\\\"Whom the genius does not forsake - - - -\\\"! God be with me! Now I might have an opportunity to be a decent human being, for I\\u2019m face to face with death. May the spirit enlighten me.\",\n    \"ger\": \"Vorgestern nachts furchtbare Szenen: fast alle Leute besoffen. Gestern wieder auf die Goplana zur\\xFCck die in den Dunajec gefahren wurde. Gestern und vorgestern nicht gearbeitet. Versuchte vergeblich, meinem Kopf war die ganz Sache fremd. Die Russen sind uns auf den Fersen. Wir sind in unmittelbarer N\\xE4he des Feindes. Bin guter Stimmung, habe wieder gearbeitet. Am besten kann ich jetzt arbeiten w\\xE4hrend ich Kartoffeln sch\\xE4le. Melde mich immer freiwillig dazu. Es ist f\\xFCr mich dasselbe was das Linsenschleifen f\\xFCr Spinoza war.\\n/ Mit dem Leutnant stehe ich viel k\\xFChler als fr\\xFCher. Aber nur Mut!\\n\\u201EWen der Genius nicht verl\\xE4\\xDFt \\u2013 \\u2013 \\u2013 \\u2013\\u201D!  Gott mit mir! Jetzt w\\xE4re mir Gelegenheit gegeben ein anst\\xE4ndiger Mensch zu sein denn ich stehe vor dem Tod Aug in Auge. M\\xF6ge der Geist mich erleuchten.\"\n}, {\n    \"manuscript\": \"Ms-101,23v[2]\",\n    \"date\": \"1914-09-16\",\n    \"eng\": \"The night passed quietly. Heard heavy gun and rifle fire this morning. In all likelihood we are inescapably lost.\\nThe spirit is still with me, but won\\u2019t it desert me in extreme hardship? I hope not! Now just pull yourself together and be brave! (9 p.m.) Cloudburst. Man is powerless in the flesh and free through the spirit. And only thus.\",\n    \"ger\": \"Die Nacht verging ruhig. Vormittag starkes Gesch\\xFCtzfeuer und Gewehrfeuer geh\\xF6rt. Wir sind aller Wahrscheinlichkeit nach unentrinnbar verloren.\\nDer Geist ist noch bei mir aber ob er mich nicht in der \\xE4u\\xDFersten Not verlassen wird? Ich hoffe nicht! Jetzt sich nur zusammennehmen und brav sein! (9 p.m.) Wolkenbruch. Der Mensch ist ohnm\\xE4chtig im Fleische und frei durch den Geist. Und nur durch diesen.\"\n}, {\n    \"manuscript\": \"Ms-101,24v[2]\",\n    \"date\": \"1914-09-17\",\n    \"eng\": \"This night passed quietly, too. Had guard duty. We\\u2019re supposed to go up the Vistula to Krakow. The border is said to be completely occupied by Cossacks, so we\\u2019re probably finished. Just one thing is necessary! The lieutenant left the ship early yesterday morning and by noon today still hasn\\u2019t returned. Nobody knows what to do and there isn\\u2019t even money to buy food. However I am still in good spirits and hope to stay that way. Keep thinking about how I can keep myself going.\",\n    \"ger\": \"Auch diese Nacht ruhig vor\\xFCber gegangen. Hatte Wache. Wir sollen die Weichsel hinauf nach Krakau fahren. Die Grenze soll ganz von Kosaken besetzt sein also sind wir wahrscheinlich hin. Nur eines ist von N\\xF6ten! Gestern fr\\xFCh hat der Leutnant das Schiff verlassen und ist bis heute mittag noch nicht zur\\xFCckgekommen. Niemand wei\\xDF was wir tun sollen und es mangelt sogar an Geld zum Einkaufen von Essen: Ich bin aber noch immer guter Dinge und werde es hoffentlich bleiben. Denke immer wieder daran wie ich mich aufrecht erhalten kann.\"\n}, {\n    \"manuscript\": \"Ms-101,24v[3]\",\n    \"date\": \"1914-09-18\",\n    \"eng\": \"Was aiming the searchlight, and feared that the light would go out any moment. We were in a very precarious position and if the light had gone out and something had happened, then I alone would have been responsible. It was a false alarm. I remained perfectly calm and had to listen to the platoon leader trying to make me look bad to the lieutenant, as though I had been frightened. This upset me terribly. From 1-3 at my post. Slept very little. Didn\\u2019t work yesterday. It\\u2019s extremely hard to offer no resistance to evil. It\\u2019s hard to serve the spirit on an empty belly and sleep-deprived. But what would I be if I couldn\\u2019t do so? The officers are rude and stupid, the comrades are stupid and rude (with very few exceptions.) On the journey to Krakow with galleys. The day passed quietly and not unpleasantly. Worked a bit. \\u2014\\u2014\",\n    \"ger\": \"Eine furchtbar aufregende Nacht.\\nSollte leuchten und mu\\xDFte jeden / Moment bef\\xFCrchten da\\xDF der Scheinwerfer ausgeht. Wir waren in einer h\\xF6chst unsicheren Stellung und w\\xE4re das Licht ausgegangen & etwas geschehen so w\\xE4re die ganze Verantwortung auf mich gefallen. Dann falscher Alarm; ich behielt vollkommene Ruhe & mu\\xDFte h\\xF6ren wie mich der Zugsf\\xFChrer beim Leutnant schlecht zu machen suchte, als sei ich furchtsam gewesen. Dies regte mich furchtbar auf. Von 1-3 auf Posten. Sehr wenig geschlafen. Gestern nicht gearbeitet. Es ist unendlich schwer sich dem B\\xF6sen nicht zu widersetzen. Es ist schwer mit leerem Magen und unausgeschlafen dem Geiste zu dienen. Aber was w\\xE4re ich wenn ich es nicht k\\xF6nnte. Die Vorgesetzten sind grob und dumm, die Kameraden sind dumm und grob (mit ganz wenigen Ausnahmen.) Auf der Fahrt nach Krakau mit / Galeeren. Der Tag verlief ruhig und nicht unangenehm. Etwas gearbeitet. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-101,26v[2]\",\n    \"date\": \"1914-09-19\",\n    \"eng\": \"To Krakow. Yesterday evening I had to run the searchlight on another ship until 11 o'clock. Very cold at night. We had to sleep in our boots. Slept badly. I haven't changed my clothes and shoes for 4 days. But that shouldn't make any difference. \\u2014\\u2014 I can't help but be afraid of what will happen to me in Krakow. I know I shouldn't worry about it, but I feel so tired that I'm afraid of any effort. \\u2014\\u2014!\",\n    \"ger\": \"Nach Krakau. Gestern abends mu\\xDFte ich auf einem anderen Schiff bei der Arbeit bis 11 Uhr leuchten. In der Nacht sehr kalt. Wir mu\\xDFten in Stiefeln schlafen. Schlecht geschlafen. Schon seit 4 Tagen habe ich meine Kleider & Schuhe nicht ausgezogen. Aber das darf nichts machen. \\u2014\\u2014  Ich kann nicht umhin mich davor zu f\\xFCrchten was mit mir in Krakau geschehen wird. Ich wei\\xDF ich sollte mir dar\\xFCber keine Sorge machen, aber ich f\\xFChle mich so m\\xFCde da\\xDF ich mich vor jeder Anstrengung f\\xFCrchte. \\u2014\\u2014!\"\n}, {\n    \"manuscript\": \"Ms-101,26v[3]\",\n    \"date\": \"1914-09-20\",\n    \"eng\": \"Yes, one more time: it is infinitely hard not to resist the wickedness of men! For the wickedness of men always leaves a wound. \\u2014\\u2014\\nThe Russians have been driven so far from the border that we have not been troubled yet.\",\n    \"ger\": \"Ja, nochmals: Es ist unendlich schwer sich der Bosheit der Menschen nicht / zu widersetzen! Denn die Bosheit der Menschen schl\\xE4gt einem jedes Mal eine Wunde. \\u2014\\u2014\\nDie Russen sind von der Grenze soweit vertrieben worden da\\xDF wir bis jetzt noch nicht bel\\xE4stigt worden sind.\"\n}, {\n    \"manuscript\": \"Ms-101,27v[2]\",\n    \"date\": \"1914-09-21\",\n    \"eng\": \"Arrived in Krakow early this morning. Was on duty on the reflector all night. Worked a lot yesterday but not very hopeful because I lacked the right overview. Had a short discussion with our platoon leader yesterday which cleared the air a little. Somewhat out of sorts today: I'm already so tired of all the agitation! I\\u2019ve heard nothing at all from Vienna! Today I received a card from Mama which she wrote on August 20th. In the evening I received the distressing news that the lieutenant who was our commander has been transferred. This news depressed me deeply. I can\\u2019t give an exact account of the cause of the despondency, but I am deeply sad. I am free through the spirit, but the spirit has forsaken me! Could still do some work in the evening, which made me feel better about it. \\u2014\\u2014\",\n    \"ger\": \"Heute fr\\xFCh in Krakau angekommen. Die ganze Nacht beim Reflektor Dienst gehabt. Gestern viel gearbeitet aber nicht sehr hoffnungsvoll da mir der rechte \\xDCberblick fehlte. Hatte gestern eine kleine Aussprache mit unserem Zugsf\\xFChrer die die Luft ein wenig reinigte. Heute etwas mi\\xDFgestimmt: Ich bin die vielen Aufregungen schon so m\\xFCde! Von Wien h\\xF6re ich gar nichts! Heute erhielt ich eine Karte von Mama die sie am 20.8. schrieb. Abends erhielt ich die niederschlagende Nachricht / da\\xDF der Leutnant der unser Kommandant war transferiert worden ist. Diese Nachricht hat mich tief deprimiert. Ich kann mir zwar keine genaue Rechenschaft ablegen \\xFCber eine zwingende Ursache zur Niedergeschlagenheit aber ich bin tief traurig. Ich bin zwar frei durch den Geist aber der Geist hat mich verlassen! Konnte am Abend noch etwas arbeiten, f\\xFChlte mich darauf besser. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-101,28v[2]\",\n    \"date\": \"1914-09-22\",\n    \"eng\": \"In the barracks this morning, to pick up money from the captain. He told me to get one-year volunteer stripes sewn on. Did a lot of errands and went back to the ship, where the stripes caused a big sensation. Received a lot of cards and letters from Ficker and Jolles among others. Didn't work. \\u2014\\u2014.\",\n    \"ger\": \"Vormittag in der Kaserne um Geld zu holen, beim Hauptmann. Er sagte ich solle mir die Einj\\xE4hrigen-Streifen aufn\\xE4hen lassen. Viele Besorgungen gemacht und aufs Schiff zur\\xFCck wo die Streifen gro\\xDFes Aufsehen erregten. Erhielt eine Menge Karten & Briefe u.a. von Ficker & Jolles. Nicht gearbeitet. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-101,28v[3]\",\n    \"date\": \"1914-09-23\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-101,29v[2]\",\n    \"date\": \"1914-09-24\",\n    \"eng\": \"Worked quite a bit but rather hopelessly. Afternoon in the city.\",\n    \"ger\": \"Ziemlich viel gearbeitetaber ziemlich hoffnungslos. Nachmittags in der Stadt.\"\n}, {\n    \"manuscript\": \"Ms-101,29v[3]\",\n    \"date\": \"1914-09-25\",\n    \"eng\": \"Worked quite a bit but without any real confidence. I still lack an overview and this makes the problem seem unsurveyable.\",\n    \"ger\": \"Ziemlich viel gearbeitet aber ohne echte Zuversicht. Es fehlt mir noch immer der \\xDCberblick und dadurch erscheint das Problem un\\xFCbersehbar.\"\n}, {\n    \"manuscript\": \"Ms-101,29v[4]\",\n    \"date\": \"1914-09-27\",\n    \"eng\": \"Worked pretty well yesterday but without real success. Somewhat sensual again in the last few days. Telegraphed home yesterday and asked for news.\",\n    \"ger\": \"Gestern ziemlich gearbeitet aber ohne rechten Erfolg. In den letzten Tagen wieder etwas sinnlich. Telegrafierte gestern nach Hause und bat um Nachricht.\"\n}, {\n    \"manuscript\": \"Ms-101,29v[5]\",\n    \"date\": \"1914-09-28\",\n    \"eng\": \"Worked a bit. A siege of Krak\\xF3w is expected. If it happens, we\\u2019re in for even harder times. May the spirit give me strength!\",\n    \"ger\": \"Etwas gearbeitet. Man erwartet eine Belagerung von Krakau. Wenn sie eintritt so stehen uns noch schwere Zeiten bevor. M\\xF6ge der Geist mir Kraft schenken!\"\n}, {\n    \"manuscript\": \"Ms-101,2r[2]\",\n    \"date\": \"1914-08-11\",\n    \"eng\": \"Slept badly (bugs). After I swept the room we marched up to a few old mortars and were taught how to use them. Terribly hot. The food is inedible. Will perhaps sleep outside the barracks in future. Wrote to David. Am already longing for a letter from him so as not to lose the feeling of being in touch with my former life. Haven\\u2019t got any work done yet.\",\n    \"ger\": \"Schlecht geschlafen (Ungeziefer). Nachdem ich das Zimmer gekehrt hatte marschierten wir zu ein paar alten M\\xF6rsern und wurden im Gebrauch instruiert. Furchtbar hei\\xDF. Das Essen ist une\\xDFbar. Werde vielleicht in Zukunft au\\xDFerhalb der Kaserne schlafen. An David geschrieben. Sehne mich schon nach einem Brief von ihm um das Gef\\xFChl des Kontakts mit meinem fr\\xFCheren Leben nicht zu verlieren. Noch nicht gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-101,2r[3] et 3r[1]\",\n    \"date\": \"1914-08-13\",\n    \"eng\": \"Met the captain the day before yesterday. Was very confused and failed to stand at attention in the military way. He was somewhat ironic and not really my cup of tea. Result = 0. Today it came out that I had passed the school leaving exam etc. whereupon some people who had done that called me \\u201Cdear colleague\\u201D and urged me to assert my right to volunteer. I enjoyed this. (It bucked me up.) Heavy catarrh yesterday and today and often feeling unwell. Sometimes a little depressed. Met a lieutenant in the canteen today who noticed that I was having lunch there. He asked me very nicely what I did in ordinary life, was very surprised that they hadn't enlisted me as a one-year volunteer and was generally very friendly, which pleased me a lot.\",\n    \"ger\": \"Vorgestern beim Hauptmann gewesen. War sehr verdattert und stand nicht milit\\xE4rm\\xE4\\xDFig vor ihm. Er war etwas ironisch und mir nicht / recht sympathisch. Resultat = 0. Heute kam es heraus da\\xDF ich Matura etc. gemacht hatte worauf eine ganze Reihe der Einj\\xE4hrigen mich mit Herr Kollege betitelten & auf mich eindrangen ich solle doch mein Freiwilligenrecht geltend machen. Dies machte mir Spa\\xDF(. It bucked me up). Gestern & heute starken Katarrh & oft Unwohlbefinden. Manchmal ein wenig deprimiert. Traf heute in der Kantine einen Leutnant dem es auffiel da\\xDF ich dort zu Mittag a\\xDF. Er fragte mich sehr nett was ich im Zivil sei wunderte sich sehr da\\xDF sie mich nicht zu den einj\\xE4hrig Freiwilligen genommen hatten & war \\xFCberhaupt sehr freundlich was mir sehr wohl tat.\"\n}, {\n    \"manuscript\": \"Ms-101,30v[2]\",\n    \"date\": \"1914-09-29\",\n    \"eng\": \"Brought a corporal who has dysentery to the hospital this morning. There are a lot of dysentery cases here now. It makes me feel strange when I think what I will have to experience in this war. Worked but without success. I still don't see clearly and have no overview. I see details without knowing how they will fit into the whole. That's also why I feel every new problem as a burden. But a clear overview should show that every problem is the principal problem, and that looking at the main questions does not weaken but strengthens! Worked in the evening, not without success. Courage! \\u2014\\u2014\",\n    \"ger\": \"Heute morgen einen Korporal ins Spital gebracht der an Ruhr erkrankt ist. Hier kommen jetzt viel Ruhrf\\xE4lle vor. Es wird mir eigent\\xFCmlich zumute wenn ich denke was ich in diesem Krieg noch alles erleben m\\xFCssen werde. Gearbeitet aber ohne Erfolg. Ich sehe noch immer nicht klar und habe keinen \\xDCberblick. Ich sehe Einzelheiten ohne zu wissen wie sie sich in das Ganze einf\\xFCgen werden. Darum auch f\\xFChle ich jedes neue Problem als eine B\\xFCrde. W\\xE4hrend ein klarer \\xDCberblick zeigen m\\xFC\\xDFte da\\xDF jedes Problem das Hauptproblem ist und der Anblick der Hauptfragen ermattet nicht sondern er st\\xE4rkt! Abends nicht ohne Erfolg gearbeitet. Nur Mut! \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-101,31v[2]\",\n    \"date\": \"1914-09-30\",\n    \"eng\": \"I started to feel uncomfortable tonight. (Stomach and head). Thy will be done!\",\n    \"ger\": \"Heute nacht begann ich mich unwohl zu f\\xFChlen. (Magen und Kopf). Dein Wille geschehe!\"\n}, {\n    \"manuscript\": \"Ms-101,31v[3]\",\n    \"date\": \"14-10-01\",\n    \"eng\": \"Yesterday I had to lie down in the morning and lay there all day because I felt very unwell. Worked quite a bit, but without success. They say we will leave this ship tomorrow. I\\u2019m curious about what will happen to me. \\u2014\\u2014!\",\n    \"ger\": \"Gestern mu\\xDFte ich mich am Vormittag hinlegen und den ganzen Tag liegenbleiben da ich mich sehr unwohl f\\xFChlte. Ziemlich viel gearbeitet, aber ohne Erfolg. Es hei\\xDFt da\\xDF wir morgen von diesem Schiff weg sollen. Ich bin neugierig was mit mir geschehen wird. \\u2014\\u2014!\"\n}, {\n    \"manuscript\": \"Ms-101,31v[4]\",\n    \"date\": \"1914-10-02\",\n    \"eng\": \"Worked quite a bit. Not entirely without success. It is still undecided what will happen to me, whether I will stay on the ship or not etc. etc.\",\n    \"ger\": \"Ziemlich viel gearbeitet. Nicht ganz ohne Erfolg. Es ist noch immer unbestimmt was mit mir geschehen wird, ob ich auf dem Schiff bleibe oder nicht etc. etc.\"\n}, {\n    \"manuscript\": \"Ms-101,31v[5]\",\n    \"date\": \"1914-10-03\",\n    \"eng\": \"Today it was decided that all the old crew of this ship, with the exception of 4 men including myself, are to leave the ship. This is not unpleasant to me. Today I got a chest from home with fresh clothes, tea, rusks and chocolate. Just as if dear Mama had sent it; but no message! Is Mama dead? And is that why they didn't send me any message?? Did almost no work.\",\n    \"ger\": \"Es ist heute die Bestimmung getroffen worden da\\xDF die ganze alte / Mannschaft dieses Schiffes, mit Ausnahme von 4 Mann darunter ich, das Schiff verlassen soll. Dies ist mir nicht unangenehm. Von Zuhause erhielt ich heute eine Kiste worin warme W\\xE4sche, Tee, Zwieback & Schokolade war. Also gerade als ob die liebe Mama sie geschickt h\\xE4tte; aber keine Nachricht! Ist Mama tot? Und schickt man mir darum keine Nachricht?? Fast nicht gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-101,32v[2]\",\n    \"date\": \"1914-10-04\",\n    \"eng\": \"Did some work yesterday evening. Received a card today that Mama wrote to me on the 9th of last month. It contains nothing important. After a brief upswing, my work has stalled again today. Worked quite a bit but without hope. In the next few days we are supposed to go back to Russia. I don't like our new commander, a first lieutenant, even though I have seen him only briefly.\",\n    \"ger\": \"Gestern abends noch etwas gearbeitet. Erhielt heute eine Karte die Mama an mich am 9. des vorigen Monats geschrieben hat. Sie enth\\xE4lt nichts Wichtiges. Meine Arbeit ist nach kurzem Aufschwung heute wieder ins Stocken geraten. Ziemlich viel gearbeitet aber ohne Hoffnung. In den n\\xE4chsten Tagen sollen wir wieder nach Ru\\xDFland / fahren. Unser neuer Kommandant, ein Oberleutnant, gef\\xE4llt mir nicht recht obwohl ich ihn nur fl\\xFCchtig gesehen habe.\"\n}, {\n    \"manuscript\": \"Ms-101,33v[2]\",\n    \"date\": \"1914-10-05\",\n    \"eng\": \"Today I received a letter from Keynes which came by way of Norway to the regional regimental command! He only writes to ask me how to handle Johnson's money after the war. The letter stung me, for it is painful to receive a business letter from someone with whom one had previously been on good terms; and especially at this time. - I just received a card from Mama from the first of the month. Everything is all right! Well then! \\u2013 Have thought often of Russell in the last few days. Does he still think of me? The way we met was awfully strange! In times when things are going well externally, one doesn\\u2019t think of the powerlessness of the flesh; but if one thinks in a time of need, one is aware of it. And one turns to the spirit. \\u2014\\u2014\",\n    \"ger\": \"Heute erhielt ich einen Brief von Keynes der \\xFCber Norwegen ans hiesige Regimentskommando kam! Er schreibt nur um mich zu fragen wie es mit Johnsons Geld nach dem Kriege werden wird. Der Brief hat mir einen Stich gegeben denn es schmerzt einen Gesch\\xE4ftsbrief von einem zu kriegen mit dem man fr\\xFCher gut gestanden ist; und gar in dieser Zeit. \\u2013 Soeben erhielt ich eine Karte von Mama vom ersten des Monats. Alles wohl! Nun also! \\u2013 Dachte in den letzten Tagen oft an Russell. Ob er noch an mich denkt? Es war doch merkw\\xFCrdig, unser Zusammentreffen! In den Zeiten des \\xE4u\\xDFeren Wohlergehens denken / wir nicht an die Ohnmacht des Fleisches; denkt man aber an die Zeit der Not dann kommt sie einem zum Bewu\\xDFtsein. Und man wendet sich zum Geist. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-101,34v[2]\",\n    \"date\": \"1914-10-06\",\n    \"eng\": \"Worked rather a lot yesterday. A man should not depend on what happens. Neither propitious nor unpropitious. Yesterday the new commander came aboard the ship. \\u2014\\u2014 Now they are sending people from the lighting unit here on the ship who paw around at the reflector. Don\\u2019t worry!! An order has just come to move on towards Russia. So it will be serious again! God with me. \",\n    \"ger\": \"Gestern ziemlich viel gearbeitet. Der Mensch darf nicht vom Zufall abh\\xE4ngen. Weder von g\\xFCnstigen noch von ung\\xFCnstigen. Gestern kam der neue Kommandant aufs Schiff. \\u2014\\u2014 Jetzt schicken sie Leute von der Beleuchtungsabteilung hierher aufs Schiff die beim Reflektor herumpatzen. Sorge dich nicht!! Soeben kam Befehl nach Ru\\xDFland abzufahren. Also wird es wieder ernst! Gott mit mir.\"\n}, {\n    \"manuscript\": \"Ms-101,34v[3]\",\n    \"date\": \"1914-10-07\",\n    \"eng\": \"Travelled through the night towards Russia; hardly slept at all, duty at the searchlights, etc. We should soon be under fire. Spirit with me. Here in Szczucin we hear that the Russians are still 80 kilometers away, but we have signs that something is already going on nearby. We are in the mouth of the Wisloka (in the evening). I feel icy cold \\u2014 on the inside. I have that certain feeling: if I could only sleep in before the story begins.  \\u2014\\u2014\\u2014\\u2014! Better condition. Worked a little. I still don't understand how to do my duty just because it is my duty and to reserve all of my being for the spiritual life. I may die in an hour, I may die in two hours, I may die in a month or not for a few years; I can't know about it, and I can't do anything for or against it: such is this life. How then ought I to live to exist at that moment? To live in the good and beautiful until life stops by itself.\",\n    \"ger\": \"Die Nacht durch nach Ru\\xDFland gefahren; fast gar nicht geschlafen, Dienst beim Scheinwerfer etc. Wir sollen bald ins Feuer kommen. Der Geist mit mir. Hier in Szczucin / h\\xF6ren wir da\\xDF die Russen noch 80 Kilometer weit entfernt seien aber wir haben Anzeichen da\\xDF hier in der N\\xE4he schon etwas los ist. Wir stehen in der M\\xFCndung der Wisloka (abends). Es ist mir eisig kalt \\u2013 von innen. Ich habe jenes gewisse Gef\\xFChl: wenn ich mich nur noch einmal ausschlafen k\\xF6nnte ehe die Geschichte anf\\xE4ngt. \\u2014\\u2014\\u2014\\u2014! Besseres Befinden. Wenig gearbeitet. Ich verstehe es noch immer nicht meine Pflicht nur zu tun weil es meine Pflicht ist und meinen ganzen Menschen f\\xFCr das geistige Leben zu reservieren. Ich kann in einer Stunde sterben, ich kann in zwei Stunden sterben, ich kann in einem Monat sterben oder erst in ein paar Jahren; ich kann es nicht wissen & nichts daf\\xFCr oder dagegen tun: So ist dies Leben. Wie mu\\xDF ich also leben um in jenem Augenblick zu bestehen? Im Guten & Sch\\xF6nen zu leben bis das Leben von selbst aufh\\xF6rt.\"\n}, {\n    \"manuscript\": \"Ms-101,35v[2]\",\n    \"date\": \"1914-10-08\",\n    \"eng\": \"Continue travelling towards Sandomierz. The night was calm; I was very tired and slept soundly. At Tarnobrzeg now, and go on to Sandomierz in an hour and a half. If I\\u2019m tired and cold then I soon, unfortunately, lose the courage to endure life as it is. But I\\u2019m trying not to lose it. \\u2014\\u2014. Every hour of physical well-being is a mercy.\",\n    \"ger\": \"Fahren weiter gegen Sandomierz zu. Die / Nacht war ruhig; ich sehr m\\xFCde und schlief fest. Stehen jetzt bei Tarnobrzeg & fahren in anderthalb Stunden gegen Sandomierz. Wenn ich m\\xFCde bin & mir ist kalt dann verliere ich leider bald den Mut das Leben zu ertragen wie es ist. Aber ich bem\\xFChe mich ihn nicht zu  verlieren. \\u2014\\u2014. Jede Stunde des leiblichen Wohlergehens ist eine Gnade.\"\n}, {\n    \"manuscript\": \"Ms-101,36v[2]\",\n    \"date\": \"1914-10-09\",\n    \"eng\": \"Quiet night. Constant cannons firing in the distance. Still in Tarnobrzeg. There is clearly an enormous battle going on nearby, as we have heard constant artillery fire for over 12 hours. Our new crew is much better (nicer and more decent) than the old one. Order: everyone take up arms on the deck. God with me! \\u2014 Travel to Sandomierz. Hear constant heavy artillery fire and see the grenades explode. I am in a very good mood. \\u2014\\u2014! Most violent bombardment all day. Worked a lot; at least one fundamental thought is not yet in my grasp. \\u2014\\u2014.\",\n    \"ger\": \"Ruhige Nacht. In der Ferne fortw\\xE4hrender Kanonendonner. Stehen noch immer bei Tarnobrzeg. Hier in der N\\xE4he findet offenbar eine enorme Schlacht statt, da man schon seit \\xFCber 12 Stunden ununterbrochenen Gesch\\xFCtzdonner h\\xF6rt; unsere neue Besatzung ist viel besser (netter & anst\\xE4ndiger) als die alte. Befehl: alles bewaffnet auf dem Deck antreten. Gott mit mir! \\u2014 Nach Sandomierz gefahren. H\\xF6ren fortw\\xE4hrenden starken Gesch\\xFCtzdonner / & sehen die Granaten explodieren. Ich bin sehr guter Stimmung. \\u2014\\u2014! Den ganzen Tag heftigste Kanonade. Viel gearbeitet; es ist mir noch zum mindesten ein grundlegender Gedanke ausst\\xE4ndig. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,37v[2]\",\n    \"date\": \"1914-10-10\",\n    \"eng\": \"Quiet night. Early on, the bombardment began again. Should now continue to Zawichost. Stopped in Nadbrzezie. I am currently sleeping by the wall of our commander's cabin and overheard a conversation with the platoon leader: We are to help the Germans build a crossing over the Vistula. He said we shouldn't expect artillery fire but only infantry fire. Worked a lot but without positive success. It is as if a thought is on the tip of my tongue. \\u2014\\u2014!\",\n    \"ger\": \"Ruhige Nacht. Fr\\xFCh die Kanonade wieder aufgenommem. Sollen jetzt weiter nach Zawichost fahren. Stehen in Nadbrzezie. Ich schlafe gerade an der Wand der Kaj\\xFCte unseres Kommandanten und habe ein Gespr\\xE4ch der Zugsf\\xFChrer mit ihm belauscht: Wir sollen den \\xDCbergang \\xFCber die Weichsel f\\xFCr die Deutschen formieren helfen. Er sagte wir h\\xE4tten kein Artilleriefeuer sondern nur Infanteriefeuer zu erwarten. Viel gearbeitet aber ohne positiven Erfolg. Es ist mir als l\\xE4ge mir ein Gedanke schon fast auf der Zunge. \\u2014\\u2014! \"\n}, {\n    \"manuscript\": \"Ms-101,37v[3]\",\n    \"date\": \"1914-10-11\",\n    \"eng\": \"Quiet night. - Always carry Tolstoy\\u2019s \\\"Exposition of the Gospels\\\" around with me like a talisman. I eavesdrop on another conversation between our commanding officer and that of another ship: today we are supposed to stay here in Nadbrzezie and maybe early in the morning travel down stream.  I have just overheard that Antwerp has fallen! And somewhere our troops have won a great battle. The grace that I enjoy in being able to think and work now is indescribable. I must become indifferent to the difficulties of external life. Tonight we are supposed to go to Zawichost to land troops and supplies; we have to travel directly in front of the Russian positions. God with me. \\u2014\\u2014.\",\n    \"ger\": \"Ruhige Nacht. \\u2014 Trage die \\\"Darlegung des / Evangeliums\\\" von Tolstoi immer mit mir herum, wie einen Talisman. Ich belausche wieder ein Gespr\\xE4ch unseres Kommandanten mit dem eines anderen Schiffes: heute sollen wir hier in Nadbrzezie bleiben und erst morgen vielleicht hinunter fahren. Soeben erlausche ich die Nachricht da\\xDF Antwerpen gefallen ist! Und irgendwo haben unsere Truppen eine gro\\xDFe Schlacht gewonnen. Die Gnade die ich genie\\xDFe indem ich jetzt denken & arbeiten kann ist unbeschreiblich. Ich mu\\xDF Gleichg\\xFCltigkeit gegen die Schwierigkeiten des \\xE4u\\xDFeren Lebens erlangen. Heute nacht sollen wir nach Zawichost fahren um Truppen & Material zu landen; wir m\\xFCssen gerade vor die russischen Stellungen hinfahren. Gott mit mir. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,38v[2]\",\n    \"date\": \"1914-10-12\",\n    \"eng\": \"Didn't go to Zawichost. Quiet night. Listen again: a first lieutenant and 2 lieutenants with our commander: they still don't definitely know what they will do but it is likely that we will go to Zawichost. The foreign first lieutenant is very ambitious and definitely wants us to get to the front. \\u2014\\u2014Times of indifference to outer fate alternate in me with ones when I long for outer freedom and peace, when I am tired of having to carry out any command spinelessly. Completely uncertain about the near future! In short, there are times when I can't only live in the present and for the spirit. One ought to enjoy the good hours of life gratefully, as a mercy, and otherwise face life with indifference. Today I struggled with depression for a long time, then masturbated again after a long time and finally wrote the previous sentence.\",\n    \"ger\": \"Sind nicht nach Zawichost gefahren. Ruhige Nacht. Horche wieder: Ein Oberleutnant & / 2 Leutnants mit unserem Kommandanten: sie wissen noch nicht bestimmt was sie tun werden aber es ist wahrscheinlich da\\xDF wir nach Zawichost fahren. Der fremde Oberleutnant ist sehr ehrgeizig und will durchaus da\\xDF wir zur Front kommen. \\u2014\\u2014Es wechseln in mir Zeiten der Gleichg\\xFCltigkeit gegen das \\xE4u\\xDFere Schicksal mit solchen in welchen ich mich wieder nach \\xE4u\\xDFerer Freiheit und Ruhe sehne, wo ich es m\\xFCde bin willenlos jeden beliebigen Befehl ausf\\xFChren zu m\\xFCssen. \\xDCber die n\\xE4chste Zukunft v\\xF6llig im Ungewissen! Kurz es gibt Zeiten wo ich nicht blo\\xDF in der Gegenwart und f\\xFCr den Geiste leben kann. Die guten Stunden des Lebens soll man als Gnade dankbar genie\\xDFen und sonst gegen das Leben gleichg\\xFCltig sein. Heute habe ich lange mit einer Depression gek\\xE4mpft dann nach langer Zeit wieder onaniert und endlich den vorigen Satz geschrieben.\"\n}, {\n    \"manuscript\": \"Ms-101,3r[2] et 4r[1] et 5r[1]\",\n    \"date\": \"1914-08-15\",\n    \"eng\": \"So much happens that a day seems as long as a week to me. I was ordered yesterday to operate a searchlight on a ship we captured on the Vistula.  The crew are a pack of pigs! No enthusiasm, unbelievably crude, stupid, and malicious! So it is not true, after all, that a great common cause must make men nobler. As a result, utter drudgery becomes a kind of slave labour. It is odd how people make their own work into hideous toil. In all our external circumstances, our work on this boat could be a wonderfully happy time, and instead! - It will probably be impossible to communicate with the people here (except, perhaps, for the Lieutenant who seems to be a fairly nice person). So do your work humbly and don't lose yourself for God's sake!!!!  The easiest way to lose oneself is to want to give oneself to other people.   \",\n    \"ger\": \"Es geschieht so viel da\\xDF mir ein Tag so lange vorkommt wie eine Woche. Bin gestern zur Bedienung eines Scheinwerfers auf einem von uns gekaperten Schiffe auf der Weichsel / beordert worden. Die Bemannung ist eine Saubande! Keine Begeisterung, unglaubliche Rohheit, Dummheit & Bosheit! Es ist also doch nicht wahr da\\xDF die gemeinsame gro\\xDFe Sache die Menschen adeln mu\\xDF. Hierdurch wird auch die l\\xE4stigste Arbeit zum Frondienst. Es ist merkw\\xFCrdig wie sich die Menschen ihre Arbeit selbst zu einer h\\xE4\\xDFlichen M\\xFChsal machen. Unter allen unseren \\xE4u\\xDFeren Umst\\xE4nden k\\xF6nnte die Arbeit auf diesem Schiffe eine herrliche gl\\xFCckliche Zeit geben und statt dessen! \\u2014 Es wird wohl unm\\xF6glich sein sich hier mit den Leuten zu verst\\xE4ndigen (au\\xDFer etwa mit dem Leutnant der ein ganz netter Mensch zu sein scheint). Also in Demut die Arbeit verrichten und sich selbst um Gottes willen nicht verlieren!!!! N\\xE4mlich am leichtesten verliert man sich / selbst wenn man sich anderen Leuten schenken will.\"\n}, {\n    \"manuscript\": \"Ms-101,40v[2]\",\n    \"date\": \"1914-10-13\",\n    \"eng\": \"At 11:30 the order came that we shouldn't go to Zawichost, or not yet. So, quiet night. Just now hear that our ships have been ordered to move down the Vistula immediately. \\u2014\\u2014. We are already underway. \",\n    \"ger\": \"Um 11\\xBD kam der Befehl da\\xDF wir nicht oder doch noch nicht nach Zawichost fahren. Also, ruhige Nacht. H\\xF6re soeben da\\xDF unsere Schiffe Befehl gekriegt haben sofort die Weichsel hinunter zu fahren. \\u2014\\u2014. Wir fahren bereits.\"\n}, {\n    \"manuscript\": \"Ms-101,41v[3]\",\n    \"date\": \"1914-10-14\",\n    \"eng\": \"Quiet night. Stopped in Sandomierz until the evening and will probably still be there tonight. Worked a great deal but not very satisfyingly as it is still difficult to arrive at an overview. \\u2014\\u2014.\",\n    \"ger\": \"Ruhige Nacht. Bis abends in Sandomierz gestanden & werden wohl auch noch diese Nacht da stehen. Sehr viel gearbeitet aber nicht sehr befriedigt da es wieder schwer ist den \\xDCberblick zu gewinnen. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,42v[2]\",\n    \"date\": \"1914-10-15\",\n    \"eng\": \"Quiet night. Masturbate about once in 1\\xBD weeks now. Do little manual work, but on the other hand all the more mentally//spiritually//; go to sleep at 9 and get up at 6. I hardly ever speak to the current commander. But he is probably not that bad. At a standstill in Sandomierz all day and will probably stay here at night. Worked a great deal and not without confidence. It almost seems to me that I am about to find a solution. \\u2014\\u2014.\",\n    \"ger\": \"Ruhige Nacht. Onaniere jetzt etwa einmal in 1\\xBD Wochen. Arbeite wenig manuell, aber daf\\xFCr um so mehr geistig; gehe um 9 Uhr schlafen und um 6 stehe ich auf. Mit dem jetzigen Kommandanten spreche ich so gut wie nie. Er ist aber wohl nicht allzu schlecht. Standen den ganzen Tag in Sandomierz & werden wohl auch nachts hier bleiben. Sehr viel gearbeitet und nicht ohne Zuversicht. Es scheint mir fast als st\\xFCnde ich knapp vor einer L\\xF6sung. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,42v[3]\",\n    \"date\": \"1914-10-16\",\n    \"eng\": \"Early in the morning at 8 went to Szczucin to get cannons.\",\n    \"ger\": \"Fr\\xFCh um 8 nach Szczucin gefahren um Gesch\\xFCtze zu holen.\"\n}, {\n    \"manuscript\": \"Ms-101,42v[4]\",\n    \"date\": \"1914-10-17\",\n    \"eng\": \"Worked a great deal yesterday; the knot tightened more and more but I didn't find a solution. In the evening we stopped at Baranow and now move since 6 p.m. further towards Szczucin. \\u2014\\u2014 Will the redeeming thought come to me? Whether it will come??!! \\u2014\\u2014 Masturbated yesterday and today. \\u2014\\u2014Arrived in Szczucin in the evening where we will stop for the night. Worked a great deal. I'm a bit worn out by it. Accumulated a great deal of material without being able to organize it. But I think this rush of material is a good sign. Remember how great the grace of work is! \\u2014\\u2014.\",\n    \"ger\": \"Gestern sehr viel gearbeitet; der Knoten zog sich immer mehr zusammen aber ich fand keine L\\xF6sung. Abends blieben wir bei Baranow / stehen & fahren jetzt um 6 p.m. weiter nach Szczucin. \\u2014\\u2014 Ob mir der erl\\xF6sende Gedanke kommen wird? ob er kommen wird??!! \\u2014\\u2014Gestern und heute onaniert. \\u2014\\u2014 Abends in Szczucin angekommen wo wir die Nacht \\xFCber stehen bleiben werden. Sehr viel gearbeitet. Bin davon etwas angegriffen. Sehr viel Material angeh\\xE4uft ohne es ordnen zu k\\xF6nnen. Aber diesen Andrang von Material halte ich f\\xFCr ein gutes Zeichen. Erinnere dich wie gro\\xDF die Gnade der Arbeit ist! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,43v[2]\",\n    \"date\": \"1914-10-18\",\n    \"eng\": \"Shopping in the morning. At noon we left for Tarnobrzeg. In Tarnobrzeg at 5 p.m. Worked a little. Towards evening officers came to examine the ship. I began a conversation with one of them who noticed my volunteer insignia. We talked to each other very pleasantly for over an hour. He was very friendly and not stupid. He spoke to me as \\\"thou\\\", which made me happy. Worked a little but that doesn't matter! - Stay overnight in Tarnobrzeg. \\u2014\\u2014.\",\n    \"ger\": \"Vormittag einkaufen. Um Mittag fuhren wir nach Tarnobrzeg ab. 5 p.m. in Tarnobrzeg. Wenig gearbeitet. Gegen abend kamen Offiziere aufs Schiff um es anzuschauen. Ich kam mit einem ins Gespr\\xE4ch dem mein Freiwilligenabzeichen auffiel. Wir sprachen \\xFCber eine Stunde / mit einander sehr gem\\xFCtlich. Er war sehr freundlich und nicht dumm. Er trug mir das \\\"Du\\\" an, was mich freute. Wenig gearbeitet aber das macht nichts! \\u2014 Bleiben \\xFCber Nacht in Tarnobrzeg. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,44v[2]\",\n    \"date\": \"1914-10-19\",\n    \"eng\": \"Travel early to Sandomierz where we are now. Masturbated again at night (half in a dream). That is because I get little, almost no exercise. In the afternoon we went back to Tarnobrzeg again. Since yesterday my digestion is not quite right. \\u2014\\u2014 The solution to the problem is on the tip of my tongue! \\u2014\\u2014 Towards evening to Sandomierz again. I don't feel very well, no real zest for life.  \\u2014\\u2014! Worked a great deal. \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh nach Sandomierz gefahren wo wir jetzt stehen. Nachts wieder onaniert (halb im Traum). Das kommt daher da\\xDF ich wenig, fast gar keine Bewegung mache. Nachmittag wieder nach Tarnobrzeg gefahren. Bin seit gestern mit meiner Verdauung nicht ganz in der Ordnung. \\u2014\\u2014 Die L\\xF6sung des Problems liegt mir auf der Zunge! \\u2014\\u2014 Gegen abend wieder nach Sandomierz. F\\xFChle mich nicht recht wohl, keine echte Lebenslust. \\u2014\\u2014! Sehr viel gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,45v[2]\",\n    \"date\": \"1914-10-20\",\n    \"eng\": \"Unwell. Worked a great deal. Felt better in the afternoon. But I'm not really happy; I long for David: If I could at least write to him. But my spirit speaks in me to counter my depression. God with me. \\u2014\\u2014.\",\n    \"ger\": \"Unwohl. Sehr viel gearbeitet. Nachmittag besseres Befinden. Bin aber nicht recht gl\\xFCcklich; habe Sehnsucht nach David: Wenn ich ihm wenigstens schreiben k\\xF6nnte. Aber mein Geist spricht in mir gegen meine Depression. Gott mit mir. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,45v[3]\",\n    \"date\": \"1914-10-21\",\n    \"eng\": \"They say we shall go to Krakow again; that would not be disagreeable to me. \\u2014\\u2014. Stay here all day in Sandomierz. Worked a great deal and confidently. A bit tired in the evening and in this state I am quite vulnerable to depression. But take heart! \\u2014\\u2014\",\n    \"ger\": \"Es hei\\xDFt wir sollen wieder nach Krakau fahren; das w\\xE4re mir nicht unangenehm. \\u2014\\u2014. Stehen den ganzen Tag hier in Sandomierz. Sehr viel & mit Zuversicht gearbeitet. Abends etwas m\\xFCde & in diesem Zustand bin ich Depressionen recht zug\\xE4nglich; aber, nur Mut! \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-101,45v[4]\",\n    \"date\": \"1914-10-22\",\n    \"eng\": \"The battle around here continues. Heavy barrage yesterday. Worked a lot. Stationary all day. \\u2014\\u2014.\",\n    \"ger\": \"Die Gefechte hier in der N\\xE4he dauern fort. Gestern starke Kanonade. Viel gearbeitet. Den ganzen Tag gestanden. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,46v[2]\",\n    \"date\": \"1914-10-23\",\n    \"eng\": \"Now going to Tarnobrzeg this morning. I work very hard but still without success. Back in Sandomierz in the evening. Worked a great deal. Think about David a lot. Will I ever see him again? \\u2014\\u2014! \\u2014\\u2014.\",\n    \"ger\": \"Fahren jetzt, vormittags, nach Tarnobrzeg. Arbeite sehr flei\\xDFig aber noch ohne Erfolg. Abends wieder in Sandomierz. Sehr viel gearbeitet. Denke viel an David. Ob ich ihn noch einmal sehen werde? \\u2014\\u2014! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,46v[3]\",\n    \"date\": \"1914-10-24\",\n    \"eng\": \"Slept badly. (Too little exercise!) Our commander is very mediocre; haughty, sullen, and treats everyone as his servant. To Tarnobrzeg in the afternoon, where we stay tonight. Worked a great deal, no success yet, but great confidence. I am now laying siege to my problem. \\u2014\\u2014.\",\n    \"ger\": \"Schlecht geschlafen. (Zu wenig Bewegung!). Unser Kommandant ist sehr m\\xE4\\xDFig; hochm\\xFCtig unfreundlich & behandelt jeden als seinen Diener. Nachmittag nach Tarnobrzeg wo wir diese Nacht bleiben. Sehr viel gearbeitetzwar noch ohne Erfolg aber mit viel Zuversicht. Ich belagere jetzt mein Problem. \\u2014\\u2014..\"\n}, {\n    \"manuscript\": \"Ms-101,46v[4]\",\n    \"date\": \"1914-10-25\",\n    \"eng\": \"Early to Sandomierz. Yesterday evening we received the nonsensical news that Paris had fallen. Incidentally, I was also pleased at first until I saw that it was impossible. Such impossible news is always a very bad sign. If something really had gone well for us, then that would be reported and no one would fall for such absurdities. So today I feel more than ever the terribly sad position of our race - the German race!! For it seems almost certain to me that we cannot beat England: The English - the best race in the world - cannot lose! We, however, can lose and will lose, if not this year then the next! The thought that our race will be defeated depresses me terribly because I am German through and through!\\nAre suddenly caught by rifle fire from the Russians\\nGod with me! \\u2014\\u2014 It was only a Russian plane. \\u2014\\u2014, \\u2014\\u2014. Worked a great deal. Spend the night in Tarnobrzeg and go early tomorrow morning towards Szczucin. At noon my depression yielded \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh nach Sandomierz. Gestern abends kam uns die unsinnige Nachricht zu Paris sei gefallen. Auch ich war \\xFCbrigens / zuerst erfreut bis ich die Unm\\xF6glichkeit der Nachricht einsah. Solche unm\\xF6glichen Nachrichten sind immer ein sehr schlechtes Zeichen. Wenn wirklich etwas f\\xFCr uns G\\xFCnstiges vorf\\xE4llt dann wird das berichtet & niemand verf\\xE4llt auf solche Absurdit\\xE4ten. F\\xFChle darum heute mehr als je die furchtbare Traurigkeit unserer \\u2014 der deutschen Rasse \\u2014 Lage!! Denn da\\xDF wir gegen England nicht aufkommen k\\xF6nnen scheint mir so gut wie gewi\\xDF: Die Engl\\xE4nder \\u2014 die beste Rasse der Welt \\u2014 k\\xF6nnen nicht verlieren! Wir aber k\\xF6nnen verlieren und werden verlieren, wenn nicht in diesem Jahr so im n\\xE4chsten! Der Gedanke da\\xDF unsere Rasse geschlagen werden soll deprimiert mich furchtbar denn ich bin ganz & gar deutsch!\\n/ Werden pl\\xF6tzlich durch Gewehrfeuer von den Russen\\nGott mit mir! \\u2014- Es war nichts als ein russischer Aeroplan. \\u2014\\u2014, \\u2014\\u2014. Sehr viel gearbeitet. Stehen die Nacht \\xFCber in Tarnobrzeg & fahren morgen fr\\xFCh gegen Szczucin. Gegen Mittag wich meine Depression \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,48v[2]\",\n    \"date\": \"1914-10-26\",\n    \"eng\": \"Towards Szczucin, early. Underway all day. Have a headache and am tired. Still worked a lot. \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh gegen Szczucin. Fahren den ganzen Tag \\xFCber. Habe Kopfschmerzen & bin m\\xFCde. Trotzdem viel gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,48v[3]\",\n    \"date\": \"1914-10-27\",\n    \"eng\": \"Further towards Szczucin, early. Worked a great deal. I'm on guard duty tonight. \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh gegen Szczucin weiter gefahren. Sehr viel gearbeitet. Heute nacht habe ich Wachdienst. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,48v[4]\",\n    \"date\": \"1914-10-28\",\n    \"eng\": \"In the morning and afternoon almost unable to work due to extreme fatigue. Hardly slept at night. Most of the crew was drunk, so my guard duty was quite awful. Left early, going towards Sandomierz. A paddle wheel broke on the way. We have to be towed to Krakow by another ship. On the way to Krakow. Received a lot of mail today, among other things the sad news that Paul is badly wounded and a Russian prisoner - in good care, thank God. Poor, poor Mama!!! \\u2014\\u2014\\u2014\\u2014. \\u2014\\u2014Also good news from Ficker and Jolles. Finally a letter from Norway in which Draegni asks me for 1000 crowns. But can I send it to him? Now that Norway has joined our enemies!!! A terribly sad fact, for that matter. Again and again I can\\u2019t help thinking of poor Paul, so suddenly deprived of his vocation! How terrible. What philosophy it would take to get over that! If only there is some solution other than suicide!! \\u2014\\u2014 Couldn't work much, but work with confidence. \\u2014\\u2014\\u2014\\u2014. Thy will be done. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Vor- & nachmittag wegen sehr gro\\xDFer M\\xFCdigkeit fast unf\\xE4hig zu arbeiten. Schlief in der Nacht / so gut wie nichts. Der gr\\xF6\\xDFte Teil der Mannschaft war besoffen so da\\xDF meine Wache recht unangenehm war. Fuhren fr\\xFCh gegen Sandomierz. Auf dem Wege brach ein Schaufelrad. Wir m\\xFCssen nach Krakau von einem anderen Schiff geschleppt werden. Auf der Fahrt nach Krakau. Erhielt heute viel Post u.a. die traurige Nachricht da\\xDF Paul schwer verwundet & in russischer Gefangenschaft ist \\u2014 Gott sei Dank in guter Pflege. Die arme, arme Mama!!! \\u2014\\u2014\\u2014\\u2014. \\u2014\\u2014 Auch von Ficker & der Jolles liebe Nachricht. Endlich einen Brief aus Norwegen worin Draegni mich um 1000 Kronen bittet. Aber ob ich sie ihm senden kann? Jetzt wo Norwegen sich unseren Feinden angeschlossen hat!!! Dies ist \\xFCbrigens / auch eine furchtbar traurige Tatsache. Immer wieder mu\\xDF ich an den armen Paul denken der so pl\\xF6tzlich um seinen Beruf gekommen ist! Wie furchtbar. Welche Philosophie w\\xFCrde es bed\\xFCrfen dar\\xFCber hinweg zu kommen! Wenn dies \\xFCberhaupt anders als durch Selbstmord geschehen kann!! \\u2014\\u2014 Konnte nicht viel arbeiten, arbeite aber mit Zuversicht. \\u2014\\u2014\\u2014\\u2014. Dein Wille geschehe. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,50v[2]\",\n    \"date\": \"1914-10-29\",\n    \"eng\": \"On the way to Krakow. We stopped because our tug had to go back to Sandomierz. Waiting until it comes back. Headache and fatigue in the morning. Thought a lot about Paul. Worked a great deal. Still besiege my problem, have already taken many forts. Now see as clearly and calmly as only in the best of times. If only this time I could solve all the essentials before the good time is over!!! \\u2014\\u2014.\",\n    \"ger\": \"Auf dem Weg nach Krakau. Blieben stehen weil unser Schlepper nach Sandomierz zur\\xFCck mu\\xDFte. Warten bis er zur\\xFCckkommt. Vormittag Kopfschmerzen & M\\xFCdigkeit. Dachte viel an Paul. Sehr viel gearbeitet. Belagere noch immer mein Problem, habe schon viele Forts genommen. / Sehe jetzt so klar & ruhig wie nur in den besten Zeiten. Wenn ich nur diesmal alles Wesentliche l\\xF6sen k\\xF6nnte ehe die gute Zeit um ist!!! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-101,51v[2]\",\n    \"date\": \"1914-10-30\",\n    \"eng\": \"Got a German newspaper today. No good news, which means as much as bad news! It's hard to work if such thoughts disturb one!! Nevertheless, did also work in the afternoon. I often find it difficult that I have nobody here that I can talk to. But I want to survive//stand my ground// resisting all forces.\",\n    \"ger\": \"Erhielten heute eine deutsche Zeitung. Keine guten Nachrichten was so viel hei\\xDFt als schlechte Nachrichten! Es ist schwer zu arbeiten wenn solche Gedanken einen st\\xF6ren!! Habe trotzdem auch am Nachmittag gearbeitet. Ich empfinde oft schwer da\\xDF ich hier niemand habe mit dem ich mich etwas aussprechen kann. Aber ich will mich allen Gewalten zum Trotze erhalten.\"\n}, {\n    \"manuscript\": \"Ms-101,5r[2]\",\n    \"date\": \"1914-08-16\",\n    \"eng\": \"On the \\\"Goplana\\\". Once again: The stupidity, insolence and wickedness of these people knows no bounds. Every job grows into a torment. But I have already got work done again today and will not lose heart. Wrote a card to dear David today. Heaven protect him and maintain his friendly feelings for me! - The journey itself along the Vistula is wonderful and I'm in a good mood.\",\n    \"ger\": \"Auf der \\u201EGoplana\\u201D. Nochmals: Die Dummheit, Frechheit & Bosheit dieser Menschen kennt keine Grenzen. Jede Arbeit wird zur Qual. Aber ich habe heute schon wieder gearbeitet & werde mich nicht unterkriegen lassen. Schrieb heute eine Karte an den lieben David. Der Himmel besch\\xFCtze ihn & erhalte mir seine Freundschaft! \\u2014 Die Fahrt selbst entlang der Weichsel ist herrlich & ich bin in guter Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-101,5r[4] et 6r[1]\",\n    \"date\": \"1914-08-17\",\n    \"eng\": \"A gang of crooks! Only the officers are nice people, and some really very fine. Have to sleep on bare ground and without blankets. Are in Russia now. Due to the hard work, I have become completely unsensual. Haven\\u2019t worked yet today. Good mood.  It\\u2019s too cold on deck and below there are too many men talking, screaming, stinking etc. etc.\",\n    \"ger\": \"Ein Gaunerpack! Die Offiziere nur sind nette Menschen & zum Teil wirklich / sehr fein. M\\xFCssen auf der blo\\xDFen Erde schlafen und ohne Decken. Sind jetzt in Ru\\xDFland. Durch die schwere Arbeit bin ich ganz unsinnlich geworden. Heute noch nicht gearbeitet. G.S.. Auf dem Deck ist es zu kalt & unten sind zu viel Menschen die sprechen, schreien, stinken etc. etc.Bos\"\n}, {\n    \"manuscript\": \"Ms-101,6r[2] et 7r[1]\",\n    \"date\": \"1914-08-18\",\n    \"eng\": \"At 1 am I\\u2019m suddenly woken up, the lieutenant asks for me and says I have to man the searchlight immediately. \\\"Don't get dressed.\\\" I ran onto the command bridge almost naked. Icy air, rain. I was sure I\\u2019d die now. Turned the searchlight on and went back to get dressed. It was a false alarm. I was frightfully agitated & groaned out loud. I felt the horrors of war. Now (in the evening) I have got over the horror again. If I don\\u2019t lose my present orientation, I will try with all my strength to stay alive.\",\n    \"ger\": \"Nachts um 1 werde ich pl\\xF6tzlich geweckt, der Oberleutnant fragt nach mir & sagt ich m\\xFCsse sofort zum Scheinwerfer. \\u201CNicht anziehen\\\". Ich lief fast nackt auf die Kommandobr\\xFCcke. Eisige Luft, Regen. Ich war sicher jetzt w\\xFCrde ich sterben. Setzte den Scheinwerfer in Gang & zur\\xFCck mich anzukleiden. Es war falscher Alarm. Ich war furchtbar aufgeregt und st\\xF6hnte laut. Ich empfand die Schrecken des Krieges. Jetzt (abends) / habe ich den Schreck schon wieder \\xFCberwunden. Ich werde mein Leben mit aller Kraft zu erhalten trachten wenn ich nicht meinen gegenw\\xE4rtigen Sinn \\xE4ndere.\"\n}, {\n    \"manuscript\": \"Ms-101,7r[2]\",\n    \"date\": \"1914-08-21\",\n    \"eng\": \"The lieutenant and I have already talked many times about all kinds of thing; a very nice man. He is able to get along with the biggest scoundrels and be friendly without compromising himself. When we hear a Chinese person we tend to take their speech for inarticulate gurgling. One who understands Chinese will perceive the language in it. In the same way, I\\u2019m often unable to perceive the human being in someone etc.  Worked a little, but without success.\",\n    \"ger\": \"Der Leutnant & ich haben schon oft \\xFCber alles M\\xF6gliche gesprochen; ein sehr netter Mensch. Er kann mit den gr\\xF6\\xDFten Halunken umgehen und freundlich sein ohne sich etwas zu vergeben. Wenn wir einen Chinesen h\\xF6ren so sind wir geneigt sein Sprechen f\\xFCr ein unartikuliertes Gurgeln zu halten. Einer der Chinesisch versteht wird darin die Sprache erkennen. So kann ich oft nicht den Menschen im Menschen erkennen etc.. Ein wenig aber erfolglos gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-101,8r[3]\",\n    \"date\": \"1914-08-22\",\n    \"eng\": \"Have been stuck on a sandbar for 3 days. Work, often with many interruptions, and so far completely unsuccessfully. Still can't come up with anything solid. Everything dissolves in fog. Go ahead!!!\",\n    \"ger\": \"Stehen schon 3 Tage auf einer Sandbank. Arbeite oft mit vielen Unterbrechungen & bisher ganz erfolglos. Kann noch immer auf nichts Festes kommen. Alles geht in Dunst auf. Nur zu!!!\"\n}, {\n    \"manuscript\": \"Ms-101,9r[2] et 10r[1] et 11r[1]\",\n    \"date\": \"1914-08-25\",\n    \"eng\": \"Yesterday was an awful day. The searchlight wouldn\\u2019t work in the evening. When I wanted to examine it, the crew disrupted me with jeering, shouting, etc. Wanted to examine it more closely. The platoon leader took it from my hand. I can hardly go on writing. It was terrible. I saw one thing: there is not a single decent person in the whole crew. But what should be my future attitude towards all that? Should I simply go on suffering? And what if I don't want to do that? Then I\\u2019ll have to live in a perpetual struggle. What is better? In the second case, I would certainly wear myself out. Maybe not in the first. It will be an extremely difficult time for me from now on because I have been betrayed and sold out just as I was long ago at school in Linz. Only one thing is necessary: to be able to contemplate everything that happens to you; collect yourself! God help me!\",\n    \"ger\": \"Gestern ein furchtbarer Tag. Abends wollte der Scheinwerfer nicht funktionieren. Als ich ihn untersuchen wollte wurde ich von der Mannschaft durch Zurufe / Gr\\xF6len etc. gest\\xF6rt. Wollte ihn genauer untersuchen da nahm ihn der Zugsf\\xFChrer mir aus der Hand. Ich kann gar nicht weiter schreiben. Es war entsetzlich. Das Eine habe ich gesehen: Es ist nicht ein einziger anst\\xE4ndiger Kerl in der ganzen Mannschaft. Wie aber soll ich mich in Zukunft zu dem Allen stellen? Soll ich einfach dulden? Und wenn ich das nicht tun will? Dann mu\\xDF ich in einem fortw\\xE4hrenden Kampf leben. Was ist besser? Im 2. Fall w\\xFCrde ich mich sicher aufreiben. Im ersten vielleicht nicht. Es wird jetzt f\\xFCr mich eine enorm schwere Zeit kommen denn ich bin jetzt tats\\xE4chlich wieder so verkauft und verraten wie seinerzeit in der Schule in Linz. Nur eines ist n\\xF6tig: Alles was einem geschieht betrachten / k\\xF6nnen; sich sammeln! Gott helfe mir!\"\n}, {\n    \"manuscript\": \"Ms-102,10v[2] et 11v[1]\",\n    \"date\": \"1914-11-10\",\n    \"eng\": \"Worked again. And a better mood. Today I learned that I could write to England via Switzerland; I'll write to David and maybe Russell soon. Or maybe today. \\u2013 I hope I can now work better again!\",\n    \"ger\": \"Wieder mehr gearbeitet. Und / besserer Stimmung. Erfuhr heute da\\xDF ich \\xFCber die Schweiz nach England schreiben k\\xF6nne; gleich morgen werde ich an David & vielleicht an Russell schreiben. Oder vielleicht schon heute. Ich hoffe jetzt wieder besser arbeiten zu k\\xF6nnen! \"\n}, {\n    \"manuscript\": \"Ms-102,11v[2] et 12v[1]\",\n    \"date\": \"1914-11-11\",\n    \"eng\": \"Nice letter from Ficker. Worked quite a bit. We\\u2019ve already heard cannons firing from the front! Sent a letter to David. How often I think of him! Does he think of me half as much? (?)\",\n    \"ger\": \"Netten Brief von Ficker. Ziemlich viel gearbeitet. Wir h\\xF6rten schon Kanonendonner von den Werken! Habe einen Brief an David abgeschickt. Wie oft ich an ihn denke! Ob er halb so viel an mich denkt? (?) / Heute besserer Stimmung. \\u2014\\u2014! \"\n}, {\n    \"manuscript\": \"Ms-102,12v[2] et 13v[1]\",\n    \"date\": \"1914-11-12\",\n    \"eng\": \"Just don't lose yourself!!! Pull yourself together! And do your work not to pass the time but to live devoutly! Treat no one unjustly! \\u2014\\u2014 There is talk of a 6-7 month siege! All shops are closed and only open for a very short time. The more serious the situation becomes, the cruder the non-commissioned officers get. Because they feel that they can now give free rein to their viciousness with impunity since the officers are losing their heads now and no longer exercise any control for the better. Every word one hears now is an insult. Because decency no longer pays, and so people give up the little they still have. It is all extremely sad.\\nAfternoon in the city. Worked quite a lot but without any real clarity of vision! Will I still be able to continue work?(!) Is the curtain already falling?? It would be//is// odd that I'm stuck in the middle of a problem, in the middle of a siege. \\u2014\\u2014. \\u2014\\u2014!\",\n    \"ger\": \"Nur sich selbst nicht verlieren!!! Sammle dich! Und arbeite nicht zum Zeitvertreib sondern fromm um zu leben! Tue keinem ein Unrecht! \\u2014\\u2014 Es wird von einer 6-7 monatlichen Belagerung gesprochen! Alle Gesch\\xE4fte sind geschlossen & \\xF6ffnen nur auf ganz kurze Zeit. Je ernster die Lage wird desto roher werden die Unteroffiziere. Denn sie f\\xFChlen da\\xDF sie jetzt ungestraft ihre ganze Gemeinheit entladen k\\xF6nnen da jetzt die Offiziere den Kopf verlieren & im guten Sinn keine Kontrolle mehr  / aus\\xFCben. Jedes Wort was man jetzt h\\xF6rt ist eine Grobheit. Denn die Anst\\xE4ndigkeit lohnt sich auf keine Weise mehr und die Leute geben daher auch das bi\\xDFchen preis was sie etwa noch besitzen. Es ist alles tief traurig. \\nNachmittag in der Stadt. Ziemlich viel gearbeitet aber ohne rechte Klarheit des Sehens! Ob ich noch weiter werde arbeiten k\\xF6nnen?(!) Ob der Vorhang schon f\\xE4llt?? Es w\\xE4re merkw\\xFCrdig da ich inmitten eines Problems stecke, inmitten einer Belagerung. \\u2014\\u2014. \\u2014\\u2014!\"\n}, {\n    \"manuscript\": \"Ms-102,13v[2] et 14v[1] et 15v[1]\",\n    \"date\": \"1914-11-13\",\n    \"eng\": \"All morning I have tried to work, but in vain.\\nClear vision eludes me. Think a lot about my life and that is another reason why I can\\u2019t work. Or is it the other way around? I believe now that I am still not closing myself off completely enough from the others on the ship. I can\\u2019t communicate with them because I lack a certain viciousness that is needed for that. But in a quite incomprehensible way it is no easy matter for me to carry that off. Not that I felt the least bit drawn to any of them. But the habit of talking to people in a friendly way is so strong!\\nOn night duty today. Go to a coffee house every evening now and drink 2 glasses of coffee; and the respectable atmosphere does me good. Worked a little! \\u2014\\u2014!\\nGod give me reason and strength!!! \\u2014\\u2014.\",\n    \"ger\": \"Den ganzen Vormittag habe ich mich vergebens bem\\xFCht zu arbeiten.\\n/ Das klare Sehen will sich nicht einstellen. Denke viel \\xFCber mein Leben nach und dies ist auch ein Grund weshalb ich nicht arbeiten kann. Oder ist es umgekehrt? Ich glaube jetzt da\\xDF ich mich noch immer nicht genug von den anderen am Schiff abschlie\\xDFe. Ich kann mit ihnen nicht verkehren da mir die gewisse Gemeinheit fehlt die dazu n\\xF6tig ist. Aber auf ganz unbegreiflicher Weise f\\xE4llt mir dies Abschlie\\xDFen nicht leicht. Nicht da\\xDF ich mich zu irgend einem Menschen im geringsten hingezogen f\\xFChlte. Aber die Gewohnheit mit Menschen freundlich zu reden ist so stark! \\n/ Heute nacht Dienst. Gehe jetzt jeden Abend in ein Kaffeehaus & trinke 2 Gl\\xE4ser Kaffee; & die wohlanst\\xE4ndige Atmosph\\xE4re tut mir gut. Wenig gearbeitet! \\u2014\\u2014! \"\n}, {\n    \"manuscript\": \"Ms-102,15v[2] et 16v[1]v\",\n    \"date\": \"1914-11-14\",\n    \"eng\": \"On guard duty in the night, spent almost all the time working out rules for my life so that it will be halfway bearable. I'm depressed for no reason, i.e. I lack any zest for life, at the very least. And every raised voice I hear hurts me. All for no reason!! \\u2014\\u2014 I also worked on the mail tonight. \\u2014\\u2014\\nStill, I have to consider it a blessing that I can sit quietly in my room and so have the opportunity to put something together. \\u2014\\u2014 Worked very little. Very tired in the daytime, as is now often the case, unfortunately! The severe depression faded away in the afternoon but I was too tired to work. Out as usual in the evening. \\u2014\\u2014!\",\n    \"ger\": \"Nachts auf der Wache fast die ganze Zeit Vorschriften f\\xFCr mein Leben mir ausgedacht da\\xDF es halbwegs ertr\\xE4glich werde. Bin grundlos deprimiert, d.h. es fehlt mir zum mindesten jede Lebensfreude. Und jedes laute Wort das ich h\\xF6re tut mir weh. Ganz ohne Grund!! \\u2014\\u2014 Auch gearbeitet habe ich heute nacht am Posten. \\u2014\\u2014\\n/ Als eine Gnade mu\\xDF ich es noch betrachten da\\xDF ich in meiner Kammer ruhig sitzen kann & so doch Gelegenheit habe mich etwas zu sammeln. \\u2014\\u2014 Sehr wenig gearbeitet. Tags\\xFCber sehr m\\xFCde, wie jetzt leider oft! Nachmittag verging die starke Depression aber ich war zu m\\xFCde zum Arbeiten. Abends wie gew\\xF6hnlich aus. \\u2014\\u2014! \"\n}, {\n    \"manuscript\": \"Ms-102,16v[2]\",\n    \"date\": \"1914-11-15\",\n    \"eng\": \"Reading Emerson's essays now. Maybe they will have a good influence on me. Worked fairly well.  \\u2014\\u2014.\",\n    \"ger\": \"Lese jetzt in Emersons Essays. Vielleicht werden sie einen guten Einflu\\xDF auf mich haben. Ziemlich gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,18v[2] et 19v[1] et 20v[1]\",\n    \"date\": \"1914-11-17\",\n    \"eng\": \"How hard it is not to be annoyed by people! How hard it is to be tolerant. Had all sorts of things to do in the morning and couldn't get to work. Whenever I come into contact with the people here at work, their viciousness becomes so terrible to me that anger threatens to triumph and explode in me. Again and again I try to be calmly tolerant and again and again I break my resolution. And I really don't know how this happens. It's so hugely difficult to work with people and yet have nothing to do with them. Again and again you have to talk to them, ask them something, they answer insolently and inadequately \\u2013 what effort it takes to accept this \\u2013 but you need the answer. There is an unclear command, etc., etc., etc.,. And one\\u2019s nerves are already ruined anyway. Since it's hard to live if you don't understand how to take the easy way out. In the afternoon a severe depression took hold of me. It lies on my chest like a stone. Every duty becomes an unbearable burden. Towards evening my evil condition subsided. A little courage returned to my soul. Did almost no work. As is often the case now, no cheer during the day, enough inner peace only in the evening! Is that due to my looking forward to sleep in the night? \\u2013 Yes, today's depression was terrible!!! \\u2014\\u2014.\",\n    \"ger\": \"Wie schwer es ist sich nicht mit den Leuten zu \\xE4rgern! Wie schwer es ist zu dulden. Vormittag alles M\\xF6gliche zu verrichten gehabt & nicht zum Arbeiten gekommen. Wenn immer ich bei der Arbeit mit den Leuten hier in Ber\\xFChrung komme wird mir ihre Gemeinheit so f\\xFCrchterlich da\\xDF die Wut / droht in mir zu siegen & auszubrechen. Immer wieder nehme ich mir vor ruhig zu dulden & immer wieder breche ich meinen Vorsatz. Und wie dies kommt wei\\xDF ich eigentlich selber nicht. Es ist so riesig schwer mit Leuten zu arbeiten & dabei doch nichts mit ihnen zu tun zu haben. Immer wieder mu\\xDF man zu ihnen reden, sie etwas fragen, sie antworten frech & ungen\\xFCgend \\u2013 welcher Kraftaufwand schon, dies hinzunehmen \\u2013 du brauchst aber die Antwort. Es kommt ein unklarer Befehl, etc., etc., etc. Und die Nerven sind ohnehin schon ruiniert. Da ist es schwer zu leben wenn man nicht versteht es sich ganz  / leicht zu machen. Nachmittag fa\\xDFte mich eine schwere Depression an. Wie ein Stein liegt es auf meiner Brust. Jede Pflicht wird zur unertr\\xE4glichen B\\xFCrde. Gegen Abend legte sich mein \\xDCbelbefinden. In meine Seele kehrte etwas Mut zur\\xFCck. Fast nicht gearbeitet. Untertags, wie jetzt schon oft, war keine Stimmung, erst abends gen\\xFCgende innere Ruhe! Ob das davon kommt da\\xDF ich am Abend mich auf den Schlaf freue? \\u2013 Ja, die heutige Depression war furchtbar!!! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,1v[1]\",\n    \"date\": \"1914-10-30\",\n    \"eng\": \"(In the evening) Just received nice mail. A very nice card from Frege! One from Trakl and Ficker! Mama, Klara, Mrs. Klingenberg. That made me very happy.\",\n    \"ger\": \"(Abends) Erhielt soeben liebe Post. Eine sehr liebe Karte von Frege! Eine von Trakl & Ficker! Mama, Klara, Frau Klingenberg. Dies hat mich sehr gefreut.\\nSehr viel gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,1v[2] et 2v[1]\",\n    \"date\": \"1914-10-31\",\n    \"eng\": \"Further towards Krakow early this morning. Worked the whole day. Stormed the problem in desperation! But I would rather leave my blood in front of this fortress than withdraw empty-handed. The greatest challenge is keeping a just-conquered fortress until you can stay there in peace. And until the city has fallen, you cannot stay in one of the fortresses in peace. \\u2014\\u2014.\\nI'm on guard duty tonight and unfortunately I'm already very tired from working hard. My work is still unsuccessful! Go ahead! \\u2014\\u2014. Stay in Szczucin tonight. \\u2014\\u2014.\",\n    \"ger\": \"Heute fr\\xFCh weiter gegen Krakau. Den ganzen Tag gearbeitet. Habe das Problem verzweifelt gest\\xFCrmt! Aber ich will eher mein Blut vor dieser Festung lassen ehe ich unverrichteter Dinge abziehe. Die gr\\xF6\\xDFte Schwierigkeit ist die einmal eroberten Forts zu halten bis man ruhig in ihnen sitzen kann. Und bis nicht die Stadt gefallen ist kann / man nicht f\\xFCr immer ruhig in einem der Forts sitzen. \\u2014\\u2014.\\nHeute nacht habe ich Wache und bin leider schon durch das intensive Arbeiten sehr m\\xFCde. Meine Arbeit noch immer ohne Erfolg! Nur zu! \\u2014\\u2014. Stehen heute nacht in Szczucin. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,20v[2] et 21v[1]\",\n    \"date\": \"1914-11-18\",\n    \"eng\": \"Heavy thunder from the front. It means that we will be on the move again in the next few days. Our commander goes away and Lieutenant Mol\\xE9 takes his place again. That makes me happy. You can hear machine gun fire. Heavy artillery fire from the front all day. \\u2014 Worked quite a bit. Good mood. Considering my plan to be transferred but cannot come to terms with myself about it. My work came to a standstill because I needed another significant idea to move forward. \\u2014\\u2014 \\u2014\\u2014.\",\n    \"ger\": \"Starker Donner von den Werken. Es hei\\xDFt da\\xDF wir in den / n\\xE4chsten Tagen wieder fahren sollen. Unser Kommandant kommt weg & der Leutnant Mol\\xE9 wieder an seine Stelle. Dies freut mich. Man h\\xF6rt Maschinengewehrfeuer. Den ganzen Tag heftiger Gesch\\xFCtzdonner von den Werken. \\u2013 Ziemlich viel gearbeitet. Guter Stimmung. Trage mich mit dem Plan mich versetzen zu lassen kann aber nicht mit mir in's reine dar\\xFCber kommen. In meiner Arbeit ist ein Stillstand eingetreten da ich wieder einen bedeutenden Einfall brauchte um vorw\\xE4rts zu kommen. \\u2014\\u2014 \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,22v[1]\",\n    \"date\": \"1914-11-19\",\n    \"eng\": \"It's snowing. As is often the case now, in a gloomy mood early on. Worked on the ship all morning. A visit from a general is expected in the afternoon. So now everything is really frantic. Did some work towards evening. Heavy fighting over Krakow again. \\u2014\\u2014.\",\n    \"ger\": \"Es schneit. Wie jetzt oft, fr\\xFCh in gedr\\xFCckter Stimmung. Den ganzen Vormittag f\\xFCr's Schiff gearbeitet. Nachmittag erwartet man den Besuch eines Generals. Alles deshalb schon jetzt in Aufregung. Gegen Abend etwas gearbeitet. Wieder heftige K\\xE4mpfe um Krakau. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,22v[2] et 23v[1]\",\n    \"date\": \"1914-11-20\",\n    \"eng\": \"Heavy barrage. \\u2014\\u2014. Did some work. Guard duty tonight. In the afternoon at the ophthalmologist because I suffer from my bad eyes while on guard duty. Will get glasses. My future is still very uncertain. Maybe tomorrow I\\u2019ll talk to our commander about what\\u2019s to become of me. \\u2014\\u2014.\",\n    \"ger\": \"Starke Kanonade. \\u2014\\u2014. Etwas gearbeitet. Heute nacht Wache. Nachmittags beim Augenarzt weil ich beim Wachdienst unter meinen schlechten Augen leide. Werde Brille bekommen. Meine Zukunft ist noch immer ganz ungewi\\xDF. Morgen werde / ich vielleicht mit unserem Kommandanten dar\\xFCber reden was mit mir geschehen soll. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,23v[2]\",\n    \"date\": \"1914-11-21\",\n    \"eng\": \"Persistent barrage. Bitter cold. Almost continuous bombardment from the front. Worked pretty well. But I still can't utter the one redeeming word. I go around it and am very close but I still couldn't get hold of it!! Always a little worried about my future, because I\\u2019m not really at ease with myself! \\u2014\\u2014! \\u2014\\u2014.\",\n    \"ger\": \"Anhaltende Kanonade. Gro\\xDFe K\\xE4lte. Fast ununterbrochener Donner von den Werken. Ziemlich gearbeitet. Aber noch immer kann ich das eine erl\\xF6sende Wort nicht aussprechen. Ich gehe rund um es herum & ganz nahe aber noch konnte ich es nicht selber erfassen!! \\xDCber meine Zukunft immer ein wenig besorgt, weil ich nicht ganz in mir ruhe! \\u2014\\u2014! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,23v[3] et 24v[1]\",\n    \"date\": \"1914-11-22\",\n    \"eng\": \"Fierce cold! Ice floats on the Vistula. Continuous artillery fire. Had no good ideas and pretty tired, so worked little. The redeeming word not spoken. Yesterday it was on the tip of my tongue at one point. But then it slips away again \\u2014\\u2014. Am in a mediocre mood. I want to go to sleep soon. \\u2014\\u2014.\",\n    \"ger\": \"Grimmige K\\xE4lte! Auf der Weichsel\\nschwimmt Eis. Fortw\\xE4hrend Gesch\\xFCtzdonner. Keinen rechten Einfall gehabt & recht m\\xFCde daher wenig gearbeitet. Das erl\\xF6sende Wort nicht ausgesprochen. Gestern lag es mir einmal ganz auf der Zunge. Dann aber gleitet es wieder zur\\xFCck \\u2014\\u2014. Bin mittelm\\xE4\\xDFiger Stimmung. Ich will bald schlafen gehen. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,24v[2] et 25v[1] et 26v[1]\",\n    \"date\": \"1914-11-23\",\n    \"eng\": \"Sustained bombardment. \\u2014\\u2014.  Just hear that a telegram has arrived: \\\"Water transportation suspended.\\\" So there must soon be a decision about what will become of us. \\u2014\\u2014. My day now passes in reading something, doing some work, where I am of course always sitting in the cabin by myself. Every 4th-5th day guard duty; now and then peeling potatoes, carrying coals and the like. Apart from the guard duty, I have no specific job (the searchlight has hardly been needed for the last 1\\xBD months). So I feel like an idler amid the people and in my many free hours I don't really rest because I feel I should work for the ship yet don't know what to do. The best thing for me would be a regular job that I could do easily and safely. Because a job where you\\u2019re out of your depth is the worst. I will try to speak to our commander today about a possible transfer. This has happened and I can hope that I will be transferred from here.  Worked pretty well, but still without success. In the bath in the evening. \\u2014\\u2014.\",\n    \"ger\": \"Anhaltender Donner. \\u2014\\u2014. H\\xF6re gerade da\\xDF ein Telegramm gekommen ist: \\u201EWassertransport eingestellt.\\u201D. Also mu\\xDF sich bald entscheiden was aus uns wird. \\u2014\\u2014 Mein Tag vergeht jetzt in Lesen etwas Arbeiten wobei ich nat\\xFCrlich immer bei  / mir in der Kabine sitze. Jeden 4ten-5ten Tag Wachdienst; hie & da Kartoffelsch\\xE4len, Kohlen tragen und dergleichen. Au\\xDFer dem Wachdienst habe ich keine bestimmte Arbeit (der Scheinwerfer wird seit 1\\xBD Monaten fast nicht mehr gebraucht). Ich f\\xFChle mich daher unter den Leuten als Faulpelz und auch in meiner vielen freien Zeit komme ich nicht recht zur Ruhe da ich f\\xFChle ich sollte f\\xFCr das Schiff arbeiten aber doch nicht wei\\xDF was. Das Beste w\\xE4re f\\xFCr mich eine regelm\\xE4\\xDFige Arbeit die ich leicht vollbringen k\\xF6nnte & sicher. Denn eine Arbeit der man nicht gewachsen ist ist das \\xC4rgste. Ich werde / heute trachten mit unserem Kommandanten \\xFCber eine eventuelle Versetzung zu sprechen. Dies ist geschehen & ich darf hoffen da\\xDF ich von hier versetzt werden werde. Ziemlich gearbeitet aber immer noch ohne Erfolg. Abends im Bad. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,26v[2] et 27v[1]\",\n    \"date\": \"1914-11-24\",\n    \"eng\": \"Fierce cold! The Vistula is completely covered with drifting ice. Enter the port today. If only I were already away from here! There is constant unrest here and nobody knows what to do. The noncommissioned officers are becoming ever more vile and one contaminates the other and emboldens him to ever greater impudence. There are, of course, exceptions. Guard duty tonight. No guard duty. Worked a lot. Again and again the missing realization is on the tip of my tongue. This is good. Ficker sent me poor Trakl\\u2019s poems today, which I think are wonderful even though I don\\u2019t understand them. They did me good. God with me! \\u2014\\u2014.\",\n    \"ger\": \"Grimmige K\\xE4lte! Die Weichsel ist mit treibendem Eis ganz bedeckt. Fahren heute in den Hafen ein. Wenn ich nur schon von hier fort w\\xE4re! Hier ist eine immerw\\xE4hrende Unruhe & niemand wei\\xDF was er tun soll. Die Unteroffiziere werden immer gemeiner & einer steckt darin den anderen an & ermutigt ihn zu immer  / gr\\xF6\\xDFerer Frechheit. Es gibt freilich auch Ausnahmen. Heute nacht Wachdienst. Kein Wachdienst. Viel gearbeitet. Immer wieder liegt mir die fehlende Erkenntnis auf der Zunge. Dies ist gut. Ficker sandte mir heute Gedichte des armen Trakl die ich f\\xFCr genial halte ohne sie zu verstehen. Sie taten mir wohl. Gott mit mir! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,27v[2] et 28v[1]\",\n    \"date\": \"1914-11-25\",\n    \"eng\": \"Have been in port since yesterday afternoon. The ship's toilets are blocked! And one has to walk far to a half-open latrine. \\nIt is very cold. This way of life is becoming ever more unbearable. Didn\\u2019t work much. Just get away from here! \\u2014\\u2014.\",\n    \"ger\": \"Stehen seit gestern nachmittag im Hafen. Die Aborte des Schiffs sind gesperrt! Und man mu\\xDF weit laufen bis zu einer halboffenen Latrine. \\n/ Es ist sehr kalt. Die Lebensweise wird immer unertr\\xE4glicher. Nicht viel gearbeitet. Nur fort von hier! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,28v[2] et 29v[1] et 30v[1]\",\n    \"date\": \"1914-11-26\",\n    \"eng\": \"If you feel that you are faltering over a problem, you shouldn't think about it anymore or you will get stuck on it. Instead you have to start thinking somewhere where you can be completely comfortable. Just don't push! The hard problems must all dissolve by themselves before us.\\nWhatever I do, the problems clump together like storm clouds and I am unable to take a consistently satisfactory view of them. Worked a great deal but could not clarify the situation in any way. Rather, whatever I think, everywhere I meet questions that I cannot answer. Today it was as if my fertility had ended. The whole thing seems to retreat again into the distance. And of course: my 3-4 months are over. And unfortunately without a really great result! But we'll see. \\u2014\\u2014. They say now that we shall move into winter quarters and if this happens I may have to sleep with all the people; God forbid!! \\u2014\\u2014\\nIn any case, may my presence of mind not leave me! God with me. \\u2014\\u2014. \\u2014\\u2014.\",\n    \"ger\": \"Wenn man f\\xFChlt da\\xDF man bei einem Problem stockt so darf man nicht mehr dar\\xFCber nachdenken sonst bleibt man daran kleben. Sondern man mu\\xDF irgendwo anfangen zu denken wo man ganz gem\\xFCtlich sitzen kann. Nur nicht dr\\xFCcken! Die harten Probleme m\\xFCssen sich alle von selbst vor uns aufl\\xF6sen. \\nWas ich auch tue, die Probleme ballen sich wie Gewitterwolken / zusammen und ich bin nicht im Stande einen dauernd befriedigenden Standpunkt ihnen gegen\\xFCber einzunehmen. Sehr viel gearbeitet aber ohne die Lage irgendwie kl\\xE4ren zu k\\xF6nnen. Vielmehr wo ich immer denke \\xFCberall treffe ich Fragen die ich nicht beantworten kann. Heute war es mir als sei es nun mit meiner Fruchtbarkeit zu Ende. Der ganze Gegenstand schien wieder in die Ferne zu r\\xFCcken. Und freilich: meine 3-4 Monate sind um. Und leider ohne ein wirklich gro\\xDFes Resultat! Aber wir werden ja sehen. \\u2014\\u2014. Es hei\\xDFt jetzt da\\xDF wir Winterquartiere beziehen sollen und / wenn dies geschieht werde ich vielleicht mit allen Leuten zusammen schlafen m\\xFCssen; was Gott verh\\xFCte!! \\u2014\\u2014 \\nM\\xF6chte in jedem Fall die Geistesgegenwart nicht verlieren! Gott mit mir. \\u2014\\u2014. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,2v[2] et 3v[1]\",\n    \"date\": \"1914-11-01\",\n    \"eng\": \"Further towards Krakow in the morning. Worked during the night watch, also a great deal today and still unsuccessfully. But I am not discouraged because I always have the main problem in sight. \\u2014\\u2014. Trakl is in the garrison hospital in Krakow and asks me to visit him. How I would like to get to know him! I hope to meet him if I make it to Krakow! It could be a great boost for me. \\u2014\\u2014.\",\n    \"ger\": \"Vormittag weiter gegen Krakau. W\\xE4hrend des Wachdienstes heute nacht gearbeitet, auch heute sehr viel und noch immer erfolglos. Bin aber nicht mutlos weil ich das Hauptproblem  immer im Auge habe. \\u2014\\u2014. Trakl liegt im Garnisonsspital in Krakau / und bittet mich ihn zu besuchen. Wie gerne m\\xF6chte ich ihn kennenlernen! Hoffentlich treffe ich ihn wenn ich nach Krakau komme! Vielleicht w\\xE4re es mir eine gro\\xDFe St\\xE4rkung. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,30v[2]\",\n    \"date\": \"1914-11-27\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,30v[3] et 31v[1]\",\n    \"date\": \"1914-11-28\",\n    \"eng\": \"Worked a great deal yesterday. From yesterday afternoon to today noon in the guards\\u2019 office with 7 people and on duty. Felt \\u2014 very unfortunate, especially today. Pursuing my transfer by hook or by crook. I believe that unless a miracle makes me much stronger and wiser, I must perish miserably, in the company of these crude and vile men who are tamed by no danger! Yes, it would take a miracle for me if I am to survive it! I'm anxious about my future. Worked a little. A miracle! A miracle! \\u2014\\u2014.\",\n    \"ger\": \"Gestern sehr viel gearbeitet. Von gestern mittag bis heute mittag im Wachzimmer mit 7 Leuten & am Posten. F\\xFChlte mich \\u2013 besonders heute sehr ungl\\xFCcklich. Betreibe mit allen Mitteln meine Versetzung. Ich glaube da\\xDF ich in der Umgebung dieser rohen & gemeinen Menschen die durch  / keine Gefahr gez\\xE4hmt sind elend umkommen mu\\xDF wenn nicht ein Wunder f\\xFCr mich geschieht das mir viel mehr Kraft & Weisheit gibt als ich jetzt habe! Ja, ein Wunder m\\xFC\\xDFte f\\xFCr mich geschehen wenn ich es \\xFCberleben soll! Bin in Angst wegen meiner Zukunft. Wenig gearbeitet. Ein Wunder! Ein Wunder! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,31v[2]\",\n    \"date\": \"1914-11-29\",\n    \"eng\": \"\",\n    \"ger\": \"Ziemlich viel gearbeitet. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,31v[3] et 32v[1] et 33v[1] \",\n    \"date\": \"1914-11-30\",\n    \"eng\": \"At the corps command early. Spoke with our commander on my account: If I am transferred, then I have to return to the squad. If we move into winter quarters, he will make sure that I get my own room. However, in the near future the searchlight will be needed again and so I should stay here anyway. \\u2014\\u2014 This evening as I leave the city there is a lot of noise because a ship is supposed to leave here. There is also talk of the searchlight coming along. \\u2014\\u2014. This would be very uncomfortable for me. So our plans can be thwarted at any moment and I have to have a different foothold to still be able to live. \\u2014\\u2014 Was with the squad this afternoon and talked to a munitions worker about whether it would be possible for me to join the balloon unit. He said I should talk to Vlcek, a munitions worker from that unit. I hope I will be able to do so! \\u2014\\u2014. Didn\\u2019t work much but not without stimulus. Somewhat sensual again.\\nLive only in your own spirit! And entrust everything to God! \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh am Korpskommando. Mit unserem Kommandanten wegen mir gesprochen: Wenn ich versetzt werde so mu\\xDF ich / zur\\xFCck zum Kader kommen. Im Falle wir Winterquartiere beziehen wird er daf\\xFCr sorgen da\\xDF ich ein eigenes Zimmer kriege. In der n\\xE4chsten Zeit aber soll der Scheinwerfer wieder gebraucht werden & ich solle doch daher hier bleiben. \\u2014\\u2014 Jetzt abends wie ich aus der Stadt komme ist hier gro\\xDFer L\\xE4rm weil ein Schiff von hier wegfahren soll. Es ist auch die Rede davon da\\xDF der Scheinwerfer mitkommt. \\u2014\\u2014. Dies w\\xE4re mir recht unangenehm. So k\\xF6nnen unsere Pl\\xE4ne jeden Augenblick durchkreuzt werden & ich mu\\xDF einen anderen / Halt haben um doch leben zu k\\xF6nnen. \\u2013 War heute nachmittag beim Kader & sprach mit einem Feuerwerker dar\\xFCber ob es nicht m\\xF6glich w\\xE4re da\\xDF ich in die Ballonabteilung k\\xE4me. Er sagte ich solle hier\\xFCber mit einem Feuerwerker Vlcek dieser Abteilung sprechen. Dies werde ich hoffentlich tun k\\xF6nnen! \\u2014\\u2014. Nicht viel gearbeitet aber nicht ohne Anregung. Wieder etwas sinnlich. \\nNur dem eigenen Geist leben! und alles Gott \\xFCberlassen! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,33v[2] et 34v[1] et 35v[1]\",\n    \"date\": \"1914-12-01\",\n    \"eng\": \"So December already! And still no talk of peace! Violent artillery fire tonight, the shells could be heard whizzing. \\u2014\\u2014 Last night a ship sailed down the Vistula, which every day has a different crew on guard duty. Tomorrow, for example, us! How will it go for me?! With these comrades and superiors! \\u2014\\u2014\\u2014\\u2014. In the afternoon went looking for Vlcek the munitions worker, didn\\u2019t find him. Was directed to the artillery headquarters office. Will probably go there the day after tomorrow, after the watch. Worked very little. The spirit protect me whatever happens! \\u2014\\u2014.\",\n    \"ger\": \"Also schon Dezember! und noch immer / keine Rede von Frieden! Heute nacht heftiger Gesch\\xFCtzdonner, man h\\xF6rte die Geschosse sausen. \\u2014\\u2014 Gestern Abend ist ein Schiff die Weichsel hinunter gefahren und jeden Tag hat eine andere Besatzung darauf Wache z.B. morgen wir! Wie wird es mir ergehen?! Mit diesen Kameraden & diesen Vorgesetzten! \\u2014\\u2014 \\u2014\\u2014. Nachmittag den Feuerwerker Vlcek suchen gegangen, nicht gefunden. Wurde an die Artilleriestabsabteilung gewiesen. Werde wohl \\xFCbermorgen nach der Wache dorthin gehen. Sehr wenig gearbeitet. Der Geist besch\\xFCtze mich was immer / geschehe! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,35v[2]\",\n    \"date\": \"1914-12-02\",\n    \"eng\": \"We are on guard duty this afternoon. Thank God our commander goes with us, so at least one decent human being will be there. Terrible bombardment from the front at night. And now it begins again at 8 a.m. We have to sleep outdoors tonight. I will probably not get to work. Just don't forget God. \\u2014\\u2014\\u2014\\u2014. \",\n    \"ger\": \"Heute mittag gehen wir auf Wache. Gott sei Dank geht unser Kommandant mit so da\\xDF wenigstens ein anst\\xE4ndiger Mensch dabei ist. Nachts furchtbarer Donner von den Werken. Und jetzt um 8 Uhr fr\\xFCh f\\xE4ngt er wieder an. Heute nacht m\\xFCssen wir im Freien schlafen. Ich werde wohl nicht zum Arbeiten kommen; nur Gott nicht vergessen. \\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,35v[3]\",\n    \"date\": \"1914-12-03\",\n    \"eng\": \"Didn\\u2019t work but went through a lot, however am now too tired to record it. \\u2014\\u2014\",\n    \"ger\": \"Nichts gearbeitet aber viel erlebt, bin aber jetzt zu m\\xFCde es einzutragen. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,36v[1] et 37v[1]\",\n    \"date\": \"1914-12-04\",\n    \"eng\": \"The day before yesterday nothing in particular happened on the watch, except that I fell to the ground once, running, and still have to limp today. Most violent cannon fire from all sides. Rifle fire, fires, etc. Last night at the fortress command because of my injury. A first lieutenant who heard that I had studied mathematics said that I should join him (in a factory). He seems very nice. I agreed and was ordered off this ship today. \\nI have a lot of hope. \\u2014\\u2014. Sound of artillery nearby. Afternoon in the city. Worked little. Was a bit tired all day because I slept very little last night. Early to bed! \\u2014\\u2014.\",\n    \"ger\": \"Vorgestern auf der Wacht ereignete sich nichts Besonderes au\\xDFer da\\xDF ich einmal laufend zu Boden fiel und noch heute hinken mu\\xDF. Von allen Seiten heftigster Kanonendonner. Gewehrfeuer, Br\\xE4nde etc. Gestern abend auf dem Festungskommando wegen meiner Angelegenheit. Ein Oberleutnant als er h\\xF6rte da\\xDF ich Mathematik studiert habe sagte ich solle zu ihm (in eine Fabrik) kommen. Er scheint sehr nett zu sein. Ich willigte ein und wurde heute von diesem Schiff abkommandiert.\\n/ Ich habe viel Hoffnung. \\u2014\\u2014. Gesch\\xFCtzdonner in n\\xE4chster N\\xE4he. Nachmittag in der Stadt. Wenig gearbeitet. War den ganzen Tag \\xFCber etwas m\\xFCde da ich auch in der letzten Nacht sehr wenig geschlafen habe. Fr\\xFCh zu Bett! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,37v[2]\",\n    \"date\": \"1914-12-05\",\n    \"eng\": \"I'm leaving here tomorrow or the day after. Where I will live is not yet settled. In no case do I want to be dependent on such things. Didn\\u2019t work much; but I'm not at a standstill. Think much of dear David! God protect him! And me! \\u2014\\u2014.\",\n    \"ger\": \"Morgen oder \\xFCbermorgen gehe ich von hier weg. Wo ich wohnen werde ist noch nicht bestimmt. In keinem Fall will ich von solchen Sachen abh\\xE4ngen. Nicht viel gearbeitet; doch stehe ich nicht still. Denke viel an den lieben David! Gott beh\\xFCte ihn! und mich! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,38v[1]\",\n    \"date\": \"1914-12-06\",\n    \"eng\": \"At night the cannons fired so close that the ship shook. Worked a lot and with success. Still don\\u2019t know when I'm getting off the ship. This ship has to patrol again tomorrow, and if I am not dismissed by then I will have to go along, which is very bothersome because my leg has still not recovered from the fall. It is raining and the dirt roads here are terribly difficult to walk. The spirit protect me! \\u2014\\u2014.\",\n    \"ger\": \"Nachts feuerten die Kanonen ganz in der N\\xE4he da\\xDF das Schiff zitterte. Viel gearbeitet & mit Erfolg. Noch nicht erfahren wann ich von dem Schiff wegkomme. Morgen hat dieses Schiff wieder Feldwache & wenn ich nicht morgen abberufen werde so werde ich mitgehen m\\xFCssen was mir sehr unangenehm ist weil mein Bein noch immer nicht von dem Sturz geheilt ist. Es regnet & die Lehmwege hier sind furchtbar schlecht zu gehen. Der Geist besch\\xFCtze mich! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,38v[2] et 39v[1]\",\n    \"date\": \"1914-12-07\",\n    \"eng\": \"My leg got worse. Probably won't go on patrol. No order has come yet regarding my relocation. Heavy bombardment nearby. \\u2014\\u2014. Just found out that I'm leaving here tomorrow. Can't go on patrol because of my foot. Not worked much. Spoke to our commander, he was very nice. Am tired. All in God's hands. \\u2014\\u2014.\",\n    \"ger\": \"Mein Bein schlechter geworden. Werde wohl nicht mit auf Wache / gehen. Meine \\xDCbersiedelung betreffend ist noch kein Befehl gekommen. Starker Donner in der N\\xE4he. \\u2014\\u2014. Erfahre soeben da\\xDF ich morgen von hier abgehen werde. Kann meines Fu\\xDFes wegen nicht auf Wache gehen. Nicht viel gearbeitet. Mit unserem Kommandanten gesprochen, er war sehr nett. Bin m\\xFCde. Alles in Gottes Hand. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,39v[2] et 40v[1] et 41v[1]\",\n    \"date\": \"1914-12-08\",\n    \"eng\": \"In the morning at the \\u201Cclinic for the sick\\u201D because of my foot: muscle strain. Didn\\u2019t work much. Bought Nietzsche Volume 8 and read in it. Am very affected by his hostility to Christianity. Because there is also some truth in his writings. Of course, Christianity is the only sure way to happiness; but what if someone despised this happiness? Couldn't it be better to perish, unhappy, in a hopeless struggle with the external world? But such a life is senseless. But why not lead a senseless life? Is it unworthy? \\u2014 How is it compatible with the strictly solipsistic position? But what must I do so that my life shall not be lost to me? I must be conscious of it \\u2014 of the spirit \\u2014  always. \\u2014\\u2014.\",\n    \"ger\": \"Vormittag bei der \\u201EMarodenvisite\\u201D wegen meines Fu\\xDFes: Muskelzerrung. Nicht viel gearbeitet. Nietzsche Band 8 gekauft & darin gelesen. Bin stark ber\\xFChrt von seiner Feindschaft  / gegen das Christentum. Denn auch in seinen Schriften ist etwas Wahrheit enthalten. Gewi\\xDF, das Christentum ist der einzige sichere Weg zum Gl\\xFCck; aber wie wenn einer dies Gl\\xFCck verschm\\xE4hte?! K\\xF6nnte es nicht besser sein, ungl\\xFCcklich, im hoffnungslosen Kampf gegen die \\xE4u\\xDFere Welt zu Grunde zu gehen? Aber ein solches Leben ist sinnlos. Aber warum nicht ein sinnloses Leben f\\xFChren? Ist es unw\\xFCrdig? \\u2013 Wie vertr\\xE4gt es sich mit dem streng solipsistischen Standpunkt? Was mu\\xDF ich aber tun da\\xDF mein Leben / mir nicht verloren geht? Ich mu\\xDF mir seiner immer \\u2014 des Geistes immer \\u2014 bewu\\xDFt sein. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,3v[2]\",\n    \"date\": \"1914-11-02\",\n    \"eng\": \"Further towards Krakow first thing.  I am more sensual again. Got stranded on the sand again towards evening. It is bitterly cold. It is really fortunate that one has oneself and can always take refuge in oneself. Worked a lot. The blessing of work!! \\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh weiter gegen Krakau. Bin wieder sinnlicher. Gegen abend wieder am Sand stecken geblieben. Es ist bitter kalt. Es ist wirklich ein Gl\\xFCck da\\xDF man sich selbst hat und immer zu sich fl\\xFCchten kann. Viel gearbeitet. Die Gnade der Arbeit!! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,3v[3] et 4v[1] \",\n    \"date\": \"1914-11-03\",\n    \"eng\": \"Further towards Krakow first thing. Hear that the Russians have advanced again and are 20 km from Opakowiz; we are 10 km from there. \\u2014\\u2014. What will happen to me now if I get close to Krakow?!? Worked almost all day. \\u2014\\u2014. Will probably go on tonight. Hear cannons firing and see the flash. \\u2014\\u2014!\\u2014\\u2014.\",\n    \"ger\": \"Fr\\xFCh weiter gegen Krakau. H\\xF6re da\\xDF die Russen wieder vorger\\xFCckt sind und 20 km von / Opakowiz stehen; wir stehen 10 km von dort. \\u2014\\u2014. Was wird jetzt mit mir geschehen wenn ich nahe Krakau komme?!? Fast den ganzen Tag gearbeitet. \\u2014\\u2014. Werden wahrscheinlich heute nacht fahren. H\\xF6ren Kanonendonner und sehen den Blitz. \\u2014\\u2014! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,41v[2]\",\n    \"date\": \"1914-12-09\",\n    \"eng\": \"Picked up my ration card at Corps Command in the morning. Didn\\u2019t work. Went through a great deal but too tired to record it. \\u2014\\u2014.\",\n    \"ger\": \"Vormittag am Korpskommando & meinen Verpflegszettel geholt. Nicht gearbeitet. Sehr viel erlebt aber zu m\\xFCde es einzutragen. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,41v[3] et 42v[1] et 43v[1]\",\n    \"date\": \"1914-12-10\",\n    \"eng\": \"Had to wait a long time for my new commander at his office yesterday afternoon. Finally he came and immediately gave me a job: I had to draw up a list of motor vehicles in a barracks here. At the same time he invited me to his apartment for 8 o'clock in the evening: a captain will be there whom he had told about me and who would like to meet me. Went to his apartment and found 4 officers there with whom I had dinner. The captain is an extremely likeable man (all the others were also extremely friendly). We talked till 10:30 and parted tremendously cordially. \\u2014\\u2014 Looked for and found an apartment early this morning. In the office from 10 to 5 in the evening, then carried my things from the ship to the new place: a very nice room, not small.\\nAlone in a proper room for the first time in 4 months!! I relish that luxury. Didn't get around to work. But it\\u2019ll be soon now. Am very tired because I ran around a great deal. What a blessing to be allowed to sleep in a bed again! What a blessing, in fact. \\u2014\\u2014. \\u2014\\u2014.\",\n    \"ger\": \"Gestern nachmittag in die Kanzelei zu meinem neuen Chef mu\\xDFte lange auf ihn warten. Endlich kam er & gab mir sofort eine Arbeit ich mu\\xDFte eine Liste von Motorw\\xE4gen in einer Kaserne hier zusammenstellen. Zugleich lud er mich f\\xFCr  / 8 Uhr abends zu sich in die Wohnung ein: ein Hauptmann sei dort dem er von mir erz\\xE4hlt habe & der mich sehen m\\xF6chte. Kam zu ihm & fand 4 Offiziere bei ihm mit denen ich nachtmahlte. Der Hauptmann ist ein unendlich sympathischer Mann (auch alle anderen waren riesig liebensw\\xFCrdig). Wir sprachen bis 10\\xBD & schieden ungemein herzlich. \\u2014\\u2014 Heute fr\\xFCh Wohnung gesucht & gefunden. Von 10 bis abends 5 im Bureau, dann meine Sachen vom Schiff hierher in die neue Wohnung getragen: ein ganz nettes nicht kleines Zimmer.\\n/ Seit 4 Monaten zum ersten Mal allein in einem wirklichen Zimmer!! Ich genie\\xDFe diesen Luxus: Nicht zum Arbeiten gekommen. Aber es wird jetzt schon werden. Bin sehr m\\xFCde da ich sehr viel herum gerannt bin. Welche Gnade wieder in einem Bett schlafen zu d\\xFCrfen! Welche Gnade der Tatsache. \\u2014\\u2014. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,43v[2]\",\n    \"date\": \"1914-12-11\",\n    \"eng\": \"At the office and wrote in the morning. Didn't get to work. All day at the office. Lieutenant extraordinarily kind. Didn't get to work.\",\n    \"ger\": \"Vormittag in der Kanzelei & geschrieben. Nicht zum Arbeiten gekommen. Ganzen Tag Kanzlei. Oberleutnant au\\xDFerordentlich lieb. Nicht zum Arbeiten gekommen. \"\n}, {\n    \"manuscript\": \"Ms-102,43v[3] et 44v[1]\",\n    \"date\": \"1914-12-12\",\n    \"eng\": \"Worked a little. Was in the office all day but didn't have much to do. Hope to work more tomorrow. Bathed. \\u2014\\u2014.\",\n    \"ger\": \"Ein wenig gearbeitet. War den ganzen Tag in der Kanzlei hatte aber / nicht viel zu tun. Hoffe morgen mehr zu arbeiten. Gebadet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,44v[2]\",\n    \"date\": \"1914-12-13\",\n    \"eng\": \"All day at the office. My thoughts are lame. I have muscle pain in my leg and it's as though my brain is limping too. However, got some work done. Still no answer from David! Did he receive my letter? Does he take the war more personally than I do?! \\u2014\\u2014 Live only in the spirit! It is a sheltered safe harbor, protected, away from the desolate endless gray sea of events. \\u2014\\u2014.\",\n    \"ger\": \"Ganzen Tag Kanzelei. Meine Gedanken sind lahm. Ich habe Muskelschmerzen im Bein & es ist als ob auch mein Gehirn hinkte. Doch etwas gearbeitet. Noch immer keine Antwort von David! Ob er meinen Brief erhalten hat? Ob er den Krieg pers\\xF6nlicher auffa\\xDFt als ich?! \\u2014\\u2014 Lebe nur der Geist! Er ist der sichere Hafen gesch\\xFCtzt abseits vom trostlosen unendlichen grauen Meer des Geschehens. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,44v[3] et 45v[1]\",\n    \"date\": \"1914-12-14\",\n    \"eng\": \"All day at the office. Didn\\u2019t work. But it will happen again soon! Nice message from the Jolles. \\u2014\\u2014.\",\n    \"ger\": \"Ganzen Tag Kanzlei. Nicht gearbeitet. Es wird aber schon / wieder werden! Liebe Sendung von der Jolles. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,45v[2]\",\n    \"date\": \"1914-12-15\",\n    \"eng\": \"All day at the office. Worked a bit. But my thoughts are like those in a train or on a ship, where one also thinks in the same clumsy way.\",\n    \"ger\": \"Ganzen Tag Kanzlei. Etwas gearbeitet. Aber meine Gedanken sind so wie in der Eisenbahn oder auf dem Schiff wo man auch in der selben Weise schwerf\\xE4llig denkt.\"\n}, {\n    \"manuscript\": \"Ms-102,45v[3]\",\n    \"date\": \"1914-12-16\",\n    \"eng\": \"All day at the office. Heard that we might move to Lodz soon! Did some work but without real brio.\",\n    \"ger\": \"Ganzen Tag Kanzelei. H\\xF6rte da\\xDF wir wahrscheinlich bald nach Lodz \\xFCbersiedeln! Etwas gearbeitet aber ohne wirklichen Animo.\"\n}, {\n    \"manuscript\": \"Ms-102,45v[4]\",\n    \"date\": \"1914-12-17\",\n    \"eng\": \"All day at the office. Didn\\u2019t work. Annoyed me a lot. - Very little free time. \\u2014\\u2014.\",\n    \"ger\": \"Ganzen Tag Kanzlei. Nicht gearbeitet. Mich viel ge\\xE4rgert. \\u2014\\u2014 Sehr wenig freie Zeit. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,46v[1]\",\n    \"date\": \"1914-12-18\",\n    \"eng\": \"As usual. Didn\\u2019t work.\",\n    \"ger\": \"Wie gew\\xF6hnlich. Nicht gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-102,46v[2]\",\n    \"date\": \"1914-12-19\",\n    \"eng\": \"\",\n    \"ger\": \"Ein wenig gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,46v[3]\",\n    \"date\": \"1914-12-20\",\n    \"eng\": \"Worked a little. Until almost 5 at the office then in to the city. The pleasant feeling of a little chill running down your back if you become conscious of your solitude in a good mood//become conscious in your solitude of being in a good mood//. \\u2014\\u2014.\",\n    \"ger\": \"Ein wenig gearbeitet. Bis fast 5 in der Kanzlei dann in die Stadt. Das angenehme Gef\\xFChl eines kleinen kalten Laufens den R\\xFCcken hinunter wenn man sich bei guter Stimmung seiner Einsamkeit bewu\\xDFt wird. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,46v[4]\",\n    \"date\": \"1914-12-21\",\n    \"eng\": \"\",\n    \"ger\": \"Brief von David!! Ich habe ihn gek\\xFC\\xDFt. Antwortete gleich. Ein wenig gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,46v[5] et 47v[1]\",\n    \"date\": \"1914-12-22\",\n    \"eng\": \"Didn\\u2019t work. Till 6 at the office. \\u2014\\u2014.\\nWorked very little.  Bathed in the evening. \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Bis 6 Kanzlei. \\u2014\\u2014.\\nGanz wenig gearbeitet. Abends / gebadet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,47v[2]\",\n    \"date\": \"1914-12-24\",\n    \"eng\": \"To my great surprise, I was promoted to military  official \\u2014 without stars \\u2014 today. \\u2014\\u2014 Didn\\u2019t work. \\u2014\\u2014.\",\n    \"ger\": \"Wurde heute zu meiner gr\\xF6\\xDFten \\xDCberraschung zum Milit\\xE4rbeamten \\u2014 ohne Sterne \\u2014 bef\\xF6rdert. \\u2014\\u2014Nicht gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,47v[3]\",\n    \"date\": \"1914-12-25\",\n    \"eng\": \"Ate lunch in the officers' mess. Worked a bit.\",\n    \"ger\": \"In der Offiziersmesse zu Mittag gegessen. Etwas gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-102,47v[4]\",\n    \"date\": \"1914-12-26\",\n    \"eng\": \"Did almost no work. In the afternoon met a young man who was a student in Lviv and is now a chauffeur here. In the evening with him in a coffee house and had a good time. \\u2014\\u2014.\",\n    \"ger\": \"Fast nicht gearbeitet. Lernte nachmittag einen jungen Menschen kennen der in Lemberg Hochsch\\xFCler war & jetzt hier Chauffeur ist. Abends mit ihm im Kaffeehaus & mich gut unterhalten. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,47v[5]\",\n    \"date\": \"1914-12-27\",\n    \"eng\": \"Till 9:30 p.m. at the office. Didn\\u2019t work. I have been appointed Adjutant to Lieutenant G\\xFCrth. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Bis 9\\xBD p.m. Kanzlei. Nicht gearbeitet. Bin zum Adjutanten des Oberleutnant G\\xFCrth ernannt. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,48v[1]\",\n    \"date\": \"1914-12-28\",\n    \"eng\": \"Till 10 p.m. at the office. Didn\\u2019t work. Great deal to do. \\u2014\\u2014.\",\n    \"ger\": \"Bis 10 p.m. Kanzlei. Nicht gearbeitet. Sehr viel zu tun. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,48v[2]\",\n    \"date\": \"1914-12-29\",\n    \"eng\": \"Worked a little bit.  Otherwise, a lot to do.  Evening bath.\",\n    \"ger\": \"Ein klein wenig gearbeitet. Sonst viel zu tun. Abends Bad.\"\n}, {\n    \"manuscript\": \"Ms-102,48v[3]\",\n    \"date\": \"1914-12-30\",\n    \"eng\": \"\",\n    \"ger\": \"Nicht gearbeitet. Nur sich nicht verlieren. \\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,48v[4] et 49v[1]\",\n    \"date\": \"1915-01-02\",\n    \"eng\": \"In the afternoon, the day before yesterday, I suddenly learned that I would be going to Vienna with my commanding officer. We arrived here in Vienna yesterday morning. Understandably, Mama greatly surprised and delighted, etc. Didn\\u2019t work yesterday, but devoted myself to my family.\\nErrands this morning. Now at noon I am waiting for G\\xFCrth with whom I have to take care of official business. I want to note that my moral state is now much lower than it was around Easter.\",\n    \"ger\": \"Vorgestern nachmittag erfuhr ich pl\\xF6tzlich da\\xDF ich mit meinem Kommandanten gleich nach Wien fahren solle. Gestern fr\\xFCh kamen wir hier in Wien an. Begreiflich h\\xF6chste \\xDCberraschung & Freude der Mama. etc. Gestern nichts gearbeitet sondern lediglich mich meiner Familie gewidmet. \\n/ Heute vormittag Besorgungen. Jetzt zu Mittag erwarte ich G\\xFCrth mit dem ich Dienstliches zu erledigen habe. Notieren will ich mir da\\xDF mein moralischer Stand jetzt viel tiefer ist als etwa zu Ostern. \"\n}, {\n    \"manuscript\": \"Ms-102,49v[2]\",\n    \"date\": \"1915-01-03\",\n    \"eng\": \"Yesterday afternoon with G\\xFCrth in Klosterneuburg. Then at home with Mama.\",\n    \"ger\": \"Gestern nachmittag mit G\\xFCrth in Klosterneuburg. Dann mit Mama zuhause.\"\n}, {\n    \"manuscript\": \"Ms-102,49v[3]\",\n    \"date\": \"1915-01-06\",\n    \"eng\": \"Vienna. Return tomorrow. The day before yesterday and the day before that at Labor\\u2019s. Yesterday ate with G\\xFCrth in Wienerneustadt on the way back from M\\xF6dling, with a Captain Roth who was extremely uncongenial to me. So right after the meal I took the train back to Vienna alone.\",\n    \"ger\": \"Wien. Morgen R\\xFCckfahrt. Vorvorgestern & vorgestern bei Labor. Gestern mit G\\xFCrth in Wienerneustadt am R\\xFCckweg in M\\xF6dling mit einem Hauptmann Roth gespeist der mir unendlich unsympathisch war. Fuhr deshalb gleich nach Tisch allein mit der Bahn nach Wien.\"\n}, {\n    \"manuscript\": \"Ms-102,4v[2] et 5v[1]\",\n    \"date\": \"1914-11-04\",\n    \"eng\": \"Quiet night. Went further early in the morning. Worked a great deal. Tomorrow we should be in Krakow. Hear that we can probably expect a siege of Krakow. I will need a lot of strength there to keep up the spirit. \\u2014\\u2014. Just don't be dependent on the external world, then you don't need to fear what happens in it. Guard duty tonight. It is easier to not be dependent on things than on people. But one has to be able to do that as well! \\u2014\\u2014.\",\n    \"ger\": \"Ruhige Nacht. Fr\\xFCh weiter. Sehr viel gearbeitet. Morgen sollen wir in Krakau sein. H\\xF6re da\\xDF wir wahrscheinlich eine Belagerung von Krakau zu erwarten haben. Da werde ich viel Kraft brauchen um den Geist zu bewahren. \\u2014\\u2014. H\\xE4ng nur nicht von der \\xE4u\\xDFeren Welt ab dann brauchst du dich / vor dem was in ihr geschieht nicht zu f\\xFCrchten. Heute nacht Wachdienst. Es ist leichter von Dingen als von Menschen unabh\\xE4ngig zu sein. Aber auch das mu\\xDF man k\\xF6nnen! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,50v[1]\",\n    \"date\": \"1915-01-10\",\n    \"eng\": \"Arrived in Krakow late this evening. Am tired!\\nSpent many very pleasant hours with G\\xFCrth. Am very curious about my future life. \\u2014\\u2014.\",\n    \"ger\": \"Heute sp\\xE4t abends in Krakau angekommen. Bin m\\xFCde! \\nHatte viele sehr gem\\xFCtliche Stunden mit G\\xFCrth. Bin auf mein zuk\\xFCnftiges Leben sehr neugierig. \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,50v[2]\",\n    \"date\": \"1915-01-11\",\n    \"eng\": \"Got a card from Frege! Worked a little.\",\n    \"ger\": \"Karte von Frege erhalten! Ein wenig gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-102,50v[3]\",\n    \"date\": \"1915-01-12\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,50v[4] et 51v[1]\",\n    \"date\": \"1915-01-13\",\n    \"eng\": \"Worked a bit. Don't work with great brio yet. My thoughts are tired. I don't see things afresh, but in a habitual, lifeless way. It is as if a flame has gone out and I have to wait until it starts to burn by itself again. But my spirit is active: I am thinking\\u2026 \\u2014\\u2014.\",\n    \"ger\": \"Etwas gearbeitet. Arbeite noch nicht mit gro\\xDFem Animo. Meine Gedanken sind m\\xFCde. Ich sehe die Sachen nicht frisch sondern allt\\xE4glich, ohne Leben. Es ist als ob eine Flamme erloschen w\\xE4re & ich mu\\xDF warten  / bis sie von selbst wieder zu brennen anf\\xE4ngt. Mein Geist aber ist rege: Ich denke \\u2026 \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,51v[2]\",\n    \"date\": \"1915-01-14\",\n    \"eng\": \"Worked a little; still not well. Think about David very often. And long for a letter from him.\",\n    \"ger\": \"Ein wenig gearbeitet; noch nicht gut. Denke sehr oft an David. Und lange nach einem Brief von ihm.\"\n}, {\n    \"manuscript\": \"Ms-102,51v[3]\",\n    \"date\": \"1915-01-15\",\n    \"eng\": \"Worked a bit; with greater brio. Bathed in the evening.\",\n    \"ger\": \"Etwas gearbeitet; mit gr\\xF6\\xDFerem Animo. Abends gebadet.\"\n}, {\n    \"manuscript\": \"Ms-102,51v[4]\",\n    \"date\": \"1915-01-16\",\n    \"eng\": \"Worked more and with brio. Now I have very little to do for the detachment, which is very pleasant for me. Still no news from David. More sensual in recent weeks. \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Mehr gearbeitet & mit Animo. Habe jetzt sehr wenig f\\xFCrs Detachement zu tun was mir sehr angenehm ist. Noch keine Nachricht von David. In den letzten Wochen sinnlicher. \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,52v[1]\",\n    \"date\": \"1915-01-17\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,52v[2]\",\n    \"date\": \"1915-01-18\",\n    \"eng\": \"Did almost no work. Felt completely weak and without any brio. But probably things will change. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014. \",\n    \"ger\": \"Fast nichts gearbeitet. F\\xFChlte mich ganz matt & ohne jedes Animo. Es wird aber wohl anders werden. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,52v[3]\",\n    \"date\": \"1915-01-19\",\n    \"eng\": \"Worked very little. Quite dead in that respect. Just don't force yourself!!! When will I get some news from David?! \\u2014\\u2014.\",\n    \"ger\": \"Sehr wenig gearbeitet. In dieser Beziehung ganz tot. Nur sich zu nichts zwingen!!! Wann werde ich eine Nachricht von David erhalten?! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,52v[4]\",\n    \"date\": \"1915-01-20\",\n    \"eng\": \"Didn\\u2019t work; but this rest is like a refreshing sleep.\",\n    \"ger\": \"Nichts gearbeitet; aber diese Ruhe ist wie der erquickende Schlaf.\"\n}, {\n    \"manuscript\": \"Ms-102,52v[5] et 53v[1]\",\n    \"date\": \"1915-01-21\",\n    \"eng\": \"Worked a bit. Sent letter to David. Took it directly to the censor at the local general post office who is a very nice person.\",\n    \"ger\": \"Etwas gearbeitet. Brief an David abgeschickt. Ging mit ihm direkt zum Zensor an der hiesigen / Hauptpost der ein sehr netter Mensch ist.\"\n}, {\n    \"manuscript\": \"Ms-102,53v[2]\",\n    \"date\": \"1915-01-22\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,53v[3]\",\n    \"date\": \"1915-01-23\",\n    \"eng\": \"Worked a bit. Getting in trouble now due to my unspoken position. Just be self-possessed! \\u2014\\u2014.\",\n    \"ger\": \"Etwas gearbeitet. Komme jetzt durch meine unausgesprochene Stellung in Schwierigkeiten. Nur sich selbst besitzen! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,53v[4]\",\n    \"date\": \"1915-01-24\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,53v[5] et 54v[1]\",\n    \"date\": \"1915-01-25\",\n    \"eng\": \"Letter from Keynes! Not very nice. Very sensual in the last few days. \\u2014\\u2014 Worked without success. I am completely in the dark about how my work will go on. It can only succeed by a miracle. Only from outside myself, in the veil\\u2019s being taken away from my eyes. I must surrender myself completely to my fate. As it is imposed on me, so will it be. I live in the hand of fate. (Just don't become petty.) So I can't become petty. \\u2014\\u2014.\",\n    \"ger\": \"Brief von Keynes! Nicht sehr lieb. In den letzten Tagen sehr sinnlich. \\u2014\\u2014 Ohne Erfolg gearbeitet. Ich bin ganz im Dunkeln dar\\xFCber wie meine Arbeit weiter gehen wird. Nur durch Wunder kann sie gelingen. Nur dadurch / indem von au\\xDFerhalb mir der Schleier von meinen Augen weggenommen wird. Ich mu\\xDF mich ganz in mein Schicksal ergeben. Wie es \\xFCber mich verh\\xE4ngt ist so wird es werden. Ich lebe in der Hand des Schicksals. (Nur nicht klein werden.) Und so kann ich nicht klein werden. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,54v[2\",\n    \"date\": \"1915-01-26\",\n    \"eng\": \"Got a nice card from Arne. Worked a bit, but unsuccessfully.\",\n    \"ger\": \"Liebe Karte von Arne erhalten. Etwas \\u2014 aber erfolglos \\u2014 gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-102,54v[3] et 55v[1]\",\n    \"date\": \"1915-01-27\",\n    \"eng\": \"Didn\\u2019t work. In the evening with many officers in the caf\\xE9. Most behaved like pigs. Even I drank a tiny bit more than necessary.\",\n    \"ger\": \"Nicht gearbeitet. Abends mit vielen Offizieren im Kaffee. Die meisten benahmen sich wie Schweine. Selbst ich trank ein ganz klein / wenig mehr als n\\xF6tig.\"\n}, {\n    \"manuscript\": \"Ms-102,55v[2]\",\n    \"date\": \"1915-01-28\",\n    \"eng\": \"Didn\\u2019t work which is very healthy for me - namely work. Very sensual which is strange because I\\u2019m doing quite a bit of exercise now. Not sleeping well.\",\n    \"ger\": \"Nicht gearbeitet was mir sehr gesund ist \\u2014 n\\xE4mlich der Arbeit. Sehr sinnlich was merkw\\xFCrdig ist weil ich jetzt nicht wenig Bewegung mache. Schlafe nicht gut.\"\n}, {\n    \"manuscript\": \"Ms-102,55v[3]\",\n    \"date\": \"1915-01-29\",\n    \"eng\": \"\",\n    \"ger\": \"Fast nicht gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-102,55v[4]\",\n    \"date\": \"1915-01-30\",\n    \"eng\": \"Didn\\u2019t work. Have been very upset about my external position and will probably take a decisive step in this business soon. \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Habe mich viel \\xFCber meine \\xE4u\\xDFere Stellung aufregen m\\xFCssen & werde in dieser Sache wahrscheinlich bald einen entscheidenden Schritt tun. \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,55v[5]\",\n    \"date\": \"1915-01-31\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,56v[1]\",\n    \"date\": \"1915-02-01\",\n    \"eng\": \"Didn\\u2019t work. In Captain Scholz\\u2019s officers' mess at noon, which was very pleasant. \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Zu Mittag in der Offiziersmesse des Hauptmannes Scholz wo es sehr gem\\xFCtlich war. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,56v[2]\",\n    \"date\": \"1915-02-02\",\n    \"eng\": \"\",\n    \"ger\": \"Ein klein wenig gearbeitet. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,56v[3]\",\n    \"date\": \"1915-02-03\",\n    \"eng\": \"Didn\\u2019t work. No ideas. Supposed to take over the supervision of our forge now. How will that work? May the spirit help me! It will be very difficult. However: courage! \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Keine Ideen. Soll jetzt die Aufsicht \\xFCber unsere Schmiede \\xFCbernehmen. Wie wird das gehen? M\\xF6ge der Geist mir beistehen! Es wird sehr schwierig werden aber: nur Mut! \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,56v[4]\",\n    \"date\": \"1915-02-05\",\n    \"eng\": \"Didn\\u2019t work. I'm in the forge a lot now. \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Bin jetzt viel in der Schmiede.: \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,57v[1]\",\n    \"date\": \"1915-02-06\",\n    \"eng\": \"\",\n    \"ger\": \"Lieben Brief von David (vom 14.1.)\"\n}, {\n    \"manuscript\": \"Ms-102,57v[2]\",\n    \"date\": \"1915-02-07\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,57v[3]\",\n    \"date\": \"1915-02-08\",\n    \"eng\": \"Received a posthumous work of Trakl\\u2019s from Ficker. Probably very good. \\u2014\\u2014 Sensual. Have hardly any grip on my work now. \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Von Ficker ein nachgelassenes Werk Trakls erhalten. Wahrscheinlich sehr gut. \\u2014\\u2014 Sinnlich. Habe jetzt gar keine Handhabe f\\xFCr meine Arbeit. \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,57v[4]\",\n    \"date\": \"1915-02-09\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,57v[5] et 58v[1]\",\n    \"date\": \"1915-02-10\",\n    \"eng\": \"Didn\\u2019t work. Nice letter from Ficker. Dedication by Rilke. If only I could only work again!!! Everything else would turn out all right. When will I think of something again?? All of that is in God's hands. Just wish and hope! Then you won't waste any time. \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Netten Brief von Ficker. Widmung von Rilke. K\\xF6nnte ich nur schon wieder / arbeiten!!! Alles andere w\\xFCrde sich finden. Wann wird mir wieder etwas einfallen??! Alles das liegt in Gottes Hand. W\\xFCnsche nur und hoffe! Dann verlierst du keine Zeit. \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,58v[2]\",\n    \"date\": \"1915-02-11\",\n    \"eng\": \"Didn\\u2019t work. \\u2014\\u2014 Now on a very tense footing with Cadet Adam, one of the officers. It is possible that there will be a duel between us. So, keep on living well and follow your conscience. The spirit be with me! Now and whatever the future may bring! \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. \\u2014\\u2014 Stehe jetzt mit einem der Offiziere \\u2013 dem Kadetten Adam \\u2013 auf sehr gespannten Fu\\xDFe. Es ist m\\xF6glich da\\xDF es zwischen uns zu einem Duell kommt. Lebe deswegen immer noch gut & nach deinem Gewissen. Der Geist sei mit mir! Jetzt und in jeder Zukunft! \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,58v[3] et 59v[1]\",\n    \"date\": \"1915-02-13\",\n    \"eng\": \"Didn\\u2019t work. The spirit be with me. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Der Geist sei mit / mir. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,59v[2]\",\n    \"date\": \"1915-02-15\",\n    \"eng\": \"Worked a bit yesterday. Not a day goes by now that I don't think about logic, even if only briefly, and this is a good sign. I think anything\\u2019s possible! \\u2013 Yesterday evening at Captain Scholz\\u2019s, where there was music (until 12 p.m.) Very pleasant.\",\n    \"ger\": \"Gestern etwas gearbeitet. Es vergeht ja jetzt kein Tag an dem ich nicht einmal wenn auch nur fl\\xFCchtig an die Logik denke & dies ist ein gutes Zeichen. Ich ahne alles M\\xF6gliche! \\u2013 Gestern abend bei Hauptmann Scholz wo musiziert wurde (bis 12 p.m.). Sehr gem\\xFCtlich. \"\n}, {\n    \"manuscript\": \"Ms-102,59v[3] et 60v[1]\",\n    \"date\": \"1915-02-17\",\n    \"eng\": \"Worked a bit today and yesterday. My position in the detachment is now thoroughly unsatisfactory, something will have to be done. \\u2014\\u2014 I can\\u2019t help getting annoyed and offended a lot and wasting my internal strength. I'm very sensual again and masturbate almost every day: it can't go on like this. \\u2014\\u2014\",\n    \"ger\": \"Gestern & heute etwas gearbeitet. Meine Stellung im Detachement ist jetzt durchaus unbefriedigend, es wird etwas geschehen m\\xFCssen. \\u2014\\u2014 Ich mu\\xDF mich viel \\xE4rgern & kr\\xE4nken und meine innere Kraft vergeuden. Bin wieder sehr sinnlich & onaniere  / fast jeden Tag: So geht es nicht weiter. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,5v[2] et 6v[1]\",\n    \"date\": \"1914-11-05\",\n    \"eng\": \"To Krakow early, where we should arrive late in the evening. I'm very eager to see whether I will meet Trakl. I fervently hope so. I do so miss someone who can hear me out a bit. There must also be some way of doing without such a person. But it would fortify me so much. A bit tired all day and inclined to depression. Didn\\u2018t work a great deal. \\nIn Krakow. It\\u2019s already too late to visit Trakl today. \\u2014\\u2014. May the spirit give me strength. \\u2014\\u2014\",\n    \"ger\": \"Fr\\xFCh weiter nach Krakau wo wir sp\\xE4t abends ankommen sollen. Bin sehr gespannt ob ich Trakl treffen werde. Ich hoffe es sehr. Ich vermisse sehr einen Menschen mit dem ich mich ein wenig ausreden kann. Es wird auch ohne einen solchen gehen m\\xFCssen. Aber es w\\xFCrde mich sehr st\\xE4rken. Den ganzen Tag etwas m\\xFCde & zur Depression geneigt. Nicht sehr viel gearbeitet.\\n/ In Krakau. Es ist schon zu sp\\xE4t Trakl heute noch zu besuchen. \\u2014\\u2014. M\\xF6ge der Geist mir Kraft geben. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,60v[2]\",\n    \"date\": \"1915-02-18\",\n    \"eng\": \"Did almost no work. Thought a lot about my situation. I wonder about my future from every point of view. \\u2014\\u2014.\",\n    \"ger\": \"Fast nicht gearbeitet. Viel \\xFCber meine Lage nachgedacht. Ich bin auf meine Zukunft in jeder Hinsicht neugierig. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,60v[3]\",\n    \"date\": \"1915-02-19\",\n    \"eng\": \"Renewed trouble in the factory. Long conversation with my commander but that didn't lead to anything positive. Did almost no work. These troubles disturb my thinking. That must change. \\u2014\\u2014. \\u2014\\u2014.\",\n    \"ger\": \"Neuerliche Unannehmlichkeiten in der Fabrik. Langes Gespr\\xE4ch mit meinem Kommandanten das aber zu nichts Rechtem gef\\xFChrt hat. Fast nicht gearbeitet. Diese Unannehmlichkeiten st\\xF6ren mich im Denken. Das mu\\xDF anders werden. \\u2014\\u2014. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,60v[4] et 61v[1]\",\n    \"date\": \"1915-02-20\",\n    \"eng\": \"Cowardly thinking, fearful wavering, anxious hesitating, effeminate complaining, remedy no misery, won\\u2019t set you free! Didn\\u2019t work. Thought a lot. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Feiger Gedanken b\\xE4ngliches / Schwanken, \\xE4ngstliches Zagen, weibliches Klagen, wendet kein Elend, macht dich nicht frei! Nicht gearbeitet. Viel gedacht. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,61v[2]\",\n    \"date\": \"1915-02-21\",\n    \"eng\": \"Didn\\u2019t work. Better mood. Sensual. If only I could work again!!!! \\u2014\\u2014! \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Besserer Stimmung. Sinnlich. K\\xF6nnte ich nur schon wieder arbeiten!!!! \\u2014\\u2014! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,61v[3]\",\n    \"date\": \"1915-02-22\",\n    \"eng\": \"Didn\\u2019t work. Very many vivid dreams last night, but not bad ones. A lot of trouble with the crew. Annoyance and agitation; self-reproach etc. etc. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Heute nacht riesig viel und lebhaft aber nicht schlecht getr\\xE4umt. Viel Unannehmlichkeiten mit der Mannschaft. \\xC4rger & Aufregung; Selbstvorw\\xFCrfe etc. etc. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,61v[4] et 62v[1]\",\n    \"date\": \"1915-02-23\",\n    \"eng\": \"Didn\\u2019t work. My difficulties are still not resolved. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Meine Schwierigkeiten / noch immer nicht geregelt. \\u2014\\u2014\\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,62v[2]\",\n    \"date\": \"1915-02-26\",\n    \"eng\": \"Didn\\u2019t work! Will I ever work again?!? Gloomy mood. No news from David. Am utterly lonely. Think of suicide. Will I ever work again??! \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet! Werde ich je wieder arbeiten?!? Tr\\xFCber Stimmung. Keine Nachricht von David. Bin ganz verlassen. Denke an Selbstmord. Werde ich je wieder arbeiten??! \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,62v[3] et 63v[1]\",\n    \"date\": \"1915-02-27\",\n    \"eng\": \"Didn\\u2019t work. Gloomy mood. Very sensual. Feel very isolated. The goal of my work seems to me more than ever to have receded into an indeterminable distance! I lack the courage to be sure of victory and hope boldly. It seems to me as if I shall never again make a big discovery. It\\u2019s been a long time since I\\u2019ve been as forsaken by all good spirits as I am now. Just don't lose yourself!! \\u2014\\u2014. \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Tr\\xFCbe Stimmung. Sehr sinnlich. F\\xFChle mich vereinsamt. Das Ziel meiner Arbeit scheint mir mehr denn je in unabsehbare Ferne ger\\xFCckt! Der siegesgewisse und k\\xFChn hoffende Mut fehlt mir. Es ist mir als sollte ich nie mehr eine gro\\xDFe / Entdeckung machen. Schon lang war ich nicht so von allen guten Geistern verlassen wie jetzt. Verliere nur nicht dich selbst!! \\u2014\\u2014. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,63v[2]\",\n    \"date\": \"1915-02-28\",\n    \"eng\": \"Didn\\u2019t work. No news from David! Indecisive and unsettled mood.\",\n    \"ger\": \"Nicht gearbeitet. Keine Nachricht von David! Unentschiedener und wechselnder Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-102,63v[3]\",\n    \"date\": \"1915-03-02\",\n    \"eng\": \"Didn\\u2019t work. A momentary glimmer of light yesterday evening. No news from David! \\u2014 Pleasant evening at Scholz\\u2019s. Otherwise, a generally gloomy mood.\",\n    \"ger\": \"Nicht gearbeitet. Gestern abend einen momentanen Lichtblick. Keine Nachricht von David! \\u2014 Abends gem\\xFCtlich bei Scholz. Sonst im allgemeinen tr\\xFCber Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-102,63v[4] et 64v[1]\",\n    \"date\": \"1915-03-04\",\n    \"eng\": \"Didn\\u2019t work. Am morally weak; but appreciate the enormous difficulty of my situation and so far I am still quite unsure how to correct it. \\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Bin moralisch matt; sehe aber die enorme / Schwierigkeit meiner Lage ein und bisher bin ich mir noch ganz im Unklaren dar\\xFCber wie sie zu korrigieren ist. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,64v[2]\",\n    \"date\": \"1915-03-05\",\n    \"eng\": \"Talked to Gurth about my humiliating position today. No decision yet. Maybe I'll go to the front as an infantryman. = .\",\n    \"ger\": \"Sprach heute mit G\\xFCrth \\xFCber meine unw\\xFCrdige Stellung. Noch keine Entscheidung. Vielleicht gehe ich als Infanterist an die Front. = . \"\n}, {\n    \"manuscript\": \"Ms-102,64v[3]\",\n    \"date\": \"1915-03-06\",\n    \"eng\": \"= . My situation is still undecided. My mood very unsettled. \\u2014\\u2014.\",\n    \"ger\": \"= . Meine Lage ist noch immer unentschieden. Meine Stimmung stark wechselnd. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,64v[4] et 65v[1]\",\n    \"date\": \"1915-03-07\",\n    \"eng\": \"=. Situation unchanged; uneasy. I'm still in the dark about an appropriate change. Heavy frost has returned again! Very much out of season! I don't feel at all well. I'm mentally weary, so to speak, very weary. On the other hand, what is to be done about it?? I am exhausted by loathesome circumstances. The whole of outer life, with all its viciousness, assaults me. And I\\u2019m filled with hatred inside and can\\u2019t let the spirit in me. God is love. \\u2014 I'm like a burned-out furnace full of slag and garbage. \\u2014\\u2014\",\n    \"ger\": \"= . Lage unver\\xE4ndert; unbehaglich. Bin mir noch ganz im Unklaren \\xFCber eine geeignete Ver\\xE4nderung. Jetzt bricht wieder / starker Frost herein! Sehr zur Unzeit! F\\xFChle mich nicht wohl. Bin sozusagen seelisch abgespannt, sehr abgespannt. Was dagegen zu machen ist?? Ich werde von widerlichen Umst\\xE4nden aufgezehrt. Das ganze \\xE4u\\xDFere Leben mit seiner ganzen Gemeinheit st\\xFCrmt auf mich ein. Und ich bin innerlich ha\\xDFerf\\xFCllt und kann den Geist nicht in mich einlassen. Gott ist die Liebe. \\u2014 Ich bin wie ein ausgebrannter Ofen voll Schlacke und Unrat. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,65v[2] et 66v[1]\",\n    \"date\": \"1915-03-08\",\n    \"eng\": \"\",\n    \"ger\": \"Lage unentschieden! Unver\\xE4ndert! \"\n}, {\n    \"manuscript\": \"Ms-102,66v[2]\",\n    \"date\": \"1915-03-09\",\n    \"eng\": \"\",\n    \"ger\": \"Lage unentschieden! = . Stimmung wachsam aber schlecht. \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,66v[3]\",\n    \"date\": \"1915-03-10\",\n    \"eng\": \"Very sensual. Irresolute. Restless in spirit. \\uFF1D . \",\n    \"ger\": \"Sehr sinnlich. Unentschlossen. Ruhelos im Geist. \\uFF1D . \"\n}, {\n    \"manuscript\": \"Ms-102,66v[4]\",\n    \"date\": \"1915-03-11\",\n    \"eng\": \"Didn\\u2019t work. Situation unchanged! Nothing but trouble. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Nicht gearbeitet. Lage unver\\xE4ndert! Nichts als Unannehmlichkeiten. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,66v[5]\",\n    \"date\": \"1915-03-12\",\n    \"eng\": \"Didn\\u2019t work. Thought a lot. Situation still undecided.\",\n    \"ger\": \"Nicht gearbeitet. Viel gedacht. Lage noch unentschieden. \"\n}, {\n    \"manuscript\": \"Ms-102,67v[1]\",\n    \"date\": \"1915-03-13\",\n    \"eng\": \"Same situation. Am completely indecisive. \\uFF1D . \\u2014\\u2014.\",\n    \"ger\": \"Lage im Gleichen. Bin ganz unschl\\xFCssig. \\uFF1D . \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,67v[2]\",\n    \"date\": \"1915-03-14\",\n    \"eng\": \"\",\n    \"ger\": \"Nicht gearbeitet. Depression. Der Druck auf die Brust. \\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,67v[3]\",\n    \"date\": \"1915-03-15\",\n    \"eng\": \"Met a one-year volunteer that I know and discussed my concerns with him and will continue to talk about it tomorrow. So now I'm dealing with that business. And I'm still not working. Will I ever work again??!! \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014\",\n    \"ger\": \"Traf einen bekannten Einj\\xE4hrigen & besprach mit ihm meine Angelegenheit & werde morgen weiter dar\\xFCber sprechen. Jetzt habe ich also meine Noten eingeholt. Und noch immer arbeite ich nicht. Werde ich je wieder arbeiten??!! \\u2014\\u2014 \\u2014\\u2014\\u2014\\u2014 \"\n}, {\n    \"manuscript\": \"Ms-102,68v[1]\",\n    \"date\": \"1915-03-16\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,68v[2]\",\n    \"date\": \"1915-03-18\",\n    \"eng\": \"Lovely letter from David yesterday! \\u2014\\u2014 Moved to the factory. Answered David. Very sensual.\",\n    \"ger\": \"Gestern lieben Brief von David! \\u2014\\u2014 Bin in die Fabrik umgezogen. David geantwortet. Sehr sinnlich. \"\n}, {\n    \"manuscript\": \"Ms-102,68v[3]\",\n    \"date\": \"1915-03-19\",\n    \"eng\": \"Talked to G\\xFCrth today about my future. Without a satisfactory result. Very sensual. \\u2014\\u2014.\",\n    \"ger\": \"Sprach heute mit G\\xFCrth \\xFCber meine Zukunft. Ohne erfreuliches Resultat. Sehr sinnlich. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,68v[4]\",\n    \"date\": \"1915-03-21\",\n    \"eng\": \"Think of joining the Emperor\\u2019s Hunters as Ficker is there too. Not quite well. Didn\\u2019t work. Persistently unwell. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Denke daran zu den Kaiserj\\xE4gern zu gehen da auch Ficker dort ist. Nicht ganz wohl. Nicht gearbeitet. Anhaltend unwohl. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,68v[5]\",\n    \"date\": \"1915-03-22\",\n    \"eng\": \"\",\n    \"ger\": \"Unwohl. Gegen Abend besser.\"\n}, {\n    \"manuscript\": \"Ms-102,69v[1]\",\n    \"date\": \"1915-03-23\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,69v[2]\",\n    \"date\": \"1915-03-24\",\n    \"eng\": \"\\u2014\\u2014. Didn\\u2019t work! Will I ever work again??!!! \\u2014\\u2014.\",\n    \"ger\": \"\\u2014\\u2014. Nicht gearbeitet! Werde ich je wieder arbeiten??!!! \\u2014\\u2014. \"\n}, {\n    \"manuscript\": \"Ms-102,69v[3]\",\n    \"date\": \"1915-03-27\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,69v[4]\",\n    \"date\": \"1915-03-29\",\n    \"eng\": \"Weary! Surrounded by viciousness. How tired I am! \\u2014\\u2014\\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014\",\n    \"ger\": \"\\xDCberdr\\xFCssig! Von Gemeinheit umgeben. Wie bin ich m\\xFCde! \\u2014\\u2014\\u2014\\u2014. \\u2014\\u2014\\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,69v[5]\",\n    \"date\": \"1915-03-31\",\n    \"eng\": \"\",\n    \"ger\": \"Wechselnder Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-102,69v[6]\",\n    \"date\": \"1915-04-04\",\n    \"eng\": \"\",\n    \"ger\": \"Wechselnder Stimmung.\"\n}, {\n    \"manuscript\": \"Ms-102,69v[7] et 70v[1]\",\n    \"date\": \"1915-04-15\",\n    \"eng\": \"Nothing new comes to mind! (G\\xFCrth posted away from here.) \\nI can\\u2019t think of anything new. And that\\u2019s probably not what matters at all.\",\n    \"ger\": \"Es f\\xE4llt mir nichts Neues mehr ein! (G\\xFCrth von hier abkommandiert.)\\n/ Ich kann auf nichts mehr Neues denken. Und darauf darf es wohl auch gar nicht ankommen.\"\n}, {\n    \"manuscript\": \"Ms-102,6v[2] \",\n    \"date\": \"1914-11-06\",\n    \"eng\": \"Into the city early to the garrison hospital. Learned there that Trakl died a few days ago! This hit me very hard. How sad, how sad!!! I immediately wrote to Ficker about it. Ran errands and got on the ship around 6 a.m. Didn\\u2019t work. Poor Trakl! \\u2014\\u2014!  Thy will be done. \\u2014\\u2014\\u2014\\u2014\",\n    \"ger\": \"Fr\\xFCh in die Stadt zum Garnisonsspital. Erfuhr dort da\\xDF Trakl vor wenigen Tagen gestorben ist! Dies traf mich sehr stark. Wie traurig, wie traurig!!! Ich schrieb dar\\xFCber sofort an Ficker. Besorgungen gemacht & dann gegen 6 Uhr aufs Schiff gekommen. Nicht gearbeitet. Der arme Trakl! \\u2014\\u2014! Dein Wille geschehe. \\u2014\\u2014 \"\n}, {\n    \"manuscript\": \"Ms-102,6v[3] et 7v[1] \",\n    \"date\": \"1914-11-07\",\n    \"eng\": \"Yesterday at nine o'clock in the evening a command came suddenly for a job running the searchlight on another ship. So out of bed and did so until 3\\xBD in the morning. As a result, I\\u2019m very tired. Afternoon in the city on errands. The siege of Krak\\xF3w is now definitely expected. I want to try to get away from this ship. Didn\\u2019t work. I long for a decent human being because here I am surrounded by lack of decency. May the spirit not leave me and become more steadfast in me. \\u2014\\u2014\\u2014\\u2014.\",\n    \"ger\": \"Gestern um neun Uhr abends kam pl\\xF6tzlich der Befehl f\\xFCr eine / Arbeit an einem anderen Schiff mit dem Scheinwerfer zu leuchten. Also aus dem Bett heraus und bis 3\\xBD fr\\xFCh geleuchtet. Bin in Folge dessen sehr m\\xFCde. Nachmittag in der Stadt auf Besorgungen. Die Belagerung von Krakau wird jetzt mit aller Bestimmtheit erwartet. Ich will trachten von diesem Schiff wegzukommen. Nicht gearbeitet. Ich sehne mich nach einem anst\\xE4ndigen Menschen denn hier bin ich von Unanst\\xE4ndigkeit umringt. M\\xF6ge der Geist mich nicht verlassen und in mir best\\xE4ndiger werden. \\u2014\\u2014\\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,70v[2]\",\n    \"date\": \"1915-04-16\",\n    \"eng\": \"Very sensual. Masturbate every day. No news from David for a long time. I am working. \\u2014\\u2014 \\u2014\\u2014\",\n    \"ger\": \"Sehr sinnlich. Onaniere jeden Tag. Lange schon keine Nachricht von David. Ich arbeite. \\u2014\\u2014 \\u2014\\u2014 \"\n}, {\n    \"manuscript\": \"Ms-102,70v[3]\",\n    \"date\": \"1915-04-17\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,70v[4]\",\n    \"date\": \"1915-04-18\",\n    \"eng\": \"Got a bad cold today!\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,70v[5]\",\n    \"date\": \"1915-04-22\",\n    \"eng\": \"Will now be supervisor of the whole workshop. Further trouble.\",\n    \"ger\": \"Soll jetzt die Oberaufsicht \\xFCber die ganze Werkst\\xE4tte kriegen. Neuerliche Unannehmlichkeiten.\"\n}, {\n    \"manuscript\": \"Ms-102,70v[6]\",\n    \"date\": \"1915-04-24\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,71v[1]\",\n    \"date\": \"1915-04-26\",\n    \"eng\": \"Work. Apart from that, my employment is very unsatisfying.\",\n    \"ger\": \"Arbeite. Sonst meine T\\xE4tigkeit sehr unzufriedenstellend.\"\n}, {\n    \"manuscript\": \"Ms-102,71v[2]\",\n    \"date\": \"1915-04-27\",\n    \"eng\": \"Work! Now I have to waste my time at the factory!!! \\u2014\\u2014\",\n    \"ger\": \"Arbeite! In der Fabrik mu\\xDF ich jetzt meine Zeit verplempern!!! \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,71v[3]\",\n    \"date\": \"1915-04-28\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,71v[4]\",\n    \"date\": \"1915-04-29\",\n    \"eng\": \"Work. Otherwise things go badly for me. Just don't let common people get to you.\",\n    \"ger\": \"Arbeite. Sonst geht's mir schlecht. La\\xDF dich nur nicht von den gemeinen Menschen bearbeiten. \"\n}, {\n    \"manuscript\": \"Ms-102,71v[5]\",\n    \"date\": \"1915-04-30\",\n    \"eng\": \"\",\n    \"ger\": \"Lieben Brief von David!\"\n}, {\n    \"manuscript\": \"Ms-102,71v[6]\",\n    \"date\": \"1915-05-01\",\n    \"eng\": \"The blessing of work! \\u2014\\u2014\",\n    \"ger\": \"Die Gnade der Arbeit! \\u2014\\u2014\"\n}, {\n    \"manuscript\": \"Ms-102,72v[1]\",\n    \"date\": \"1915-05-05\",\n    \"eng\": \"Still not appointed! Troubles because of my unclear position, again and again. If it goes on like this for much longer, I\\u2019ll try to get away from here.\",\n    \"ger\": \"Noch immer nicht ernannt! Immer wieder wegen meiner unklaren Stellung Unanehmlichkeiten. Wenn das noch lange so geht werde ich von hier wegzukommen trachten.\"\n}, {\n    \"manuscript\": \"Ms-102,72v[2]\",\n    \"date\": \"1915-05-08\",\n    \"eng\": \"Much agitation! Was close to crying!!!! Feel myself broken and sick! Surrounded by viciousness.\",\n    \"ger\": \"Viel Aufregung! War nahe am Weinen!!!! F\\xFChle mich wie gebrochen und krank! Von Gemeinheit umgeben.\"\n}, {\n    \"manuscript\": \"Ms-102,72v[3]\",\n    \"date\": \"1915-05-11\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-102,72v[4]\",\n    \"date\": \"1915-05-22\",\n    \"eng\": \"\",\n    \"ger\": \"Lieben Brief von Russell!\"\n}, {\n    \"manuscript\": \"Ms-102,72v[5] et 73v[1]\",\n    \"date\": \"1915-05-24\",\n    \"eng\": \"Today I met Dziewicki, the old logician of whom Russell wrote me in his letter. A nice old man.\",\n    \"ger\": \"Lernte heute den alten / Logiker Dziewicki kennen von dem mir Russell in seinem Brief schrieb. Ein netter alter Mann.\"\n}, {\n    \"manuscript\": \"Ms-102,73v[2]\",\n    \"date\": \"1915-05-25\",\n    \"eng\": \"Renewed difficulty over my promotion. Will probably get away from here. Often very weighed down. Because of the viciousness of those around me who exploit me most disgracefully. \\u2014\\u2014.\",\n    \"ger\": \"Erneuerte Schwierigkeit wegen meiner Bef\\xF6rderung. Werde wahrscheinlich von hier wegkommen. Vielfach sehr niedergedr\\xFCckt. Durch die Gemeinheit meiner Umgebung die mich aufs Sch\\xE4ndlichste ausn\\xFCtzt. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,73v[3]\",\n    \"date\": \"1915-06-22\",\n    \"eng\": \"Work a great deal! Despite the most disgusting circumstances!\",\n    \"ger\": \"Arbeite sehr viel! Trotz der widerlichsten Umst\\xE4nde!\"\n}, {\n    \"manuscript\": \"Ms-102,8v[1] \",\n    \"date\": \"1914-11-08\",\n    \"eng\": \"I'm not really in the mood to work. Read much. Guard duty tonight. Did almost no work. I'm a bit worried about my future. \\u2014\\u2014.\",\n    \"ger\": \"Bin nicht recht zum Arbeiten gestimmt. Lese viel. Heute nacht Wachdienst. Fast nichts gearbeitet. Bin etwas \\xFCber meine Zukunft besorgt. \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-102,8v[2] et 9v[1] et 10v[1]\",\n    \"date\": \"1914-11-09\",\n    \"eng\": \"Just overheard a conversation between our commander and another officer: what vile voices. All the wickedness of the world squawks and screeches out of them. Villainy wherever I look. Not one sympathetic heart as far as my eye can see!!! \\u2014\\u2014\\u2014\\u2014\\nReceive a very nice card from Uncle Paul. Such a card ought to refresh and strengthen me but I have been depressible in the last few days!! I have no real joy in anything. And I live with anxiety about the future! Because I am no longer at peace with myself. Every lack of decency in my environment \\u2013 and there\\u2019s always something of the kind \\u2013 wounds me deeply and before a wound heals there\\u2019s a fresh one! Even if \\u2013 as in the evenings now \\u2013 I am not depressed, I still don't feel really free. I seldom have a desire to work, and then only very fleetingly. Because I can't bring myself to feel at ease. I feel myself dependent on the world and so have to fear it too, even when for the present nothing bad will happen to me. I see my self, that self in which I could once rest secure, as a longed for distant isle that has disappeared. \\u2013  The Russians are advancing rapidly on Krakow. The entire civilian population has to leave the city. It looks very bad for our cause! God be with me!!! Worked a little.\",\n    \"ger\": \"Belauschte eben ein Gespr\\xE4ch unseres Kommandanten mit einem anderen Offizier: Was f\\xFCr gemeine Stimmen. Die ganze Schlechtigkeit der Welt kreischt & kr\\xE4chzt aus ihnen heraus. Gemeinheit wo ich hinsehe. Kein f\\xFChlendes Herz soweit mein Auge reicht!!! \\u2014\\u2014\\u2014\\u2014 \\nErhalte eine sehr liebe Karte von Onkel Paul. So eine Karte sollte mich / erfrischen & st\\xE4rken aber ich bin in den letzten Tagen deprimierbar!! Ich habe an nichts eine rechte Freude. Und ich lebe in Angst vor der Zukunft! Weil ich nicht mehr in mir ruhe. Jede Unanst\\xE4ndigkeit meiner Umgebung \\u2013 und solche gibt es immer \\u2013 verwundet mich im Innersten und ehe eine Wunde verheilt kommt eine frische! Selbst dann wenn \\u2013 wie jetzt, abends \\u2013 ich nicht deprimiert bin, f\\xFChle ich mich doch nicht so recht frei. Ich habe nur selten & dann ganz vor\\xFCbergehende Lust zum Arbeiten. Da ich nicht zu einem behaglichen Gef\\xFChle  / kommen kann. Ich f\\xFChle mich abh\\xE4ngig von der Welt & mu\\xDF sie daher auch dann f\\xFCrchten wenn augenblicklich mir nichts Schlechtes widerf\\xE4hrt. Ich sehe mich selbst, das Ich worin ich sicher ruhen konnte wie ein ersehntes fernes Eiland das von mir gewichen ist. \\u2013 Die Russen r\\xFCcken schnell gegen Krakau vor. Die ganze Zivilbev\\xF6lkerung mu\\xDF die Stadt verlassen. Es sieht mit unserer Sache sehr schlecht aus! Gott steh mir bei!!! Ein wenig gearbeitet.\"\n}, {\n    \"manuscript\": \"Ms-103,10v[2]\",\n    \"date\": \"1916-05-07\",\n    \"eng\": \"Night passed quietly. Thank God. Only I am a wretch.\",\n    \"ger\": \"Nacht verlief ruhig. Gott sei Dank. Nur ich bin ein Elender.\"\n}, {\n    \"manuscript\": \"Ms-103,10v[3] et 12v[1]\",\n    \"date\": \"1916-05-08\",\n    \"eng\": \"The people I\\u2019m with are not so much nasty as tremendously limited! That makes it almost impossible to work with them, because they always misunderstand one. These people are not stupid, but limited. Within their circle, they are smart enough. But they lack character and thus breadth. \\\"The heart of a true believer understands everything\\\". Can\\u2019t work now.\",\n    \"ger\": \"Ruhige Nacht. Gott mit mir!\\nDie Leute mit denen ich beisammen bin sind nicht so sehr gemein als ungeheuer beschr\\xE4nkt! Das macht den Verkehr mit ihnen fast unm\\xF6glich, weil sie einen ewig mi\\xDFverstehen. Die Leute sind nicht / dumm, aber beschr\\xE4nkt. Sie sind in ihrem Kreise klug genug. Aber es fehlt ihnen der Charakter und damit die Ausdehnung. \\u201EAlles versteht das rechtgl\\xE4ubige Herz\\u201D. Kann jetzt nicht arbeiten. \"\n}, {\n    \"manuscript\": \"Ms-103,12v[2]\",\n    \"date\": \"1916-05-09\",\n    \"eng\": \"Have had plenty of time and peace to work now. But nothing is moving. My material is far away from me. Only death gives life its meaning.\",\n    \"ger\": \"H\\xE4tte jetzt reichlich Zeit und Ruhe zum Arbeiten. Aber es r\\xFChrt sich nichts. Mein Stoff ist weit von mir entfernt. Der Tod gibt dem Leben erst seine Bedeutung.\"\n}, {\n    \"manuscript\": \"Ms-103,12v[3] et 13v[1]\",\n    \"date\": \"1916-05-10\",\n    \"eng\": \"By the grace of God things are going very well for me now. Unfortunately I can't work. But Thy will be done! Amen. He won't forsake me in danger!! \\u2014\\u2014.\",\n    \"ger\": \"Durch die Gnade Gottes geht es mir jetzt sehr gut. Arbeiten kann ich leider nicht. Aber Dein Wille geschehe! Amen. In der Gefahr wird er / mich nicht verlassen!! \\u2014\\u2014.\"\n}, {\n    \"manuscript\": \"Ms-103,13v[2]\",\n    \"date\": \"1916-05-11\",\n    \"eng\": \"A change of post the day after tomorrow. Very nasty! But Thy will be done.\",\n    \"ger\": \"\\xDCbermorgen Stellungswechsel. Sehr unangenehm! Aber Dein Wille geschehe.\"\n}, {\n    \"manuscript\": \"Ms-103,13v[3] et 14v[1]\",\n    \"date\": \"1916-05-16\",\n    \"eng\": \"In the third position. As always, much fatigue. But also great blessings. Am weak as always. Can't work.\\nSleep during infantry fire today. Will probably perish. God be with me. In eternity, amen. I am a weak human being but He has preserved me so far. God be praised in eternity, amen. I commit my soul to the Lord.\",\n    \"ger\": \"In der dritten Stellung. Wie immer viel M\\xFChsal. Aber auch gro\\xDFe Gnade. Bin schwach wie immer! Kann nicht arbeiten.\\nSchlafe heute im Infanteriefeuer, werde wahrscheinlich zugrunde gehen. Gott sei mit mir! In Ewigkeit Amen! Ich bin ein schwacher Mensch aber Er hat mich bis nun erhalten. Gott sei gelobt in Ewigkeit, Amen. Ich \\xFCbergebe meine Seele dem / Herrn.\"\n}, {\n    \"manuscript\": \"Ms-103,14v[2]\",\n    \"date\": \"1916-05-21\",\n    \"eng\": \"\",\n    \"ger\": \"Gott mache aus mir einen besseren Menschen!\"\n}, {\n    \"manuscript\": \"Ms-103,14v[3]\",\n    \"date\": \"1916-05-25\",\n    \"eng\": \"Fired upon.  As God wills.\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-103,14v[4]\",\n    \"date\": \"1916-05-27\",\n    \"eng\": \"Letters from Mining and Mama. Today or tomorrow there will be a Russian attack. As God wills then. I have fallen very deeply into sin. But God will forgive me.\",\n    \"ger\": \"Briefe von Mining und Mama. Heute oder morgen soll russischer Angriff sein. Nun wie Gott will. Ich bin sehr tief in die S\\xFCnde gefallen. Aber Gott wird mir vergeben.\"\n}, {\n    \"manuscript\": \"Ms-103,14v[5] et 15v[1]\",\n    \"date\": \"1916-05-28\",\n    \"eng\": \"Very unsettled sleep in the last few weeks. I always dream of my duties. Dreams that always bring me to the edge of awakening. Only masturbated 3 times in the last 2 months. / \\nAgainst my will, my company disgusts me. They often seem to me not like human beings but caricatures. Common rabble. I don't hate them but they disgust me. Full alert today. My commander is very gracious with me. Thinking of the purpose of life. That\\u2019s still the best thing you can do. I should be happier. Oh if my spirit were stronger!!! Now God be with me! Amen.\",\n    \"ger\": \"In den letzten Wochen sehr unruhigen Schlaf. Immer tr\\xE4ume ich vom Dienst. Tr\\xE4ume die mich immer an die Grenze des Erwachens f\\xFChren. In den letzten 2 Monaten nur 3 Mal onaniert.\\nMeine Umgebung ekelt mich gegen meinen Willen an. Nicht wie Menschen sondern wie Fratzen erscheinen sie mir oft. Gemeines Gesindel. Ich hasse sie nicht aber sie ekeln mich an. Heute strenge Bereitschaft. Mein Kommandant ist sehr liebensw\\xFCrdig mit mir. Denke an das Ziel des Lebens. Das ist noch das Beste was du machen kannst. Ich sollte gl\\xFCcklicher sein. Oh, wenn mein Geist st\\xE4rker w\\xE4re!!! Nun Gott mit mir! Amen.\"\n}, {\n    \"manuscript\": \"Ms-103,15v[2]\",\n    \"date\": \"1916-05-29\",\n    \"eng\": \"\",\n    \"ger\": \"\"\n}, {\n    \"manuscript\": \"Ms-103,15v[3] et 16r[1]\",\n    \"date\": \"1916-07-06\",\n    \"eng\": \"Enormous hardship in the last month. Have thought a lot about every possible subject but strangely I can\\u2019t make the connection with my mathematical trains of thought.\",\n    \"ger\": \"Kolossale Strapazen im letzten Monat. Habe viel \\xFCber alles / m\\xF6gliche nachgedacht kann aber merkw\\xFCrdigerweise nicht die Verbindung mit meinen mathematischen Gedankeng\\xE4ngen herstellen.\"\n}, {\n    \"manuscript\": \"Ms-103,16r[2]\",\n    \"date\": \"1916-07-07\",\n    \"eng\": \"But the connection will be made!\\nWhat cannot be said, cannot be said!\",\n    \"ger\": \"Aber die Verbindung wird hergestellt werden!\\nWas sich nicht sagen l\\xE4\\xDFt, l\\xE4\\xDFt sich nicht sagen!\"\n}, {\n    \"manuscript\": \"Ms-103,16r[3]\",\n    \"date\": \"1916-07-08\",\n    \"eng\": \"Very unfortunately, I have no peace for work!\",\n    \"ger\": \"Leider, leider! Ich habe keine Ruhe zum Arbeiten!\"\n}, {\n    \"manuscript\": \"Ms-103,16r[4] et 16v[1]\",\n    \"date\": \"1916-07-09\",\n    \"eng\": \"Don\\u2019t get annoyed with people.  People are grey villains. And yet you mustn\\u2019t get annoyed with them. Their words mustn\\u2019t get under your skin. If they don\\u2019t speak to me, it\\u2019s still easy to stay calm. But when they become insulting and rude to you, then it wells up in me. Don\\u2019t get annoyed. Getting annoyed doesn\\u2019t do you any good. \",\n    \"ger\": \"\\xC4rgere dich nicht \\xFCber die Menschen. Die Menschen sind graue Schufte. Und doch darfst du dich nicht \\xFCber sie \\xE4rgern. Ihre Worte d\\xFCrfen nicht in dich dringen. Wenn sie mich nicht anreden ist es noch leicht / die Ruhe zu bewahren. Aber wenn sie dir gegen\\xFCber frech und grob werden dann wallt es in mir auf. \\xC4rgere dich nicht. \\xC4rgern n\\xFCtzt dich gar nichts.\"\n}, {\n    \"manuscript\": \"Ms-103,16v[2]\",\n    \"date\": \"1916-07-14\",\n    \"eng\": \"The blessing of work.\",\n    \"ger\": \"Die Gnade der Arbeit.\"\n}, {\n    \"manuscript\": \"Ms-103,16v[3]\",\n    \"date\": \"1916-07-16\",\n    \"eng\": \"Terrible weather. In the mountains, miserable, quite hopelessly protected from the icy cold, rain, and fog. A life full of torment. Terribly difficult not to lose oneself. Because I am indeed a weak man. But the spirit helps me. It would be best if I were already ill, then at least I would have a little rest.\",\n    \"ger\": \"Furchtbare Witterung. Im Gebirge, schlecht, ganz unzureichend gesch\\xFCtzt eisige K\\xE4lte, Regen und Nebel. Qualvolles Leben. Furchtbar schwierig sich nicht zu verlieren. Denn ich bin ja ein schwacher Mensch. Aber der Geist hilft mir. Am besten w\\xE4r's ich w\\xE4re schon krank dann h\\xE4tte ich wenigstens ein bi\\xDFchen Ruhe.\"\n}, {\n    \"manuscript\": \"Ms-103,17v[1]\",\n    \"date\": \"1916-07-19\",\n    \"eng\": \"Still get annoyed. Am a weak man.\",\n    \"ger\": \"\\xC4rgere mich noch immer. Bin ein schwacher Mensch.\"\n}, {\n    \"manuscript\": \"Ms-103,17v[2]\",\n    \"date\": \"1916-07-20\",\n    \"eng\": \"Keep on working so that you may become good.\",\n    \"ger\": \"Arbeite nur fort damit du gut wirst.\"\n}, {\n    \"manuscript\": \"Ms-103,17v[3]\",\n    \"date\": \"1916-07-24\",\n    \"eng\": \"Taking fire. And with every shot my soul flinches. I want so much to stay alive!\",\n    \"ger\": \"Werden beschossen. Und bei jedem Schu\\xDF zuckt meine Seele zusammen. Ich m\\xF6chte so gerne noch weiter leben!\"\n}, {\n    \"manuscript\": \"Ms-103,17v[4] et 18v[1]\",\n    \"date\": \"1916-07-26\",\n    \"eng\": \"Moving letter from David. He writes that his brother died in France. Dreadful! This dear friendly letter opens my eyes to the way in which I live in exile here. It may be a salutary exile, but at the moment I feel it as an exile. I\\u2019m exiled among monsters and must live with them in the most repulsive circumstances. And in this company I ought to lead a good life and purify myself. But that's terribly difficult! I\\u2019m too weak. I\\u2019m too weak. God help me.\",\n    \"ger\": \"R\\xFChrenden Brief von David. Er schreibt, sein Bruder sei in Frankreich gefallen. Schrecklich! Dieser liebe freundliche Brief \\xF6ffnet mir die Augen dar\\xFCber wie ich hier in der Verbannung lebe. Es mag eine heilsame / Verbannung sein aber ich f\\xFChle sie jetzt als Verbannung. Ich bin unter lauter Larven verbannt und mu\\xDF mit diesen unter den widerlichsten Umst\\xE4nden leben. Und in dieser Umgebung soll ich ein gutes Leben f\\xFChren und mich l\\xE4utern. Aber das ist furchtbar schwer! Ich bin zu schwach. Ich bin zu schwach! Gott helfe mir.\"\n}, {\n    \"manuscript\": \"Ms-103,18v[2] et 19v[1]\",\n    \"date\": \"1916-07-29\",\n    \"eng\": \"I now have such a desire to live! And it's hard to give up life when one has come to want it. That is just \\\"sin\\\", unreasonable life, a mistaken outlook on life. Every so often I become an animal. Then I can think of nothing but eating, drinking, sleeping. Terrible. And then I suffer like an animal too, without the possibility of inner salvation. I am then at the mercy of my appetites and antipathies. Then a true life is out of the question.\",\n    \"ger\": \"Wurde gestern beschossen. War verzagt! Ich hatte Angst vor dem Tode! \\nSolch einen Wunsch habe ich jetzt zu leben! Und es ist schwer auf das Leben zu verzichten wenn man es / einmal gern hat. Das ist eben \\u201ES\\xFCnde\\u201D, unvern\\xFCnftiges Leben, falsche Lebensauffassung. Ich werde von Zeit zu Zeit zum Tier. Dann kann ich an nichts denken als an essen, trinken schlafen. Furchtbar! Und dann leide ich auch wie ein Tier, ohne die M\\xF6glichkeit innerer Rettung. Ich bin dann meinen Gel\\xFCsten und meinen Abneigungen preisgegeben. Dann ist an ein wahres Leben nicht zu denken.\\nWas under fire yesterday. Was despondent! I was afraid of death!\"\n}, {\n    \"manuscript\": \"Ms-103,19v[2] et 20v[1]\",\n    \"date\": \"1916-07-30\",\n    \"eng\": \"Funny: Today I am annoyed that in the infantry, where I am now billeted, I do not get the officers' rations as was initially promised to me. So I\\u2019m behaving extremely childishly, and badly.\\nBut still I can\\u2019t cope with my annoyance at the injustice suffered. I have to keep thinking about it and how it could be remedied. People are so stupid.\",\n    \"ger\": \"Komisch: Heute \\xE4rgere ich mich dar\\xFCber da\\xDF ich / bei der Infanterie wo ich jetzt in Verpflegung bin nicht Offiziersmenage bekomme wie mir anfangs in Aussicht gestellt wurde. Ich benehme mich also im h\\xF6chsten Grade kindisch und schlecht.\\nAber trotzdem kann ich meinen \\xC4rger \\xFCber das erlittene Unrecht nicht bemeistern. Immer wieder mu\\xDF ich daran denken, und wie ihm etwa abgeholfen werden k\\xF6nnte. So dumm ist der Mensch.\"\n}, {\n    \"manuscript\": \"Ms-103,1v[2]\",\n    \"date\": \"1916-03-29\",\n    \"eng\": \"Forced to do many strange things. I need great strength to bear it. I\\u2019m often close to despair. I haven't done any work in over a week. I have no time! God! But it's quite natural, because if I'm going to die, I won't have any time to work either. Inspection now. My soul shrivels up. God enlighten me! God enlighten me! God enlighten my soul.\",\n    \"ger\": \"Viel Ungewohntes zu tun gezwungen. Ich brauche gro\\xDFe Kraft das auszuhalten. Oft bin ich der Verzweiflung nahe. Ich habe schon seit mehr als einer Woche nichts mehr gearbeitet. Ich habe keine Zeit! Gott! Aber es ist ja nat\\xFCrlich, denn wenn ich tot sein werde, werde ich auch keine Zeit zum Arbeiten haben. Jetzt Inspektion. Meine Seele schrumpft zusammen. Gott erleuchte mich! Gott erleuchte mich! Gott erleuchte meine Seele. \"\n}, {\n    \"manuscript\": \"Ms-103,20v[2] et 21v[1]\",\n    \"date\": \"1916-08-06\",\n    \"eng\": \"Marching to the firing line, after a 3 day rail journey. Not in the best of health and feeling run down, due to the narrow-mindedness and viciousness of my company. God give me the power, the inner strength, to resist sickness of the soul. God save me with joyful courage.\",\n    \"ger\": \"Nach 3 Tagen Bahnfahrt auf dem Marsch in die Feuerstellung. Nicht bei bester Gesundheit und durch die  / Borniertheit und Gemeinheit meiner Umgebung seelisch marod. Gott gib mir Kraft, innere St\\xE4rke, der seelischen Krankheit zu trotzen. Gott erhalte mich bei frohem Mute.\"\n}, {\n    \"manuscript\": \"Ms-103,21v[2]\",\n    \"date\": \"1916-08-11\",\n    \"eng\": \"Live on in sin, i.e. unhappily. Am morose, joyless. Live at odds with everyone around me.\",\n    \"ger\": \"Lebe in der S\\xFCnde dahin, d.h. ungl\\xFCcklich. Bin verdrossen, freudlos. Lebe mit meiner ganzen Umgebung in Unfrieden.\"\n}, {\n    \"manuscript\": \"Ms-103,21v[3] et 22v[1]\",\n    \"date\": \"1916-08-12\",\n    \"eng\": \"You know what you have to do to live happily; why don\\u2019t you do it? Because you\\u2019re unreasonable. A bad life is an unreasonable life. It is important not to get annoyed.\",\n    \"ger\": \"Du wei\\xDFt was du zu tun hast um gl\\xFCcklich zu leben; warum tust du es nicht? Weil du unvern\\xFCnftig bist. Ein schlechtes Leben / ist ein unvern\\xFCnftiges Leben. Es kommt darauf an sich nicht zu \\xE4rgern.\"\n}, {\n    \"manuscript\": \"Ms-103,22v[2]\",\n    \"date\": \"1916-08-13\",\n    \"eng\": \"\",\n    \"ger\": \"K\\xE4mpfe noch vergebens gegen meine schwache Natur. Gott st\\xE4rke mich!\"\n}, {\n    \"manuscript\": \"Ms-103,22v[3]\",\n    \"date\": \"1916-08-19\",\n    \"eng\": \"Surrounded by viciousness. Should leave for a unit behind the lines in the foreseeable future. I'm happy about it. Surrounded by viciousness.\",\n    \"ger\": \"Von Gemeinheit umgeben! Soll in absehbarer Zeit zum Kader ins Hinterland abgehen. Bin froh dar\\xFCber. Von Gemeinheit umgeben.\"\n}, {\n    \"manuscript\": \"Ms-103,2v[1]\",\n    \"date\": \"1916-03-30\",\n    \"eng\": \"Do your best. You can\\u2019t do more. And be cheerful. Let yourself be content with yourself. For others will not support you, or at most only for a short time! (Then you\\u2019ll become a burden to them). Help yourself and help others with all your strength. And be cheerful as you do so. But how much strength ought one to use for onerself and how much for others? It's hard to live a good life!! But the good life is beautiful. \\\"Yet Thy will be done, not mine.\\\" \",\n    \"ger\": \"Tu Du dein Bestes! Mehr kannst du nicht tun: und sei heiter. La\\xDF' dir an dir selbst gen\\xFCgen. Denn andere werden dich nicht st\\xFCtzen oder doch nur f\\xFCr kurze Zeit! (Dann wirst du diesen l\\xE4stig werden). Hilf dir selbst und hilf anderen mit deiner ganzen Kraft. Und dabei sei heiter! Aber wieviel Kraft soll man f\\xFCr sich und wieviel f\\xFCr die anderen brauchen? Schwer ist es gut zu leben!! Aber das gute Leben ist sch\\xF6n. \\u201EAber nicht mein sondern dein Wille geschehe.\\u201D \"\n}, {\n    \"manuscript\": \"Ms-103,2v[2]\",\n    \"date\": \"1916-04-02\",\n    \"eng\": \"Was ill. Still very weak today. Today my commander told me that he wanted to have me posted to the rear. If that happens, I\\u2019ll kill myself.\",\n    \"ger\": \"War krank. Heute noch sehr schwach. Heute sagte mir mein Kommandant er wolle mich ins Hinterland abschieben lassen. Wenn das geschieht werde ich mich umbringen.\"\n}, {\n    \"manuscript\": \"Ms-103,3v[1]\",\n    \"date\": \"1916-04-06\",\n    \"eng\": \"Life is a torture from which one is only briefly relieved so as to remain receptive to further torments. A terrible variety of torments. An exhausting march, a night of coughing, a company of drunkards, a company of vile and stupid people. Do good and rejoice in your virtue. Am sick and have a miserable life. God help me. I am a poor unhappy man. God redeem me and give me peace! Amen.\",\n    \"ger\": \"Tortur von der man nur zeitweise heruntergespannt wird um f\\xFCr weitere Qualen empf\\xE4nglich zu bleiben. Ein furchtbares Sortiment von Qualen. Ein ersch\\xF6pfender Marsch, eine durchhustete Nacht, eine Gesellschaft von Besoffenen, eine Gesellschaft von gemeinen und dummen Leuten. Tue Gutes und freue dich \\xFCber deine Tugend. Bin krank und habe ein schlechtes Leben. Gott helfe mir. Ich bin ein armer ungl\\xFCcklicher Mensch. Gott erl\\xF6se mich und schenke mir den Frieden! Amen.\"\n}, {\n    \"manuscript\": \"Ms-103,3v[2] et 4v[1]\",\n    \"date\": \"1916-04-10\",\n    \"eng\": \"Live with difficulty. Haven't been enlightened yet. Saw myself in the mirror today, I am completely haggard! I haven't been able to work any more for a long time.\",\n    \"ger\": \"Lebe mit M\\xFChe. Bin noch nicht erleuchtet / worden. Sah mich heute im Spiegel, ich bin ganz eingefallen! Ich kann ja auch schon lange nicht mehr arbeiten.\"\n}, {\n    \"manuscript\": \"Ms-103,4v[2]\",\n    \"date\": \"1916-04-13\",\n    \"eng\": \"Still stumble and fall in the dark. Haven't been born again yet.\",\n    \"ger\": \"Taumle und falle noch immer im Dunkel. Bin noch nicht zum Leben erwacht.\"\n}, {\n    \"manuscript\": \"Ms-103,4v[3]\",\n    \"date\": \"1916-04-15\",\n    \"eng\": \"In 8 days we\\u2019ll go to the firing line. If only I may be allowed to risk my life in some difficult mission!\",\n    \"ger\": \"In 8 Tagen gehen wir in Feuerstellung. M\\xF6chte es mir verg\\xF6nnt sein mein Leben in einer schweren Aufgabe aufs Spiel zu setzen!\"\n}, {\n    \"manuscript\": \"Ms-103,4v[4]\",\n    \"date\": \"1916-04-16\",\n    \"eng\": \"Since March 22nd completely asexual. The last 2 days were rest days.\",\n    \"ger\": \"Bin seit dem 22.3. vollkommen asexuell. Die letzten 2 Tage Rasttage.\"\n}, {\n    \"manuscript\": \"Ms-103,4v[5]\",\n    \"date\": \"1916-04-18\",\n    \"eng\": \"On the firing line tomorrow or the day after. So pluck up courage! God will help.\",\n    \"ger\": \"Morgen oder \\xFCbermorgen in die Feuerstellung. Also Mut! Gott wird helfen.\"\n}, {\n    \"manuscript\": \"Ms-103,5v[1]\",\n    \"date\": \"1916-04-20\",\n    \"eng\": \"God make me better! Then I'll become happier too.  Probably already in firing line today. God help me. \",\n    \"ger\": \"Gott bessere mich! Dann werde ich auch froher werden. Heute wahrscheinlich schon in Feuerstellung. Gott helfe mir.\"\n}, {\n    \"manuscript\": \"Ms-103,5v[2]\",\n    \"date\": \"1916-04-23\",\n    \"eng\": \"On the firing line for a couple of days. Unable to think due to hard physical labor all day. God help me; I have suffered immensely. Have applied today to be moved to the observation post. Everyone in the squad hates me, because no one understands me. And because I'm no saint! God help me! \",\n    \"ger\": \"Seit ein paar Tagen in Feuerstellung. Den ganzen Tag \\xFCber schwere k\\xF6rperliche Arbeit au\\xDFerstande zu denken. Gott helfe mir; ich habe ungeheuer viel zu leiden. Habe heute angesucht auf den Beobachtungsstand zu kommen. Beim Halbzug ha\\xDFt mich alles weil mich keiner versteht. Und weil ich kein Heiliger bin! Gott helfe mir!\"\n}, {\n    \"manuscript\": \"Ms-103,6v[1]\",\n    \"date\": \"1916-04-26\",\n    \"eng\": \"The battery officers seem to have taken a liking to me. This saves me from much trouble. Thank God. Thy will be done. Thou goest thy way. Thy will be done.\",\n    \"ger\": \"Die Offiziere der Batterie k\\xF6nnen mich scheinbar sehr gut leiden. Dies erspart mir manche Unannehmlichkeit. Gott sei gedankt. Dein Wille geschehe! Geh Du deiner Wege! Dein Wille geschehe!\"\n}, {\n    \"manuscript\": \"Ms-103,6v[2] et 7v[1]\",\n    \"date\": \"1916-04-27\",\n    \"eng\": \"As a volunteer, the crew, with a few exceptions, hate me. So now I\\u2019m almost always surrounded by people who hate me. And this is the only thing that I  still can\\u2019t bear. But the men here are evil and heartless. It\\u2019s almost impossible for me to find a trace of humanity in them. God help me to live. Had a premonition today that there would be an alert tonight. And indeed there is stand-by duty tonight. God be with me. Amen. \",\n    \"ger\": \"Die Mannschaft mit wenigen Ausnahmen ha\\xDFt mich als Freiwilligen. So bin ich jetzt fast immer umgeben von Leuten die mich hassen. Und dies ist das Einzige womit ich mich noch nicht abfinden kann. Hier sind aber b\\xF6se, herzlose Menschen. Es ist mir fast unm\\xF6glich eine Spur von Menschlichkeit in ihnen zu finden. Gott helfe mir zu leben. Hatte / heute eine Ahnung da\\xDF heute nacht Alarm sein werde. Und wirklich ist heute nacht Bereitschaft. Gott sei mit mir! Amen.\"\n}, {\n    \"manuscript\": \"Ms-103,7v[2]\",\n    \"date\": \"1916-04-28\",\n    \"eng\": \"Quiet night. Wrote to Russell. Had a bad dream last night. God protect me.\",\n    \"ger\": \"Nachts Ruhe. Schrieb an Russell. Hatte heute nacht einen schlechten Traum. Gott sch\\xFCtze mich.\"\n}, {\n    \"manuscript\": \"Ms-103,7v[3]\",\n    \"date\": \"1916-04-29\",\n    \"eng\": \"Afternoon with the spotters. Was shot at. Thought of God. Thy will be done. God be with me.\",\n    \"ger\": \"Nachmittag bei den Aufkl\\xE4rern. Wurden beschossen. Dachte an Gott. Dein Wille geschehe! Gott sei mit mir.\"\n}, {\n    \"manuscript\": \"Ms-103,7v[4]\",\n    \"date\": \"1916-04-30\",\n    \"eng\": \"Went to the spotters again today during a surprise burst of fire. Man needs only God. \",\n    \"ger\": \"Gehe heute w\\xE4hrend eines Feuer\\xFCberfalls wieder zu den Aufkl\\xE4rern: Nur Gott braucht der Mensch.\"\n}, {\n    \"manuscript\": \"Ms-103,7v[5] et 8v[1]\",\n    \"date\": \"1916-05-02\",\n    \"eng\": \"Have to defend myself constantly against people\\u2019s nastiness.\",\n    \"ger\": \"Habe mich fortw\\xE4hrend gegen / die Gemeinheit der Leute zu wehren.\"\n}, {\n    \"manuscript\": \"Ms-103,8v[2]\",\n    \"date\": \"1916-05-03\",\n    \"eng\": \"It\\u2019s very hard! God protect me and stand by me. Amen. Would that the bitter cup passed me by. But thy will be done.  The work sleeps in my head.\",\n    \"ger\": \"Habe es schwer! Gott besch\\xFCtze mich und stehe mir bei. Amen. M\\xF6chte der schwerste Kelch an mir vor\\xFCber gehen. Aber Dein Wille geschehe. Die Arbeit schl\\xE4ft in meinem Kopfe.\"\n}, {\n    \"manuscript\": \"Ms-103,8v[3] et 9v[1]\",\n    \"date\": \"1916-05-04\",\n    \"eng\": \"Perhaps tomorrow I will go above with the observers at my request. Only then will the war begin for me. And \\u2013 perhaps \\u2013 life too! Perhaps nearness to death will bring light into my life! May God enlighten me. I am a worm but through God I will become a human being. God stand by me. Amen.\",\n    \"ger\": \"Komme morgen vielleicht auf mein Ansuchen zu den Aufkl\\xE4rern hinauf. Dann wird f\\xFCr mich erst der Krieg anfangen. Und kann sein \\u2013 auch das Leben! Vielleicht bringt mir die N\\xE4he des Todes das Licht des Lebens! M\\xF6chte Gott mich erleuchten! / Ich bin ein Wurm aber durch Gott werde ich zum Menschen. Gott stehe mir bei. Amen.\"\n}, {\n    \"manuscript\": \"Ms-103,9v[2]\",\n    \"date\": \"1916-05-05\",\n    \"eng\": \"Am like the prince in the enchanted castle in the observation post. Now during the day everything is quiet, but at night! It must be frightful there! Will I endure it???? Tonight will tell. God stand by me.\",\n    \"ger\": \"Bin wie der Prinz im verw\\xFCnschten Schlo\\xDF auf dem Aufkl\\xE4rerstand. Jetzt bei Tag ist alles ruhig aber in der Nacht! Da mu\\xDF es f\\xFCrchterlich zugehen! Ob ich es aushalten werde???? Die heutige Nacht wird es zeigen. Gott stehe mir bei!!\"\n}, {\n    \"manuscript\": \"Ms-103,9v[3] et 10v[1]\",\n    \"date\": \"1916-05-06\",\n    \"eng\": \"In constant mortal danger. The night went well, by the grace of God. From time to time I despaired. That is due to a false view of life!   Understand people. Whenever you feel like hating them, try to understand them instead. Live in inner peace. But how do you get to inner peace? Only if I live in a way pleasing to God. Only in this way is it possible to endure life. \",\n    \"ger\": \"In steter Lebensgefahr. Die Nacht verlief durch die Gnade Gottes gut. Von Zeit zu Zeit werde ich verzagt. Das ist die Schuld der falschen / Lebensauffassung!  Verstehe die Menschen! Immer wenn du sie hassen willst trachte sie statt dessen zu verstehen. Lebe im innern Frieden! Wie aber kommst du zum innern Frieden? Nur indem ich Gottgef\\xE4llig lebe! Nur so ist es m\\xF6glich, das Leben zu ertragen.\"\n}];\n\n//# sourceURL=webpack:///./src/verso.js?");

/***/ })

/******/ });